<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.3/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd" version="0.3" xml:lang="en">
  <siteinfo>
    <sitename>denovoassembler</sitename>
    <base>https://sourceforge.net/apps/mediawiki/denovoassembler/index.php?title=Main_Page</base>
    <generator>MediaWiki 1.15.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0" />
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">denovoassembler</namespace>
      <namespace key="5">denovoassembler talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Changes</title>
    <id>9</id>
    <revision>
      <id>107</id>
      <timestamp>2010-04-24T12:36:43Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>Created page with '== 0.0.3 (23 tickets) ==  * initial release, see https://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forumâ€¦'</comment>
      <text xml:space="preserve">== 0.0.3 (23 tickets) ==

* initial release, see
https://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users

== 0.0.4 (12 tickets) ==

* Fixed many bugs in Ray when k is lower than 25 (when k=21, in particular)
(trac #88)
* Fixed segmentation fault when loading helicos data (trac #86)
* Made some changes after analyzing how the word length is impacting the
assembly of the public dataset SRA001125 (trac #81)
* Modified the Parallel_Ray_Engine (now version 0.0.4) to handle mixed
datasets (tested on the public dataset SRA003611) (trac #79)
* Implemented a dead-end detector for unpaired short reads (trac #20)
* Fixed segmentation fault when no input is provided (trac #82)
* Changed Ray's default behavior when no peak is observed in the coverage
(trac #80)
* Added public dataset links on the web page (trac #77)
* Fixed a serious flaw in Parallel_Ray_Engine that led to segmentation faults
(trac #76) (this flaw was kindly reported by Dr Torsten Seemann @  Victorian
 Bioinformatics Consortium -- thank you!)
* Changed the behavior of memory allocators in message passing --
   Ray now reuses allocated memory for ingoing and outgoing messages
   (10 MB for each).
* Added a mummer validation script (r3090)

== 0.0.5 (8 tickets) ==

* Ray now outputs assemblies in AMOS format (with -a), (trac #58)
* Ray commands can be provided with a commands file (like in 0.0.3 and 0.0.4)
as well as with command-line arguments, (trac #94) and
* Ray removes non-A-T-C-G letters at both ends of reads.

== 0.0.6 (22 tickets) ==

* 'make test' now performs unit tests (trac #83)
* 'make simtools' compiles simulation tools (trac #43)
* ignore coverage at 255 or more in the coverage distribution (trac #105)
* reduced number of contigs and error rates (trac #103 #106 #107 #110 #111
#118)
* MPI messages are grouped together in up-to-4096-bytes messages, when
possible (trac #114)
* unroll some loops to gain performance (trac #117)
* scripts included to do benchmarks
* improved AMOS file generation
* corrected the loader for color-space reads (thanks to sparks from
seqanswers.com)
* some code refactoring to reduce the size of Machine.cpp
* Comparison with other assemblers 


== 0.0.7 (25 tickets) ==
 
 * (Small) speed improvement in seed extension (trac #21)
 * Ray can now write to user-specified files -- Huge thanks to Matthew
 MacManes (University of California -- Berkeley) for suggesting this (trac #163)
 * Changed the allocator size to 0x1000000 (trac #162)
 * Ray can now estimate paired distances -- thanks to Torsten
 Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash
 University, AUSTRALIA) for his expertise (trac #159 158 #156 #131)
 * Each MPI process now has a forest of 0x1000 splay trees, which are frozen
 (no more splay operations) after no more items are inserted. (trac #151 #150
 #149)
 * Added running times in comparisons, as wisely suggested by Matthew MacManes
 (University of California -- Berkeley) (trac #136)
 * Ray is now better with a large peak coverage, and is more careful
 otherwise. (trac #135 #134)
 * Some improvements on mix datasets (trac #132)
 * Ray is now robust when parsing arguments, and will complaint if something
 is messy -- thanks to Torsten Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash 
 University, AUSTRALIA) for noticing the issue (trac #129)</text>
    </revision>
    <revision>
      <id>108</id>
      <timestamp>2010-04-24T12:37:44Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">== 0.0.3 (23 tickets) ==

* initial release, see
https://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users

== 0.0.4 (12 tickets) ==

* Fixed many bugs in Ray when k is lower than 25 (when k=21, in particular)
(trac #88)
* Fixed segmentation fault when loading helicos data (trac #86)
* Made some changes after analyzing how the word length is impacting the
assembly of the public dataset SRA001125 (trac #81)
* Modified the Parallel_Ray_Engine (now version 0.0.4) to handle mixed
datasets (tested on the public dataset SRA003611) (trac #79)
* Implemented a dead-end detector for unpaired short reads (trac #20)
* Fixed segmentation fault when no input is provided (trac #82)
* Changed Ray's default behavior when no peak is observed in the coverage
(trac #80)
* Added public dataset links on the web page (trac #77)
* Fixed a serious flaw in Parallel_Ray_Engine that led to segmentation faults
(trac #76) (this flaw was kindly reported by Dr Torsten Seemann @  Victorian
 Bioinformatics Consortium -- thank you!)
* Changed the behavior of memory allocators in message passing --
   Ray now reuses allocated memory for ingoing and outgoing messages
   (10 MB for each).
* Added a mummer validation script (r3090)

== 0.0.5 (8 tickets) ==

* Ray now outputs assemblies in AMOS format (with -a), (trac #58)
* Ray commands can be provided with a commands file (like in 0.0.3 and 0.0.4)
as well as with command-line arguments, (trac #94) and
* Ray removes non-A-T-C-G letters at both ends of reads.

== 0.0.6 (22 tickets) ==

* 'make test' now performs unit tests (trac #83)
* 'make simtools' compiles simulation tools (trac #43)
* ignore coverage at 255 or more in the coverage distribution (trac #105)
* reduced number of contigs and error rates (trac #103 #106 #107 #110 #111
#118)
* MPI messages are grouped together in up-to-4096-bytes messages, when
possible (trac #114)
* unroll some loops to gain performance (trac #117)
* scripts included to do benchmarks
* improved AMOS file generation
* corrected the loader for color-space reads (thanks to sparks from
seqanswers.com)
* some code refactoring to reduce the size of Machine.cpp
* Comparison with other assemblers 


== 0.0.7 (25 tickets) ==

* (Small) speed improvement in seed extension (trac #21)
* Ray can now write to user-specified files -- Huge thanks to Matthew
MacManes (University of California -- Berkeley) for suggesting this (trac #163)
* Changed the allocator size to 0x1000000 (trac #162)
* Ray can now estimate paired distances -- thanks to Torsten
Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash
University, AUSTRALIA) for his expertise (trac #159 158 #156 #131)
* Each MPI process now has a forest of 0x1000 splay trees, which are frozen
(no more splay operations) after no more items are inserted. (trac #151 #150
#149)
* Added running times in comparisons, as wisely suggested by Matthew MacManes
(University of California -- Berkeley) (trac #136)
* Ray is now better with a large peak coverage, and is more careful
otherwise. (trac #135 #134)
* Some improvements on mix datasets (trac #132)
* Ray is now robust when parsing arguments, and will complaint if something
is messy -- thanks to Torsten Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash 
University, AUSTRALIA) for noticing the issue (trac #129)</text>
    </revision>
    <revision>
      <id>109</id>
      <timestamp>2010-04-24T12:38:19Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">== 0.0.3 (23 tickets) ==

* initial release, see
https://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users

== 0.0.4 (12 tickets) ==

* Fixed many bugs in Ray when k is lower than 25 (when k=21, in particular)
(trac #88)
* Fixed segmentation fault when loading helicos data (trac #86)
* Made some changes after analyzing how the word length is impacting the
assembly of the public dataset SRA001125 (trac #81)
* Modified the Parallel_Ray_Engine (now version 0.0.4) to handle mixed
datasets (tested on the public dataset SRA003611) (trac #79)
* Implemented a dead-end detector for unpaired short reads (trac #20)
* Fixed segmentation fault when no input is provided (trac #82)
* Changed Ray's default behavior when no peak is observed in the coverage
(trac #80)
* Added public dataset links on the web page (trac #77)
* Fixed a serious flaw in Parallel_Ray_Engine that led to segmentation faults
(trac #76) (this flaw was kindly reported by Dr Torsten Seemann @  Victorian
Bioinformatics Consortium -- thank you!)
* Changed the behavior of memory allocators in message passing --
Ray now reuses allocated memory for ingoing and outgoing messages
(10 MB for each).
* Added a mummer validation script (r3090)

== 0.0.5 (8 tickets) ==

* Ray now outputs assemblies in AMOS format (with -a), (trac #58)
* Ray commands can be provided with a commands file (like in 0.0.3 and 0.0.4)
as well as with command-line arguments, (trac #94) and
* Ray removes non-A-T-C-G letters at both ends of reads.

== 0.0.6 (22 tickets) ==

* 'make test' now performs unit tests (trac #83)
* 'make simtools' compiles simulation tools (trac #43)
* ignore coverage at 255 or more in the coverage distribution (trac #105)
* reduced number of contigs and error rates (trac #103 #106 #107 #110 #111
#118)
* MPI messages are grouped together in up-to-4096-bytes messages, when
possible (trac #114)
* unroll some loops to gain performance (trac #117)
* scripts included to do benchmarks
* improved AMOS file generation
* corrected the loader for color-space reads (thanks to sparks from
seqanswers.com)
* some code refactoring to reduce the size of Machine.cpp
* Comparison with other assemblers 


== 0.0.7 (25 tickets) ==

* (Small) speed improvement in seed extension (trac #21)
* Ray can now write to user-specified files -- Huge thanks to Matthew
MacManes (University of California -- Berkeley) for suggesting this (trac #163)
* Changed the allocator size to 0x1000000 (trac #162)
* Ray can now estimate paired distances -- thanks to Torsten
Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash
University, AUSTRALIA) for his expertise (trac #159 158 #156 #131)
* Each MPI process now has a forest of 0x1000 splay trees, which are frozen
(no more splay operations) after no more items are inserted. (trac #151 #150
#149)
* Added running times in comparisons, as wisely suggested by Matthew MacManes
(University of California -- Berkeley) (trac #136)
* Ray is now better with a large peak coverage, and is more careful
otherwise. (trac #135 #134)
* Some improvements on mix datasets (trac #132)
* Ray is now robust when parsing arguments, and will complaint if something
is messy -- thanks to Torsten Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash 
University, AUSTRALIA) for noticing the issue (trac #129)</text>
    </revision>
    <revision>
      <id>110</id>
      <timestamp>2010-04-24T12:39:07Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* 0.0.4 (12 tickets) */</comment>
      <text xml:space="preserve">== 0.0.3 (23 tickets) ==

* initial release, see
https://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users

== 0.0.4 (12 tickets) ==

* Fixed many bugs in Ray when k is lower than 25 (when k=21, in particular)
(trac #88)
* Fixed segmentation fault when loading helicos data (trac #86)
* Made some changes after analyzing how the word length is impacting the
assembly of the public dataset SRA001125 (trac #81)
* Modified the Parallel_Ray_Engine (now version 0.0.4) to handle mixed
datasets (tested on the public dataset SRA003611) (trac #79)
* Implemented a dead-end detector for unpaired short reads (trac #20)
* Fixed segmentation fault when no input is provided (trac #82)
* Changed Ray's default behavior when no peak is observed in the coverage
(trac #80)
* Added public dataset links on the web page (trac #77)
* Fixed a serious flaw in Parallel_Ray_Engine that led to segmentation faults
(trac #76) (this flaw was kindly reported by Dr Torsten Seemann @  Victorian
Bioinformatics Consortium -- thank you!)
* Changed the behavior of memory allocators in message passing --
Ray now reuses allocated memory for ingoing and outgoing messages
(10 MB for each).
* Added a mummer validation script (r3090)

see http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EF3%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users

== 0.0.5 (8 tickets) ==

* Ray now outputs assemblies in AMOS format (with -a), (trac #58)
* Ray commands can be provided with a commands file (like in 0.0.3 and 0.0.4)
as well as with command-line arguments, (trac #94) and
* Ray removes non-A-T-C-G letters at both ends of reads.

== 0.0.6 (22 tickets) ==

* 'make test' now performs unit tests (trac #83)
* 'make simtools' compiles simulation tools (trac #43)
* ignore coverage at 255 or more in the coverage distribution (trac #105)
* reduced number of contigs and error rates (trac #103 #106 #107 #110 #111
#118)
* MPI messages are grouped together in up-to-4096-bytes messages, when
possible (trac #114)
* unroll some loops to gain performance (trac #117)
* scripts included to do benchmarks
* improved AMOS file generation
* corrected the loader for color-space reads (thanks to sparks from
seqanswers.com)
* some code refactoring to reduce the size of Machine.cpp
* Comparison with other assemblers 


== 0.0.7 (25 tickets) ==

* (Small) speed improvement in seed extension (trac #21)
* Ray can now write to user-specified files -- Huge thanks to Matthew
MacManes (University of California -- Berkeley) for suggesting this (trac #163)
* Changed the allocator size to 0x1000000 (trac #162)
* Ray can now estimate paired distances -- thanks to Torsten
Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash
University, AUSTRALIA) for his expertise (trac #159 158 #156 #131)
* Each MPI process now has a forest of 0x1000 splay trees, which are frozen
(no more splay operations) after no more items are inserted. (trac #151 #150
#149)
* Added running times in comparisons, as wisely suggested by Matthew MacManes
(University of California -- Berkeley) (trac #136)
* Ray is now better with a large peak coverage, and is more careful
otherwise. (trac #135 #134)
* Some improvements on mix datasets (trac #132)
* Ray is now robust when parsing arguments, and will complaint if something
is messy -- thanks to Torsten Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash 
University, AUSTRALIA) for noticing the issue (trac #129)</text>
    </revision>
    <revision>
      <id>111</id>
      <timestamp>2010-04-24T12:39:19Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* 0.0.4 (12 tickets) */</comment>
      <text xml:space="preserve">== 0.0.3 (23 tickets) ==

* initial release, see
https://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users

== 0.0.4 (12 tickets) ==

* Fixed many bugs in Ray when k is lower than 25 (when k=21, in particular)
(trac #88)
* Fixed segmentation fault when loading helicos data (trac #86)
* Made some changes after analyzing how the word length is impacting the
assembly of the public dataset SRA001125 (trac #81)
* Modified the Parallel_Ray_Engine (now version 0.0.4) to handle mixed
datasets (tested on the public dataset SRA003611) (trac #79)
* Implemented a dead-end detector for unpaired short reads (trac #20)
* Fixed segmentation fault when no input is provided (trac #82)
* Changed Ray's default behavior when no peak is observed in the coverage
(trac #80)
* Added public dataset links on the web page (trac #77)
* Fixed a serious flaw in Parallel_Ray_Engine that led to segmentation faults
(trac #76) (this flaw was kindly reported by Dr Torsten Seemann @  Victorian
Bioinformatics Consortium -- thank you!)
* Changed the behavior of memory allocators in message passing --
Ray now reuses allocated memory for ingoing and outgoing messages
(10 MB for each).
* Added a mummer validation script (r3090)


see http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EF3%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users

== 0.0.5 (8 tickets) ==

* Ray now outputs assemblies in AMOS format (with -a), (trac #58)
* Ray commands can be provided with a commands file (like in 0.0.3 and 0.0.4)
as well as with command-line arguments, (trac #94) and
* Ray removes non-A-T-C-G letters at both ends of reads.

== 0.0.6 (22 tickets) ==

* 'make test' now performs unit tests (trac #83)
* 'make simtools' compiles simulation tools (trac #43)
* ignore coverage at 255 or more in the coverage distribution (trac #105)
* reduced number of contigs and error rates (trac #103 #106 #107 #110 #111
#118)
* MPI messages are grouped together in up-to-4096-bytes messages, when
possible (trac #114)
* unroll some loops to gain performance (trac #117)
* scripts included to do benchmarks
* improved AMOS file generation
* corrected the loader for color-space reads (thanks to sparks from
seqanswers.com)
* some code refactoring to reduce the size of Machine.cpp
* Comparison with other assemblers 


== 0.0.7 (25 tickets) ==

* (Small) speed improvement in seed extension (trac #21)
* Ray can now write to user-specified files -- Huge thanks to Matthew
MacManes (University of California -- Berkeley) for suggesting this (trac #163)
* Changed the allocator size to 0x1000000 (trac #162)
* Ray can now estimate paired distances -- thanks to Torsten
Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash
University, AUSTRALIA) for his expertise (trac #159 158 #156 #131)
* Each MPI process now has a forest of 0x1000 splay trees, which are frozen
(no more splay operations) after no more items are inserted. (trac #151 #150
#149)
* Added running times in comparisons, as wisely suggested by Matthew MacManes
(University of California -- Berkeley) (trac #136)
* Ray is now better with a large peak coverage, and is more careful
otherwise. (trac #135 #134)
* Some improvements on mix datasets (trac #132)
* Ray is now robust when parsing arguments, and will complaint if something
is messy -- thanks to Torsten Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash 
University, AUSTRALIA) for noticing the issue (trac #129)</text>
    </revision>
    <revision>
      <id>112</id>
      <timestamp>2010-04-24T12:39:43Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* 0.0.3 (23 tickets) */</comment>
      <text xml:space="preserve">== 0.0.3 (23 tickets) ==

* initial release, see
[http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.4 (12 tickets) ==

* Fixed many bugs in Ray when k is lower than 25 (when k=21, in particular)
(trac #88)
* Fixed segmentation fault when loading helicos data (trac #86)
* Made some changes after analyzing how the word length is impacting the
assembly of the public dataset SRA001125 (trac #81)
* Modified the Parallel_Ray_Engine (now version 0.0.4) to handle mixed
datasets (tested on the public dataset SRA003611) (trac #79)
* Implemented a dead-end detector for unpaired short reads (trac #20)
* Fixed segmentation fault when no input is provided (trac #82)
* Changed Ray's default behavior when no peak is observed in the coverage
(trac #80)
* Added public dataset links on the web page (trac #77)
* Fixed a serious flaw in Parallel_Ray_Engine that led to segmentation faults
(trac #76) (this flaw was kindly reported by Dr Torsten Seemann @  Victorian
Bioinformatics Consortium -- thank you!)
* Changed the behavior of memory allocators in message passing --
Ray now reuses allocated memory for ingoing and outgoing messages
(10 MB for each).
* Added a mummer validation script (r3090)


see http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EF3%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users

== 0.0.5 (8 tickets) ==

* Ray now outputs assemblies in AMOS format (with -a), (trac #58)
* Ray commands can be provided with a commands file (like in 0.0.3 and 0.0.4)
as well as with command-line arguments, (trac #94) and
* Ray removes non-A-T-C-G letters at both ends of reads.

== 0.0.6 (22 tickets) ==

* 'make test' now performs unit tests (trac #83)
* 'make simtools' compiles simulation tools (trac #43)
* ignore coverage at 255 or more in the coverage distribution (trac #105)
* reduced number of contigs and error rates (trac #103 #106 #107 #110 #111
#118)
* MPI messages are grouped together in up-to-4096-bytes messages, when
possible (trac #114)
* unroll some loops to gain performance (trac #117)
* scripts included to do benchmarks
* improved AMOS file generation
* corrected the loader for color-space reads (thanks to sparks from
seqanswers.com)
* some code refactoring to reduce the size of Machine.cpp
* Comparison with other assemblers 


== 0.0.7 (25 tickets) ==

* (Small) speed improvement in seed extension (trac #21)
* Ray can now write to user-specified files -- Huge thanks to Matthew
MacManes (University of California -- Berkeley) for suggesting this (trac #163)
* Changed the allocator size to 0x1000000 (trac #162)
* Ray can now estimate paired distances -- thanks to Torsten
Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash
University, AUSTRALIA) for his expertise (trac #159 158 #156 #131)
* Each MPI process now has a forest of 0x1000 splay trees, which are frozen
(no more splay operations) after no more items are inserted. (trac #151 #150
#149)
* Added running times in comparisons, as wisely suggested by Matthew MacManes
(University of California -- Berkeley) (trac #136)
* Ray is now better with a large peak coverage, and is more careful
otherwise. (trac #135 #134)
* Some improvements on mix datasets (trac #132)
* Ray is now robust when parsing arguments, and will complaint if something
is messy -- thanks to Torsten Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash 
University, AUSTRALIA) for noticing the issue (trac #129)</text>
    </revision>
    <revision>
      <id>113</id>
      <timestamp>2010-04-24T12:39:57Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* 0.0.3 (23 tickets) */</comment>
      <text xml:space="preserve">== 0.0.3 (23 tickets) ==

* initial release

see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.4 (12 tickets) ==

* Fixed many bugs in Ray when k is lower than 25 (when k=21, in particular)
(trac #88)
* Fixed segmentation fault when loading helicos data (trac #86)
* Made some changes after analyzing how the word length is impacting the
assembly of the public dataset SRA001125 (trac #81)
* Modified the Parallel_Ray_Engine (now version 0.0.4) to handle mixed
datasets (tested on the public dataset SRA003611) (trac #79)
* Implemented a dead-end detector for unpaired short reads (trac #20)
* Fixed segmentation fault when no input is provided (trac #82)
* Changed Ray's default behavior when no peak is observed in the coverage
(trac #80)
* Added public dataset links on the web page (trac #77)
* Fixed a serious flaw in Parallel_Ray_Engine that led to segmentation faults
(trac #76) (this flaw was kindly reported by Dr Torsten Seemann @  Victorian
Bioinformatics Consortium -- thank you!)
* Changed the behavior of memory allocators in message passing --
Ray now reuses allocated memory for ingoing and outgoing messages
(10 MB for each).
* Added a mummer validation script (r3090)


see http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EF3%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users

== 0.0.5 (8 tickets) ==

* Ray now outputs assemblies in AMOS format (with -a), (trac #58)
* Ray commands can be provided with a commands file (like in 0.0.3 and 0.0.4)
as well as with command-line arguments, (trac #94) and
* Ray removes non-A-T-C-G letters at both ends of reads.

== 0.0.6 (22 tickets) ==

* 'make test' now performs unit tests (trac #83)
* 'make simtools' compiles simulation tools (trac #43)
* ignore coverage at 255 or more in the coverage distribution (trac #105)
* reduced number of contigs and error rates (trac #103 #106 #107 #110 #111
#118)
* MPI messages are grouped together in up-to-4096-bytes messages, when
possible (trac #114)
* unroll some loops to gain performance (trac #117)
* scripts included to do benchmarks
* improved AMOS file generation
* corrected the loader for color-space reads (thanks to sparks from
seqanswers.com)
* some code refactoring to reduce the size of Machine.cpp
* Comparison with other assemblers 


== 0.0.7 (25 tickets) ==

* (Small) speed improvement in seed extension (trac #21)
* Ray can now write to user-specified files -- Huge thanks to Matthew
MacManes (University of California -- Berkeley) for suggesting this (trac #163)
* Changed the allocator size to 0x1000000 (trac #162)
* Ray can now estimate paired distances -- thanks to Torsten
Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash
University, AUSTRALIA) for his expertise (trac #159 158 #156 #131)
* Each MPI process now has a forest of 0x1000 splay trees, which are frozen
(no more splay operations) after no more items are inserted. (trac #151 #150
#149)
* Added running times in comparisons, as wisely suggested by Matthew MacManes
(University of California -- Berkeley) (trac #136)
* Ray is now better with a large peak coverage, and is more careful
otherwise. (trac #135 #134)
* Some improvements on mix datasets (trac #132)
* Ray is now robust when parsing arguments, and will complaint if something
is messy -- thanks to Torsten Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash 
University, AUSTRALIA) for noticing the issue (trac #129)</text>
    </revision>
    <revision>
      <id>114</id>
      <timestamp>2010-04-24T12:40:13Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* 0.0.3 (23 tickets) */</comment>
      <text xml:space="preserve">== 0.0.3 (23 tickets) ==

* initial release


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.4 (12 tickets) ==

* Fixed many bugs in Ray when k is lower than 25 (when k=21, in particular)
(trac #88)
* Fixed segmentation fault when loading helicos data (trac #86)
* Made some changes after analyzing how the word length is impacting the
assembly of the public dataset SRA001125 (trac #81)
* Modified the Parallel_Ray_Engine (now version 0.0.4) to handle mixed
datasets (tested on the public dataset SRA003611) (trac #79)
* Implemented a dead-end detector for unpaired short reads (trac #20)
* Fixed segmentation fault when no input is provided (trac #82)
* Changed Ray's default behavior when no peak is observed in the coverage
(trac #80)
* Added public dataset links on the web page (trac #77)
* Fixed a serious flaw in Parallel_Ray_Engine that led to segmentation faults
(trac #76) (this flaw was kindly reported by Dr Torsten Seemann @  Victorian
Bioinformatics Consortium -- thank you!)
* Changed the behavior of memory allocators in message passing --
Ray now reuses allocated memory for ingoing and outgoing messages
(10 MB for each).
* Added a mummer validation script (r3090)


see http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EF3%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users

== 0.0.5 (8 tickets) ==

* Ray now outputs assemblies in AMOS format (with -a), (trac #58)
* Ray commands can be provided with a commands file (like in 0.0.3 and 0.0.4)
as well as with command-line arguments, (trac #94) and
* Ray removes non-A-T-C-G letters at both ends of reads.

== 0.0.6 (22 tickets) ==

* 'make test' now performs unit tests (trac #83)
* 'make simtools' compiles simulation tools (trac #43)
* ignore coverage at 255 or more in the coverage distribution (trac #105)
* reduced number of contigs and error rates (trac #103 #106 #107 #110 #111
#118)
* MPI messages are grouped together in up-to-4096-bytes messages, when
possible (trac #114)
* unroll some loops to gain performance (trac #117)
* scripts included to do benchmarks
* improved AMOS file generation
* corrected the loader for color-space reads (thanks to sparks from
seqanswers.com)
* some code refactoring to reduce the size of Machine.cpp
* Comparison with other assemblers 


== 0.0.7 (25 tickets) ==

* (Small) speed improvement in seed extension (trac #21)
* Ray can now write to user-specified files -- Huge thanks to Matthew
MacManes (University of California -- Berkeley) for suggesting this (trac #163)
* Changed the allocator size to 0x1000000 (trac #162)
* Ray can now estimate paired distances -- thanks to Torsten
Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash
University, AUSTRALIA) for his expertise (trac #159 158 #156 #131)
* Each MPI process now has a forest of 0x1000 splay trees, which are frozen
(no more splay operations) after no more items are inserted. (trac #151 #150
#149)
* Added running times in comparisons, as wisely suggested by Matthew MacManes
(University of California -- Berkeley) (trac #136)
* Ray is now better with a large peak coverage, and is more careful
otherwise. (trac #135 #134)
* Some improvements on mix datasets (trac #132)
* Ray is now robust when parsing arguments, and will complaint if something
is messy -- thanks to Torsten Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash 
University, AUSTRALIA) for noticing the issue (trac #129)</text>
    </revision>
    <revision>
      <id>115</id>
      <timestamp>2010-04-24T12:40:31Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* 0.0.4 (12 tickets) */</comment>
      <text xml:space="preserve">== 0.0.3 (23 tickets) ==

* initial release


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.4 (12 tickets) ==

* Fixed many bugs in Ray when k is lower than 25 (when k=21, in particular)
(trac #88)
* Fixed segmentation fault when loading helicos data (trac #86)
* Made some changes after analyzing how the word length is impacting the
assembly of the public dataset SRA001125 (trac #81)
* Modified the Parallel_Ray_Engine (now version 0.0.4) to handle mixed
datasets (tested on the public dataset SRA003611) (trac #79)
* Implemented a dead-end detector for unpaired short reads (trac #20)
* Fixed segmentation fault when no input is provided (trac #82)
* Changed Ray's default behavior when no peak is observed in the coverage
(trac #80)
* Added public dataset links on the web page (trac #77)
* Fixed a serious flaw in Parallel_Ray_Engine that led to segmentation faults
(trac #76) (this flaw was kindly reported by Dr Torsten Seemann @  Victorian
Bioinformatics Consortium -- thank you!)
* Changed the behavior of memory allocators in message passing --
Ray now reuses allocated memory for ingoing and outgoing messages
(10 MB for each).
* Added a mummer validation script (r3090)


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EF3%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.5 (8 tickets) ==

* Ray now outputs assemblies in AMOS format (with -a), (trac #58)
* Ray commands can be provided with a commands file (like in 0.0.3 and 0.0.4)
as well as with command-line arguments, (trac #94) and
* Ray removes non-A-T-C-G letters at both ends of reads.

== 0.0.6 (22 tickets) ==

* 'make test' now performs unit tests (trac #83)
* 'make simtools' compiles simulation tools (trac #43)
* ignore coverage at 255 or more in the coverage distribution (trac #105)
* reduced number of contigs and error rates (trac #103 #106 #107 #110 #111
#118)
* MPI messages are grouped together in up-to-4096-bytes messages, when
possible (trac #114)
* unroll some loops to gain performance (trac #117)
* scripts included to do benchmarks
* improved AMOS file generation
* corrected the loader for color-space reads (thanks to sparks from
seqanswers.com)
* some code refactoring to reduce the size of Machine.cpp
* Comparison with other assemblers 


== 0.0.7 (25 tickets) ==

* (Small) speed improvement in seed extension (trac #21)
* Ray can now write to user-specified files -- Huge thanks to Matthew
MacManes (University of California -- Berkeley) for suggesting this (trac #163)
* Changed the allocator size to 0x1000000 (trac #162)
* Ray can now estimate paired distances -- thanks to Torsten
Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash
University, AUSTRALIA) for his expertise (trac #159 158 #156 #131)
* Each MPI process now has a forest of 0x1000 splay trees, which are frozen
(no more splay operations) after no more items are inserted. (trac #151 #150
#149)
* Added running times in comparisons, as wisely suggested by Matthew MacManes
(University of California -- Berkeley) (trac #136)
* Ray is now better with a large peak coverage, and is more careful
otherwise. (trac #135 #134)
* Some improvements on mix datasets (trac #132)
* Ray is now robust when parsing arguments, and will complaint if something
is messy -- thanks to Torsten Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash 
University, AUSTRALIA) for noticing the issue (trac #129)</text>
    </revision>
    <revision>
      <id>116</id>
      <timestamp>2010-04-24T12:40:59Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* 0.0.5 (8 tickets) */</comment>
      <text xml:space="preserve">== 0.0.3 (23 tickets) ==

* initial release


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.4 (12 tickets) ==

* Fixed many bugs in Ray when k is lower than 25 (when k=21, in particular)
(trac #88)
* Fixed segmentation fault when loading helicos data (trac #86)
* Made some changes after analyzing how the word length is impacting the
assembly of the public dataset SRA001125 (trac #81)
* Modified the Parallel_Ray_Engine (now version 0.0.4) to handle mixed
datasets (tested on the public dataset SRA003611) (trac #79)
* Implemented a dead-end detector for unpaired short reads (trac #20)
* Fixed segmentation fault when no input is provided (trac #82)
* Changed Ray's default behavior when no peak is observed in the coverage
(trac #80)
* Added public dataset links on the web page (trac #77)
* Fixed a serious flaw in Parallel_Ray_Engine that led to segmentation faults
(trac #76) (this flaw was kindly reported by Dr Torsten Seemann @  Victorian
Bioinformatics Consortium -- thank you!)
* Changed the behavior of memory allocators in message passing --
Ray now reuses allocated memory for ingoing and outgoing messages
(10 MB for each).
* Added a mummer validation script (r3090)


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EF3%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.5 (8 tickets) ==

* Ray now outputs assemblies in AMOS format (with -a), (trac #58)
* Ray commands can be provided with a commands file (like in 0.0.3 and 0.0.4)
as well as with command-line arguments, (trac #94) and
* Ray removes non-A-T-C-G letters at both ends of reads.


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96F1A%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.6 (22 tickets) ==

* 'make test' now performs unit tests (trac #83)
* 'make simtools' compiles simulation tools (trac #43)
* ignore coverage at 255 or more in the coverage distribution (trac #105)
* reduced number of contigs and error rates (trac #103 #106 #107 #110 #111
#118)
* MPI messages are grouped together in up-to-4096-bytes messages, when
possible (trac #114)
* unroll some loops to gain performance (trac #117)
* scripts included to do benchmarks
* improved AMOS file generation
* corrected the loader for color-space reads (thanks to sparks from
seqanswers.com)
* some code refactoring to reduce the size of Machine.cpp
* Comparison with other assemblers 


== 0.0.7 (25 tickets) ==

* (Small) speed improvement in seed extension (trac #21)
* Ray can now write to user-specified files -- Huge thanks to Matthew
MacManes (University of California -- Berkeley) for suggesting this (trac #163)
* Changed the allocator size to 0x1000000 (trac #162)
* Ray can now estimate paired distances -- thanks to Torsten
Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash
University, AUSTRALIA) for his expertise (trac #159 158 #156 #131)
* Each MPI process now has a forest of 0x1000 splay trees, which are frozen
(no more splay operations) after no more items are inserted. (trac #151 #150
#149)
* Added running times in comparisons, as wisely suggested by Matthew MacManes
(University of California -- Berkeley) (trac #136)
* Ray is now better with a large peak coverage, and is more careful
otherwise. (trac #135 #134)
* Some improvements on mix datasets (trac #132)
* Ray is now robust when parsing arguments, and will complaint if something
is messy -- thanks to Torsten Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash 
University, AUSTRALIA) for noticing the issue (trac #129)</text>
    </revision>
    <revision>
      <id>117</id>
      <timestamp>2010-04-24T12:41:28Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* 0.0.6 (22 tickets) */</comment>
      <text xml:space="preserve">== 0.0.3 (23 tickets) ==

* initial release


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.4 (12 tickets) ==

* Fixed many bugs in Ray when k is lower than 25 (when k=21, in particular)
(trac #88)
* Fixed segmentation fault when loading helicos data (trac #86)
* Made some changes after analyzing how the word length is impacting the
assembly of the public dataset SRA001125 (trac #81)
* Modified the Parallel_Ray_Engine (now version 0.0.4) to handle mixed
datasets (tested on the public dataset SRA003611) (trac #79)
* Implemented a dead-end detector for unpaired short reads (trac #20)
* Fixed segmentation fault when no input is provided (trac #82)
* Changed Ray's default behavior when no peak is observed in the coverage
(trac #80)
* Added public dataset links on the web page (trac #77)
* Fixed a serious flaw in Parallel_Ray_Engine that led to segmentation faults
(trac #76) (this flaw was kindly reported by Dr Torsten Seemann @  Victorian
Bioinformatics Consortium -- thank you!)
* Changed the behavior of memory allocators in message passing --
Ray now reuses allocated memory for ingoing and outgoing messages
(10 MB for each).
* Added a mummer validation script (r3090)


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EF3%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.5 (8 tickets) ==

* Ray now outputs assemblies in AMOS format (with -a), (trac #58)
* Ray commands can be provided with a commands file (like in 0.0.3 and 0.0.4)
as well as with command-line arguments, (trac #94) and
* Ray removes non-A-T-C-G letters at both ends of reads.


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96F1A%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.6 (22 tickets) ==

* 'make test' now performs unit tests (trac #83)
* 'make simtools' compiles simulation tools (trac #43)
* ignore coverage at 255 or more in the coverage distribution (trac #105)
* reduced number of contigs and error rates (trac #103 #106 #107 #110 #111
#118)
* MPI messages are grouped together in up-to-4096-bytes messages, when
possible (trac #114)
* unroll some loops to gain performance (trac #117)
* scripts included to do benchmarks
* improved AMOS file generation
* corrected the loader for color-space reads (thanks to sparks from
seqanswers.com)
* some code refactoring to reduce the size of Machine.cpp
* Comparison with other assemblers


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96F50%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.7 (25 tickets) ==

* (Small) speed improvement in seed extension (trac #21)
* Ray can now write to user-specified files -- Huge thanks to Matthew
MacManes (University of California -- Berkeley) for suggesting this (trac #163)
* Changed the allocator size to 0x1000000 (trac #162)
* Ray can now estimate paired distances -- thanks to Torsten
Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash
University, AUSTRALIA) for his expertise (trac #159 158 #156 #131)
* Each MPI process now has a forest of 0x1000 splay trees, which are frozen
(no more splay operations) after no more items are inserted. (trac #151 #150
#149)
* Added running times in comparisons, as wisely suggested by Matthew MacManes
(University of California -- Berkeley) (trac #136)
* Ray is now better with a large peak coverage, and is more careful
otherwise. (trac #135 #134)
* Some improvements on mix datasets (trac #132)
* Ray is now robust when parsing arguments, and will complaint if something
is messy -- thanks to Torsten Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash 
University, AUSTRALIA) for noticing the issue (trac #129)</text>
    </revision>
    <revision>
      <id>118</id>
      <timestamp>2010-04-24T12:42:23Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* 0.0.7 (25 tickets) */</comment>
      <text xml:space="preserve">== 0.0.3 (23 tickets) ==

* initial release


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EA7%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.4 (12 tickets) ==

* Fixed many bugs in Ray when k is lower than 25 (when k=21, in particular)
(trac #88)
* Fixed segmentation fault when loading helicos data (trac #86)
* Made some changes after analyzing how the word length is impacting the
assembly of the public dataset SRA001125 (trac #81)
* Modified the Parallel_Ray_Engine (now version 0.0.4) to handle mixed
datasets (tested on the public dataset SRA003611) (trac #79)
* Implemented a dead-end detector for unpaired short reads (trac #20)
* Fixed segmentation fault when no input is provided (trac #82)
* Changed Ray's default behavior when no peak is observed in the coverage
(trac #80)
* Added public dataset links on the web page (trac #77)
* Fixed a serious flaw in Parallel_Ray_Engine that led to segmentation faults
(trac #76) (this flaw was kindly reported by Dr Torsten Seemann @  Victorian
Bioinformatics Consortium -- thank you!)
* Changed the behavior of memory allocators in message passing --
Ray now reuses allocated memory for ingoing and outgoing messages
(10 MB for each).
* Added a mummer validation script (r3090)


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96EF3%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.5 (8 tickets) ==

* Ray now outputs assemblies in AMOS format (with -a), (trac #58)
* Ray commands can be provided with a commands file (like in 0.0.3 and 0.0.4)
as well as with command-line arguments, (trac #94) and
* Ray removes non-A-T-C-G letters at both ends of reads.


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96F1A%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.6 (22 tickets) ==

* 'make test' now performs unit tests (trac #83)
* 'make simtools' compiles simulation tools (trac #43)
* ignore coverage at 255 or more in the coverage distribution (trac #105)
* reduced number of contigs and error rates (trac #103 #106 #107 #110 #111
#118)
* MPI messages are grouped together in up-to-4096-bytes messages, when
possible (trac #114)
* unroll some loops to gain performance (trac #117)
* scripts included to do benchmarks
* improved AMOS file generation
* corrected the loader for color-space reads (thanks to sparks from
seqanswers.com)
* some code refactoring to reduce the size of Machine.cpp
* Comparison with other assemblers


see [http://sourceforge.net/mailarchive/forum.php?thread_name=C4217F2ABFA5D44BA8F3DCD899E5B0C8E42ED96F50%40EXCH-MBX-F.ulaval.ca&amp;forum_name=denovoassembler-users mailing list]

== 0.0.7 (25 tickets) ==

* (Small) speed improvement in seed extension (trac #21)
* Ray can now write to user-specified files -- Huge thanks to Matthew
MacManes (University of California -- Berkeley) for suggesting this (trac #163)
* Changed the allocator size to 0x1000000 (trac #162)
* Ray can now estimate paired distances -- thanks to Torsten
Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash
University, AUSTRALIA) for his expertise (trac #159 158 #156 #131)
* Each MPI process now has a forest of 0x1000 splay trees, which are frozen
(no more splay operations) after no more items are inserted. (trac #151 #150 #149)
* Added running times in comparisons, as wisely suggested by Matthew MacManes
(University of California -- Berkeley) (trac #136)
* Ray is now better with a large peak coverage, and is more careful
otherwise. (trac #135 #134)
* Some improvements on mix datasets (trac #132)
* Ray is now robust when parsing arguments, and will complaint if something
is messy -- thanks to Torsten Seemann (Victorian Bioinformatics Consortium, Dept. Microbiology, Monash 
University, AUSTRALIA) for noticing the issue (trac #129)</text>
    </revision>
  </page>
  <page>
    <title>Comparisons for Ray 0.0.7</title>
    <id>10</id>
    <revision>
      <id>120</id>
      <timestamp>2010-04-24T12:44:38Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>Created page with '     &lt;h2 id=&quot;Rayversion&quot;&gt;Ray version&lt;/h2&gt; &lt;pre class=&quot;wiki&quot;&gt;AssemblyEngine: Ray 0.0.7 NumberOfRanks: 25 MPILibrary: Open-MPI 1.4.1 OperatingSystem: Linux &lt;/pre&gt;&lt;h2 id=&quot;Assemblersâ€¦'</comment>
      <text xml:space="preserve">     &lt;h2 id=&quot;Rayversion&quot;&gt;Ray version&lt;/h2&gt;
&lt;pre class=&quot;wiki&quot;&gt;AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux
&lt;/pre&gt;&lt;h2 id=&quot;Assemblers&quot;&gt;Assemblers&lt;/h2&gt;
&lt;pre class=&quot;wiki&quot;&gt;nproc=25
velvetVersion=0.7.61
eulerVersion=1.1.2
newblerVersion=2.0.00.20
rayVersion=0.0.7
abyssVersion=1.1.2
wordSize=21

&lt;/pre&gt;&lt;h2 id=&quot;Datasets&quot;&gt;Datasets&lt;/h2&gt;
&lt;pre class=&quot;wiki&quot;&gt;    *  Simulated datasets
          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)
          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)
          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)
          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)
          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)
          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)
          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)
          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) 
    * Mixed set 1: E. coli K-12 MG1655 
          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
    * Mixed set 2: Acinetobacter sp. ADP1 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)
    * Mixed set 3: Cryptobacterium curtum DSM 15641 (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)
    * Illumina-only paired datasets
          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) 

&lt;/pre&gt;&lt;h2 id=&quot;Comparisons&quot;&gt;Comparisons&lt;/h2&gt;
&lt;table border=&quot;1&quot;&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;261&lt;/td&gt;&lt;td&gt;1967594&lt;/td&gt;&lt;td&gt;7538&lt;/td&gt;&lt;td&gt;11621&lt;/td&gt;&lt;td&gt;61396&lt;/td&gt;&lt;td&gt;0.9419&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;7m22.779s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;280&lt;/td&gt;&lt;td&gt;1917129&lt;/td&gt;&lt;td&gt;6846&lt;/td&gt;&lt;td&gt;11279&lt;/td&gt;&lt;td&gt;44362&lt;/td&gt;&lt;td&gt;0.9437&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;2m15.931s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1954999&lt;/td&gt;&lt;td&gt;7548&lt;/td&gt;&lt;td&gt;11561&lt;/td&gt;&lt;td&gt;77867&lt;/td&gt;&lt;td&gt;0.9608&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m25.240s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;417&lt;/td&gt;&lt;td&gt;1898819&lt;/td&gt;&lt;td&gt;4553&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9343&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1m56.066s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;1965104&lt;/td&gt;&lt;td&gt;7359&lt;/td&gt;&lt;td&gt;11477&lt;/td&gt;&lt;td&gt;61349&lt;/td&gt;&lt;td&gt;0.9413&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;79&lt;/td&gt;&lt;td&gt;237&lt;/td&gt;&lt;td&gt;11m15.383s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;290&lt;/td&gt;&lt;td&gt;1913682&lt;/td&gt;&lt;td&gt;6598&lt;/td&gt;&lt;td&gt;10302&lt;/td&gt;&lt;td&gt;42572&lt;/td&gt;&lt;td&gt;0.9423&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;2m40.792s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1939235&lt;/td&gt;&lt;td&gt;7487&lt;/td&gt;&lt;td&gt;11554&lt;/td&gt;&lt;td&gt;77853&lt;/td&gt;&lt;td&gt;0.9531&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m29.223s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;418&lt;/td&gt;&lt;td&gt;1898547&lt;/td&gt;&lt;td&gt;4541&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9342&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m52.727s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;235&lt;/td&gt;&lt;td&gt;1976831&lt;/td&gt;&lt;td&gt;8412&lt;/td&gt;&lt;td&gt;12383&lt;/td&gt;&lt;td&gt;61593&lt;/td&gt;&lt;td&gt;0.9458&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;187&lt;/td&gt;&lt;td&gt;9m59.464s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;113&lt;/td&gt;&lt;td&gt;1950222&lt;/td&gt;&lt;td&gt;17258&lt;/td&gt;&lt;td&gt;32111&lt;/td&gt;&lt;td&gt;123292&lt;/td&gt;&lt;td&gt;0.9565&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;382&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;2m15.371s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;1964569&lt;/td&gt;&lt;td&gt;20464&lt;/td&gt;&lt;td&gt;36692&lt;/td&gt;&lt;td&gt;127906&lt;/td&gt;&lt;td&gt;0.9632&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m52.834s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;151&lt;/td&gt;&lt;td&gt;2019778&lt;/td&gt;&lt;td&gt;13376&lt;/td&gt;&lt;td&gt;22045&lt;/td&gt;&lt;td&gt;104182&lt;/td&gt;&lt;td&gt;0.9815&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;213&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;3m38.944s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;75&lt;/td&gt;&lt;td&gt;4559811&lt;/td&gt;&lt;td&gt;60797&lt;/td&gt;&lt;td&gt;132967&lt;/td&gt;&lt;td&gt;326953&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;16m56.911s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;5399988&lt;/td&gt;&lt;td&gt;39705&lt;/td&gt;&lt;td&gt;86536&lt;/td&gt;&lt;td&gt;280065&lt;/td&gt;&lt;td&gt;0.9668&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;106&lt;/td&gt;&lt;td&gt;903&lt;/td&gt;&lt;td&gt;19m16.247s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;693&lt;/td&gt;&lt;td&gt;4472973&lt;/td&gt;&lt;td&gt;6454&lt;/td&gt;&lt;td&gt;10495&lt;/td&gt;&lt;td&gt;53974&lt;/td&gt;&lt;td&gt;0.9638&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m42.483s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4595945&lt;/td&gt;&lt;td&gt;55372&lt;/td&gt;&lt;td&gt;122763&lt;/td&gt;&lt;td&gt;327771&lt;/td&gt;&lt;td&gt;0.9876&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m24.874s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4450079&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m51.884s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;248&lt;/td&gt;&lt;td&gt;4711107&lt;/td&gt;&lt;td&gt;18996&lt;/td&gt;&lt;td&gt;33519&lt;/td&gt;&lt;td&gt;131097&lt;/td&gt;&lt;td&gt;0.9728&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;84&lt;/td&gt;&lt;td&gt;1186&lt;/td&gt;&lt;td&gt;24m49.858s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;129&lt;/td&gt;&lt;td&gt;4527399&lt;/td&gt;&lt;td&gt;35096&lt;/td&gt;&lt;td&gt;68879&lt;/td&gt;&lt;td&gt;269606&lt;/td&gt;&lt;td&gt;0.9758&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;497&lt;/td&gt;&lt;td&gt;842&lt;/td&gt;&lt;td&gt;5m33.387s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;4584885&lt;/td&gt;&lt;td&gt;41680&lt;/td&gt;&lt;td&gt;83042&lt;/td&gt;&lt;td&gt;269979&lt;/td&gt;&lt;td&gt;0.9841&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m40.040s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;147&lt;/td&gt;&lt;td&gt;4608010&lt;/td&gt;&lt;td&gt;31347&lt;/td&gt;&lt;td&gt;59697&lt;/td&gt;&lt;td&gt;174234&lt;/td&gt;&lt;td&gt;0.9880&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;289&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;7m39.983s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;323&lt;/td&gt;&lt;td&gt;4713939&lt;/td&gt;&lt;td&gt;14594&lt;/td&gt;&lt;td&gt;27098&lt;/td&gt;&lt;td&gt;100573&lt;/td&gt;&lt;td&gt;0.9714&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;970&lt;/td&gt;&lt;td&gt;19m40.888s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;405&lt;/td&gt;&lt;td&gt;4504211&lt;/td&gt;&lt;td&gt;11121&lt;/td&gt;&lt;td&gt;18003&lt;/td&gt;&lt;td&gt;120868&lt;/td&gt;&lt;td&gt;0.9713&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;4m52.789s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;317&lt;/td&gt;&lt;td&gt;4560682&lt;/td&gt;&lt;td&gt;14387&lt;/td&gt;&lt;td&gt;25607&lt;/td&gt;&lt;td&gt;120916&lt;/td&gt;&lt;td&gt;0.9780&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;9m39.849s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4449989&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m34.519s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;422&lt;/td&gt;&lt;td&gt;7066990&lt;/td&gt;&lt;td&gt;16746&lt;/td&gt;&lt;td&gt;35498&lt;/td&gt;&lt;td&gt;170764&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;80&lt;/td&gt;&lt;td&gt;531&lt;/td&gt;&lt;td&gt;29m11.924s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1264&lt;/td&gt;&lt;td&gt;6086321&lt;/td&gt;&lt;td&gt;4815&lt;/td&gt;&lt;td&gt;7720&lt;/td&gt;&lt;td&gt;49780&lt;/td&gt;&lt;td&gt;0.9716&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;93&lt;/td&gt;&lt;td&gt;8m10.649s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;547&lt;/td&gt;&lt;td&gt;6143206&lt;/td&gt;&lt;td&gt;11230&lt;/td&gt;&lt;td&gt;22131&lt;/td&gt;&lt;td&gt;210111&lt;/td&gt;&lt;td&gt;0.9782&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m47.722s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABYSS&lt;/td&gt;&lt;td&gt;4057&lt;/td&gt;&lt;td&gt;4998428&lt;/td&gt;&lt;td&gt;1232&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;14076&lt;/td&gt;&lt;td&gt;0.7933&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6m5.597s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;251&lt;/td&gt;&lt;td&gt;6305646&lt;/td&gt;&lt;td&gt;25122&lt;/td&gt;&lt;td&gt;55095&lt;/td&gt;&lt;td&gt;182061&lt;/td&gt;&lt;td&gt;0.9871&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;216&lt;/td&gt;&lt;td&gt;551&lt;/td&gt;&lt;td&gt;36m53.145s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;86&lt;/td&gt;&lt;td&gt;6189575&lt;/td&gt;&lt;td&gt;71971&lt;/td&gt;&lt;td&gt;289674&lt;/td&gt;&lt;td&gt;579752&lt;/td&gt;&lt;td&gt;0.9843&lt;/td&gt;&lt;td&gt;29&lt;/td&gt;&lt;td&gt;1079&lt;/td&gt;&lt;td&gt;2433&lt;/td&gt;&lt;td&gt;7m12.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;122&lt;/td&gt;&lt;td&gt;6227165&lt;/td&gt;&lt;td&gt;51042&lt;/td&gt;&lt;td&gt;110638&lt;/td&gt;&lt;td&gt;346568&lt;/td&gt;&lt;td&gt;0.9919&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m3.064s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;152&lt;/td&gt;&lt;td&gt;6416064&lt;/td&gt;&lt;td&gt;42210&lt;/td&gt;&lt;td&gt;83309&lt;/td&gt;&lt;td&gt;368070&lt;/td&gt;&lt;td&gt;0.9954&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;455&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;11m35.355s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1937&lt;/td&gt;&lt;td&gt;4102206&lt;/td&gt;&lt;td&gt;2117&lt;/td&gt;&lt;td&gt;3001&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8656&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1162&lt;/td&gt;&lt;td&gt;7360&lt;/td&gt;&lt;td&gt;135m2.904s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;528&lt;/td&gt;&lt;td&gt;4491661&lt;/td&gt;&lt;td&gt;8506&lt;/td&gt;&lt;td&gt;14236&lt;/td&gt;&lt;td&gt;60568&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;28m55.106s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;420&lt;/td&gt;&lt;td&gt;4522457&lt;/td&gt;&lt;td&gt;10767&lt;/td&gt;&lt;td&gt;16970&lt;/td&gt;&lt;td&gt;66556&lt;/td&gt;&lt;td&gt;0.9702&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;37m57.168s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1026&lt;/td&gt;&lt;td&gt;4440595&lt;/td&gt;&lt;td&gt;4328&lt;/td&gt;&lt;td&gt;6898&lt;/td&gt;&lt;td&gt;34595&lt;/td&gt;&lt;td&gt;0.9550&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;23m3.949s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1761&lt;/td&gt;&lt;td&gt;4099614&lt;/td&gt;&lt;td&gt;2328&lt;/td&gt;&lt;td&gt;3429&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8708&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;1173&lt;/td&gt;&lt;td&gt;7355&lt;/td&gt;&lt;td&gt;143m27.647s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4542631&lt;/td&gt;&lt;td&gt;54730&lt;/td&gt;&lt;td&gt;125611&lt;/td&gt;&lt;td&gt;311586&lt;/td&gt;&lt;td&gt;0.9657&lt;/td&gt;&lt;td&gt;28&lt;/td&gt;&lt;td&gt;456&lt;/td&gt;&lt;td&gt;895&lt;/td&gt;&lt;td&gt;31m51.199s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;126&lt;/td&gt;&lt;td&gt;4591168&lt;/td&gt;&lt;td&gt;36437&lt;/td&gt;&lt;td&gt;72499&lt;/td&gt;&lt;td&gt;174569&lt;/td&gt;&lt;td&gt;0.9818&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;47m54.377s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4661190&lt;/td&gt;&lt;td&gt;30267&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174288&lt;/td&gt;&lt;td&gt;0.9840&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;233&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;44m53.714s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;874&lt;/td&gt;&lt;td&gt;4513335&lt;/td&gt;&lt;td&gt;5163&lt;/td&gt;&lt;td&gt;8771&lt;/td&gt;&lt;td&gt;42344&lt;/td&gt;&lt;td&gt;0.9731&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;td&gt;247&lt;/td&gt;&lt;td&gt;29m53.841s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1538&lt;/td&gt;&lt;td&gt;5056677&lt;/td&gt;&lt;td&gt;3287&lt;/td&gt;&lt;td&gt;4969&lt;/td&gt;&lt;td&gt;26316&lt;/td&gt;&lt;td&gt;0.9600&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;648&lt;/td&gt;&lt;td&gt;1199&lt;/td&gt;&lt;td&gt;7m49.404s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;2415&lt;/td&gt;&lt;td&gt;3942859&lt;/td&gt;&lt;td&gt;1632&lt;/td&gt;&lt;td&gt;2068&lt;/td&gt;&lt;td&gt;10286&lt;/td&gt;&lt;td&gt;0.8499&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;386&lt;/td&gt;&lt;td&gt;207&lt;/td&gt;&lt;td&gt;2m10.820s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;1722&lt;/td&gt;&lt;td&gt;4737188&lt;/td&gt;&lt;td&gt;2750&lt;/td&gt;&lt;td&gt;3660&lt;/td&gt;&lt;td&gt;16250&lt;/td&gt;&lt;td&gt;0.9630&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;145&lt;/td&gt;&lt;td&gt;89&lt;/td&gt;&lt;td&gt;5m27.089s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2662&lt;/td&gt;&lt;td&gt;4020201&lt;/td&gt;&lt;td&gt;1510&lt;/td&gt;&lt;td&gt;1899&lt;/td&gt;&lt;td&gt;12092&lt;/td&gt;&lt;td&gt;0.8630&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;63&lt;/td&gt;&lt;td&gt;41&lt;/td&gt;&lt;td&gt;3m45.703s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1813&lt;/td&gt;&lt;td&gt;3538992&lt;/td&gt;&lt;td&gt;1952&lt;/td&gt;&lt;td&gt;2632&lt;/td&gt;&lt;td&gt;15039&lt;/td&gt;&lt;td&gt;0.7598&lt;/td&gt;&lt;td&gt;598&lt;/td&gt;&lt;td&gt;1820&lt;/td&gt;&lt;td&gt;7077&lt;/td&gt;&lt;td&gt;157m46.099s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;754&lt;/td&gt;&lt;td&gt;4518284&lt;/td&gt;&lt;td&gt;5992&lt;/td&gt;&lt;td&gt;8787&lt;/td&gt;&lt;td&gt;29554&lt;/td&gt;&lt;td&gt;0.9730&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;35m18.761s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;4579657&lt;/td&gt;&lt;td&gt;42015&lt;/td&gt;&lt;td&gt;87318&lt;/td&gt;&lt;td&gt;268385&lt;/td&gt;&lt;td&gt;0.9831&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;234&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;62m30.978s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4667915&lt;/td&gt;&lt;td&gt;30311&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174286&lt;/td&gt;&lt;td&gt;0.9851&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;239&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;47m12.271s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1498&lt;/td&gt;&lt;td&gt;4706276&lt;/td&gt;&lt;td&gt;3141&lt;/td&gt;&lt;td&gt;4965&lt;/td&gt;&lt;td&gt;24129&lt;/td&gt;&lt;td&gt;0.9679&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1115&lt;/td&gt;&lt;td&gt;210&lt;/td&gt;&lt;td&gt;87m18.839s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;4361792&lt;/td&gt;&lt;td&gt;10143&lt;/td&gt;&lt;td&gt;20490&lt;/td&gt;&lt;td&gt;85191&lt;/td&gt;&lt;td&gt;0.9773&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;381&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;16m3.742s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;3677696&lt;/td&gt;&lt;td&gt;14199&lt;/td&gt;&lt;td&gt;25852&lt;/td&gt;&lt;td&gt;72730&lt;/td&gt;&lt;td&gt;0.9749&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;82&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;29m48.993s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1105&lt;/td&gt;&lt;td&gt;4315007&lt;/td&gt;&lt;td&gt;3904&lt;/td&gt;&lt;td&gt;6485&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9697&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;172&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;28m59.212s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;3547847&lt;/td&gt;&lt;td&gt;32549&lt;/td&gt;&lt;td&gt;61793&lt;/td&gt;&lt;td&gt;214173&lt;/td&gt;&lt;td&gt;0.9846&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;380&lt;/td&gt;&lt;td&gt;43m3.785s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1715&lt;/td&gt;&lt;td&gt;6018217&lt;/td&gt;&lt;td&gt;3509&lt;/td&gt;&lt;td&gt;5511&lt;/td&gt;&lt;td&gt;29671&lt;/td&gt;&lt;td&gt;0.9722&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;1421&lt;/td&gt;&lt;td&gt;12480&lt;/td&gt;&lt;td&gt;18m3.905s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1440&lt;/td&gt;&lt;td&gt;3356900&lt;/td&gt;&lt;td&gt;2331&lt;/td&gt;&lt;td&gt;3267&lt;/td&gt;&lt;td&gt;14690&lt;/td&gt;&lt;td&gt;0.9308&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;704&lt;/td&gt;&lt;td&gt;3166&lt;/td&gt;&lt;td&gt;3m54.495s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;2482&lt;/td&gt;&lt;td&gt;3361598&lt;/td&gt;&lt;td&gt;1354&lt;/td&gt;&lt;td&gt;1554&lt;/td&gt;&lt;td&gt;7435&lt;/td&gt;&lt;td&gt;0.8571&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;305&lt;/td&gt;&lt;td&gt;5m22.559s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2324&lt;/td&gt;&lt;td&gt;2991350&lt;/td&gt;&lt;td&gt;1287&lt;/td&gt;&lt;td&gt;1496&lt;/td&gt;&lt;td&gt;10227&lt;/td&gt;&lt;td&gt;0.8309&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;37&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;7m4.659s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;2399&lt;/td&gt;&lt;td&gt;6932733&lt;/td&gt;&lt;td&gt;2889&lt;/td&gt;&lt;td&gt;4495&lt;/td&gt;&lt;td&gt;47460&lt;/td&gt;&lt;td&gt;0.9681&lt;/td&gt;&lt;td&gt;70&lt;/td&gt;&lt;td&gt;2149&lt;/td&gt;&lt;td&gt;8033&lt;/td&gt;&lt;td&gt;129m53.436s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1165&lt;/td&gt;&lt;td&gt;4285023&lt;/td&gt;&lt;td&gt;3678&lt;/td&gt;&lt;td&gt;5820&lt;/td&gt;&lt;td&gt;21242&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;753&lt;/td&gt;&lt;td&gt;3164&lt;/td&gt;&lt;td&gt;22m52.574s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;91&lt;/td&gt;&lt;td&gt;3540404&lt;/td&gt;&lt;td&gt;38905&lt;/td&gt;&lt;td&gt;82891&lt;/td&gt;&lt;td&gt;215819&lt;/td&gt;&lt;td&gt;0.9804&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;36m27.635s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1198&lt;/td&gt;&lt;td&gt;4294398&lt;/td&gt;&lt;td&gt;3584&lt;/td&gt;&lt;td&gt;5748&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9677&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;175&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;34m34.469s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;166&lt;/td&gt;&lt;td&gt;109935&lt;/td&gt;&lt;td&gt;662&lt;/td&gt;&lt;td&gt;651&lt;/td&gt;&lt;td&gt;1433&lt;/td&gt;&lt;td&gt;0.0608&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;741&lt;/td&gt;&lt;td&gt;620&lt;/td&gt;&lt;td&gt;79m50.304s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;1598265&lt;/td&gt;&lt;td&gt;7683&lt;/td&gt;&lt;td&gt;12698&lt;/td&gt;&lt;td&gt;54143&lt;/td&gt;&lt;td&gt;0.9890&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;133&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;13m2.283s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;td&gt;1606647&lt;/td&gt;&lt;td&gt;22314&lt;/td&gt;&lt;td&gt;36518&lt;/td&gt;&lt;td&gt;91303&lt;/td&gt;&lt;td&gt;0.9862&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;19m51.388s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;156&lt;/td&gt;&lt;td&gt;1596474&lt;/td&gt;&lt;td&gt;10233&lt;/td&gt;&lt;td&gt;19950&lt;/td&gt;&lt;td&gt;69217&lt;/td&gt;&lt;td&gt;0.9881&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;22m45.895s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;1609423&lt;/td&gt;&lt;td&gt;53647&lt;/td&gt;&lt;td&gt;261125&lt;/td&gt;&lt;td&gt;477358&lt;/td&gt;&lt;td&gt;0.9904&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;21m24.064s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;153&lt;/td&gt;&lt;td&gt;3078576&lt;/td&gt;&lt;td&gt;20121&lt;/td&gt;&lt;td&gt;76729&lt;/td&gt;&lt;td&gt;258262&lt;/td&gt;&lt;td&gt;0.9861&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;104&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;13m55.961s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;1600395&lt;/td&gt;&lt;td&gt;27593&lt;/td&gt;&lt;td&gt;76702&lt;/td&gt;&lt;td&gt;191999&lt;/td&gt;&lt;td&gt;0.9914&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;176&lt;/td&gt;&lt;td&gt;3m29.796s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;184&lt;/td&gt;&lt;td&gt;1573256&lt;/td&gt;&lt;td&gt;8550&lt;/td&gt;&lt;td&gt;14142&lt;/td&gt;&lt;td&gt;76631&lt;/td&gt;&lt;td&gt;0.9503&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m42.587s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;478&lt;/td&gt;&lt;td&gt;1566837&lt;/td&gt;&lt;td&gt;3277&lt;/td&gt;&lt;td&gt;5064&lt;/td&gt;&lt;td&gt;16718&lt;/td&gt;&lt;td&gt;0.9689&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m14.770s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;td&gt;27077&lt;/td&gt;&lt;td&gt;601&lt;/td&gt;&lt;td&gt;567&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;0.0023&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;67&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;87m51.332s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;190&lt;/td&gt;&lt;td&gt;1593755&lt;/td&gt;&lt;td&gt;8388&lt;/td&gt;&lt;td&gt;13136&lt;/td&gt;&lt;td&gt;45625&lt;/td&gt;&lt;td&gt;0.9848&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;238&lt;/td&gt;&lt;td&gt;1701&lt;/td&gt;&lt;td&gt;16m37.093s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;1602133&lt;/td&gt;&lt;td&gt;59338&lt;/td&gt;&lt;td&gt;116274&lt;/td&gt;&lt;td&gt;236544&lt;/td&gt;&lt;td&gt;0.9897&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;35m8.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;1590298&lt;/td&gt;&lt;td&gt;6361&lt;/td&gt;&lt;td&gt;10207&lt;/td&gt;&lt;td&gt;37072&lt;/td&gt;&lt;td&gt;0.9835&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;23m33.000s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;495&lt;/td&gt;&lt;td&gt;955333&lt;/td&gt;&lt;td&gt;1929&lt;/td&gt;&lt;td&gt;2426&lt;/td&gt;&lt;td&gt;10235&lt;/td&gt;&lt;td&gt;0.9290&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;383&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;6m40.744s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;845807&lt;/td&gt;&lt;td&gt;4066&lt;/td&gt;&lt;td&gt;5938&lt;/td&gt;&lt;td&gt;19562&lt;/td&gt;&lt;td&gt;0.9664&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;1m13.446s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;160&lt;/td&gt;&lt;td&gt;861365&lt;/td&gt;&lt;td&gt;5383&lt;/td&gt;&lt;td&gt;8079&lt;/td&gt;&lt;td&gt;48424&lt;/td&gt;&lt;td&gt;0.9544&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;2m27.208s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;332&lt;/td&gt;&lt;td&gt;826396&lt;/td&gt;&lt;td&gt;2489&lt;/td&gt;&lt;td&gt;3369&lt;/td&gt;&lt;td&gt;17054&lt;/td&gt;&lt;td&gt;0.9435&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1m44.050s&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;</text>
    </revision>
    <revision>
      <id>121</id>
      <timestamp>2010-04-24T12:48:13Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">== Ray version ==
&lt;pre class=&quot;wiki&quot;&gt;AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux
&lt;/pre&gt;&lt;h2 id=&quot;Assemblers&quot;&gt;Assemblers&lt;/h2&gt;
&lt;pre class=&quot;wiki&quot;&gt;nproc=25
velvetVersion=0.7.61
eulerVersion=1.1.2
newblerVersion=2.0.00.20
rayVersion=0.0.7
abyssVersion=1.1.2
wordSize=21

== Datasets&quot;&gt;Datasets ==
&lt;pre class=&quot;wiki&quot;&gt;    *  Simulated datasets
          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)
          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)
          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)
          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)
          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)
          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)
          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)
          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) 
    * Mixed set 1: E. coli K-12 MG1655 
          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
    * Mixed set 2: Acinetobacter sp. ADP1 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)
    * Mixed set 3: Cryptobacterium curtum DSM 15641 (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)
    * Illumina-only paired datasets
          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) 

== Comparisons==

&lt;table border=&quot;1&quot;&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;261&lt;/td&gt;&lt;td&gt;1967594&lt;/td&gt;&lt;td&gt;7538&lt;/td&gt;&lt;td&gt;11621&lt;/td&gt;&lt;td&gt;61396&lt;/td&gt;&lt;td&gt;0.9419&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;7m22.779s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;280&lt;/td&gt;&lt;td&gt;1917129&lt;/td&gt;&lt;td&gt;6846&lt;/td&gt;&lt;td&gt;11279&lt;/td&gt;&lt;td&gt;44362&lt;/td&gt;&lt;td&gt;0.9437&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;2m15.931s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1954999&lt;/td&gt;&lt;td&gt;7548&lt;/td&gt;&lt;td&gt;11561&lt;/td&gt;&lt;td&gt;77867&lt;/td&gt;&lt;td&gt;0.9608&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m25.240s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;417&lt;/td&gt;&lt;td&gt;1898819&lt;/td&gt;&lt;td&gt;4553&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9343&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1m56.066s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;1965104&lt;/td&gt;&lt;td&gt;7359&lt;/td&gt;&lt;td&gt;11477&lt;/td&gt;&lt;td&gt;61349&lt;/td&gt;&lt;td&gt;0.9413&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;79&lt;/td&gt;&lt;td&gt;237&lt;/td&gt;&lt;td&gt;11m15.383s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;290&lt;/td&gt;&lt;td&gt;1913682&lt;/td&gt;&lt;td&gt;6598&lt;/td&gt;&lt;td&gt;10302&lt;/td&gt;&lt;td&gt;42572&lt;/td&gt;&lt;td&gt;0.9423&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;2m40.792s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1939235&lt;/td&gt;&lt;td&gt;7487&lt;/td&gt;&lt;td&gt;11554&lt;/td&gt;&lt;td&gt;77853&lt;/td&gt;&lt;td&gt;0.9531&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m29.223s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;418&lt;/td&gt;&lt;td&gt;1898547&lt;/td&gt;&lt;td&gt;4541&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9342&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m52.727s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;235&lt;/td&gt;&lt;td&gt;1976831&lt;/td&gt;&lt;td&gt;8412&lt;/td&gt;&lt;td&gt;12383&lt;/td&gt;&lt;td&gt;61593&lt;/td&gt;&lt;td&gt;0.9458&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;187&lt;/td&gt;&lt;td&gt;9m59.464s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;113&lt;/td&gt;&lt;td&gt;1950222&lt;/td&gt;&lt;td&gt;17258&lt;/td&gt;&lt;td&gt;32111&lt;/td&gt;&lt;td&gt;123292&lt;/td&gt;&lt;td&gt;0.9565&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;382&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;2m15.371s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;1964569&lt;/td&gt;&lt;td&gt;20464&lt;/td&gt;&lt;td&gt;36692&lt;/td&gt;&lt;td&gt;127906&lt;/td&gt;&lt;td&gt;0.9632&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m52.834s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;151&lt;/td&gt;&lt;td&gt;2019778&lt;/td&gt;&lt;td&gt;13376&lt;/td&gt;&lt;td&gt;22045&lt;/td&gt;&lt;td&gt;104182&lt;/td&gt;&lt;td&gt;0.9815&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;213&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;3m38.944s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;75&lt;/td&gt;&lt;td&gt;4559811&lt;/td&gt;&lt;td&gt;60797&lt;/td&gt;&lt;td&gt;132967&lt;/td&gt;&lt;td&gt;326953&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;16m56.911s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;5399988&lt;/td&gt;&lt;td&gt;39705&lt;/td&gt;&lt;td&gt;86536&lt;/td&gt;&lt;td&gt;280065&lt;/td&gt;&lt;td&gt;0.9668&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;106&lt;/td&gt;&lt;td&gt;903&lt;/td&gt;&lt;td&gt;19m16.247s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;693&lt;/td&gt;&lt;td&gt;4472973&lt;/td&gt;&lt;td&gt;6454&lt;/td&gt;&lt;td&gt;10495&lt;/td&gt;&lt;td&gt;53974&lt;/td&gt;&lt;td&gt;0.9638&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m42.483s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4595945&lt;/td&gt;&lt;td&gt;55372&lt;/td&gt;&lt;td&gt;122763&lt;/td&gt;&lt;td&gt;327771&lt;/td&gt;&lt;td&gt;0.9876&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m24.874s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4450079&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m51.884s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;248&lt;/td&gt;&lt;td&gt;4711107&lt;/td&gt;&lt;td&gt;18996&lt;/td&gt;&lt;td&gt;33519&lt;/td&gt;&lt;td&gt;131097&lt;/td&gt;&lt;td&gt;0.9728&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;84&lt;/td&gt;&lt;td&gt;1186&lt;/td&gt;&lt;td&gt;24m49.858s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;129&lt;/td&gt;&lt;td&gt;4527399&lt;/td&gt;&lt;td&gt;35096&lt;/td&gt;&lt;td&gt;68879&lt;/td&gt;&lt;td&gt;269606&lt;/td&gt;&lt;td&gt;0.9758&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;497&lt;/td&gt;&lt;td&gt;842&lt;/td&gt;&lt;td&gt;5m33.387s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;4584885&lt;/td&gt;&lt;td&gt;41680&lt;/td&gt;&lt;td&gt;83042&lt;/td&gt;&lt;td&gt;269979&lt;/td&gt;&lt;td&gt;0.9841&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m40.040s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;147&lt;/td&gt;&lt;td&gt;4608010&lt;/td&gt;&lt;td&gt;31347&lt;/td&gt;&lt;td&gt;59697&lt;/td&gt;&lt;td&gt;174234&lt;/td&gt;&lt;td&gt;0.9880&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;289&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;7m39.983s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;323&lt;/td&gt;&lt;td&gt;4713939&lt;/td&gt;&lt;td&gt;14594&lt;/td&gt;&lt;td&gt;27098&lt;/td&gt;&lt;td&gt;100573&lt;/td&gt;&lt;td&gt;0.9714&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;970&lt;/td&gt;&lt;td&gt;19m40.888s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;405&lt;/td&gt;&lt;td&gt;4504211&lt;/td&gt;&lt;td&gt;11121&lt;/td&gt;&lt;td&gt;18003&lt;/td&gt;&lt;td&gt;120868&lt;/td&gt;&lt;td&gt;0.9713&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;4m52.789s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;317&lt;/td&gt;&lt;td&gt;4560682&lt;/td&gt;&lt;td&gt;14387&lt;/td&gt;&lt;td&gt;25607&lt;/td&gt;&lt;td&gt;120916&lt;/td&gt;&lt;td&gt;0.9780&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;9m39.849s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4449989&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m34.519s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;422&lt;/td&gt;&lt;td&gt;7066990&lt;/td&gt;&lt;td&gt;16746&lt;/td&gt;&lt;td&gt;35498&lt;/td&gt;&lt;td&gt;170764&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;80&lt;/td&gt;&lt;td&gt;531&lt;/td&gt;&lt;td&gt;29m11.924s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1264&lt;/td&gt;&lt;td&gt;6086321&lt;/td&gt;&lt;td&gt;4815&lt;/td&gt;&lt;td&gt;7720&lt;/td&gt;&lt;td&gt;49780&lt;/td&gt;&lt;td&gt;0.9716&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;93&lt;/td&gt;&lt;td&gt;8m10.649s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;547&lt;/td&gt;&lt;td&gt;6143206&lt;/td&gt;&lt;td&gt;11230&lt;/td&gt;&lt;td&gt;22131&lt;/td&gt;&lt;td&gt;210111&lt;/td&gt;&lt;td&gt;0.9782&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m47.722s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABYSS&lt;/td&gt;&lt;td&gt;4057&lt;/td&gt;&lt;td&gt;4998428&lt;/td&gt;&lt;td&gt;1232&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;14076&lt;/td&gt;&lt;td&gt;0.7933&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6m5.597s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;251&lt;/td&gt;&lt;td&gt;6305646&lt;/td&gt;&lt;td&gt;25122&lt;/td&gt;&lt;td&gt;55095&lt;/td&gt;&lt;td&gt;182061&lt;/td&gt;&lt;td&gt;0.9871&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;216&lt;/td&gt;&lt;td&gt;551&lt;/td&gt;&lt;td&gt;36m53.145s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;86&lt;/td&gt;&lt;td&gt;6189575&lt;/td&gt;&lt;td&gt;71971&lt;/td&gt;&lt;td&gt;289674&lt;/td&gt;&lt;td&gt;579752&lt;/td&gt;&lt;td&gt;0.9843&lt;/td&gt;&lt;td&gt;29&lt;/td&gt;&lt;td&gt;1079&lt;/td&gt;&lt;td&gt;2433&lt;/td&gt;&lt;td&gt;7m12.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;122&lt;/td&gt;&lt;td&gt;6227165&lt;/td&gt;&lt;td&gt;51042&lt;/td&gt;&lt;td&gt;110638&lt;/td&gt;&lt;td&gt;346568&lt;/td&gt;&lt;td&gt;0.9919&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m3.064s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;152&lt;/td&gt;&lt;td&gt;6416064&lt;/td&gt;&lt;td&gt;42210&lt;/td&gt;&lt;td&gt;83309&lt;/td&gt;&lt;td&gt;368070&lt;/td&gt;&lt;td&gt;0.9954&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;455&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;11m35.355s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1937&lt;/td&gt;&lt;td&gt;4102206&lt;/td&gt;&lt;td&gt;2117&lt;/td&gt;&lt;td&gt;3001&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8656&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1162&lt;/td&gt;&lt;td&gt;7360&lt;/td&gt;&lt;td&gt;135m2.904s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;528&lt;/td&gt;&lt;td&gt;4491661&lt;/td&gt;&lt;td&gt;8506&lt;/td&gt;&lt;td&gt;14236&lt;/td&gt;&lt;td&gt;60568&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;28m55.106s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;420&lt;/td&gt;&lt;td&gt;4522457&lt;/td&gt;&lt;td&gt;10767&lt;/td&gt;&lt;td&gt;16970&lt;/td&gt;&lt;td&gt;66556&lt;/td&gt;&lt;td&gt;0.9702&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;37m57.168s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1026&lt;/td&gt;&lt;td&gt;4440595&lt;/td&gt;&lt;td&gt;4328&lt;/td&gt;&lt;td&gt;6898&lt;/td&gt;&lt;td&gt;34595&lt;/td&gt;&lt;td&gt;0.9550&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;23m3.949s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1761&lt;/td&gt;&lt;td&gt;4099614&lt;/td&gt;&lt;td&gt;2328&lt;/td&gt;&lt;td&gt;3429&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8708&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;1173&lt;/td&gt;&lt;td&gt;7355&lt;/td&gt;&lt;td&gt;143m27.647s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4542631&lt;/td&gt;&lt;td&gt;54730&lt;/td&gt;&lt;td&gt;125611&lt;/td&gt;&lt;td&gt;311586&lt;/td&gt;&lt;td&gt;0.9657&lt;/td&gt;&lt;td&gt;28&lt;/td&gt;&lt;td&gt;456&lt;/td&gt;&lt;td&gt;895&lt;/td&gt;&lt;td&gt;31m51.199s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;126&lt;/td&gt;&lt;td&gt;4591168&lt;/td&gt;&lt;td&gt;36437&lt;/td&gt;&lt;td&gt;72499&lt;/td&gt;&lt;td&gt;174569&lt;/td&gt;&lt;td&gt;0.9818&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;47m54.377s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4661190&lt;/td&gt;&lt;td&gt;30267&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174288&lt;/td&gt;&lt;td&gt;0.9840&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;233&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;44m53.714s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;874&lt;/td&gt;&lt;td&gt;4513335&lt;/td&gt;&lt;td&gt;5163&lt;/td&gt;&lt;td&gt;8771&lt;/td&gt;&lt;td&gt;42344&lt;/td&gt;&lt;td&gt;0.9731&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;td&gt;247&lt;/td&gt;&lt;td&gt;29m53.841s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1538&lt;/td&gt;&lt;td&gt;5056677&lt;/td&gt;&lt;td&gt;3287&lt;/td&gt;&lt;td&gt;4969&lt;/td&gt;&lt;td&gt;26316&lt;/td&gt;&lt;td&gt;0.9600&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;648&lt;/td&gt;&lt;td&gt;1199&lt;/td&gt;&lt;td&gt;7m49.404s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;2415&lt;/td&gt;&lt;td&gt;3942859&lt;/td&gt;&lt;td&gt;1632&lt;/td&gt;&lt;td&gt;2068&lt;/td&gt;&lt;td&gt;10286&lt;/td&gt;&lt;td&gt;0.8499&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;386&lt;/td&gt;&lt;td&gt;207&lt;/td&gt;&lt;td&gt;2m10.820s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;1722&lt;/td&gt;&lt;td&gt;4737188&lt;/td&gt;&lt;td&gt;2750&lt;/td&gt;&lt;td&gt;3660&lt;/td&gt;&lt;td&gt;16250&lt;/td&gt;&lt;td&gt;0.9630&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;145&lt;/td&gt;&lt;td&gt;89&lt;/td&gt;&lt;td&gt;5m27.089s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2662&lt;/td&gt;&lt;td&gt;4020201&lt;/td&gt;&lt;td&gt;1510&lt;/td&gt;&lt;td&gt;1899&lt;/td&gt;&lt;td&gt;12092&lt;/td&gt;&lt;td&gt;0.8630&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;63&lt;/td&gt;&lt;td&gt;41&lt;/td&gt;&lt;td&gt;3m45.703s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1813&lt;/td&gt;&lt;td&gt;3538992&lt;/td&gt;&lt;td&gt;1952&lt;/td&gt;&lt;td&gt;2632&lt;/td&gt;&lt;td&gt;15039&lt;/td&gt;&lt;td&gt;0.7598&lt;/td&gt;&lt;td&gt;598&lt;/td&gt;&lt;td&gt;1820&lt;/td&gt;&lt;td&gt;7077&lt;/td&gt;&lt;td&gt;157m46.099s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;754&lt;/td&gt;&lt;td&gt;4518284&lt;/td&gt;&lt;td&gt;5992&lt;/td&gt;&lt;td&gt;8787&lt;/td&gt;&lt;td&gt;29554&lt;/td&gt;&lt;td&gt;0.9730&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;35m18.761s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;4579657&lt;/td&gt;&lt;td&gt;42015&lt;/td&gt;&lt;td&gt;87318&lt;/td&gt;&lt;td&gt;268385&lt;/td&gt;&lt;td&gt;0.9831&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;234&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;62m30.978s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4667915&lt;/td&gt;&lt;td&gt;30311&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174286&lt;/td&gt;&lt;td&gt;0.9851&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;239&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;47m12.271s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1498&lt;/td&gt;&lt;td&gt;4706276&lt;/td&gt;&lt;td&gt;3141&lt;/td&gt;&lt;td&gt;4965&lt;/td&gt;&lt;td&gt;24129&lt;/td&gt;&lt;td&gt;0.9679&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1115&lt;/td&gt;&lt;td&gt;210&lt;/td&gt;&lt;td&gt;87m18.839s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;4361792&lt;/td&gt;&lt;td&gt;10143&lt;/td&gt;&lt;td&gt;20490&lt;/td&gt;&lt;td&gt;85191&lt;/td&gt;&lt;td&gt;0.9773&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;381&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;16m3.742s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;3677696&lt;/td&gt;&lt;td&gt;14199&lt;/td&gt;&lt;td&gt;25852&lt;/td&gt;&lt;td&gt;72730&lt;/td&gt;&lt;td&gt;0.9749&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;82&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;29m48.993s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1105&lt;/td&gt;&lt;td&gt;4315007&lt;/td&gt;&lt;td&gt;3904&lt;/td&gt;&lt;td&gt;6485&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9697&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;172&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;28m59.212s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;3547847&lt;/td&gt;&lt;td&gt;32549&lt;/td&gt;&lt;td&gt;61793&lt;/td&gt;&lt;td&gt;214173&lt;/td&gt;&lt;td&gt;0.9846&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;380&lt;/td&gt;&lt;td&gt;43m3.785s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1715&lt;/td&gt;&lt;td&gt;6018217&lt;/td&gt;&lt;td&gt;3509&lt;/td&gt;&lt;td&gt;5511&lt;/td&gt;&lt;td&gt;29671&lt;/td&gt;&lt;td&gt;0.9722&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;1421&lt;/td&gt;&lt;td&gt;12480&lt;/td&gt;&lt;td&gt;18m3.905s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1440&lt;/td&gt;&lt;td&gt;3356900&lt;/td&gt;&lt;td&gt;2331&lt;/td&gt;&lt;td&gt;3267&lt;/td&gt;&lt;td&gt;14690&lt;/td&gt;&lt;td&gt;0.9308&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;704&lt;/td&gt;&lt;td&gt;3166&lt;/td&gt;&lt;td&gt;3m54.495s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;2482&lt;/td&gt;&lt;td&gt;3361598&lt;/td&gt;&lt;td&gt;1354&lt;/td&gt;&lt;td&gt;1554&lt;/td&gt;&lt;td&gt;7435&lt;/td&gt;&lt;td&gt;0.8571&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;305&lt;/td&gt;&lt;td&gt;5m22.559s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2324&lt;/td&gt;&lt;td&gt;2991350&lt;/td&gt;&lt;td&gt;1287&lt;/td&gt;&lt;td&gt;1496&lt;/td&gt;&lt;td&gt;10227&lt;/td&gt;&lt;td&gt;0.8309&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;37&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;7m4.659s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;2399&lt;/td&gt;&lt;td&gt;6932733&lt;/td&gt;&lt;td&gt;2889&lt;/td&gt;&lt;td&gt;4495&lt;/td&gt;&lt;td&gt;47460&lt;/td&gt;&lt;td&gt;0.9681&lt;/td&gt;&lt;td&gt;70&lt;/td&gt;&lt;td&gt;2149&lt;/td&gt;&lt;td&gt;8033&lt;/td&gt;&lt;td&gt;129m53.436s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1165&lt;/td&gt;&lt;td&gt;4285023&lt;/td&gt;&lt;td&gt;3678&lt;/td&gt;&lt;td&gt;5820&lt;/td&gt;&lt;td&gt;21242&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;753&lt;/td&gt;&lt;td&gt;3164&lt;/td&gt;&lt;td&gt;22m52.574s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;91&lt;/td&gt;&lt;td&gt;3540404&lt;/td&gt;&lt;td&gt;38905&lt;/td&gt;&lt;td&gt;82891&lt;/td&gt;&lt;td&gt;215819&lt;/td&gt;&lt;td&gt;0.9804&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;36m27.635s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1198&lt;/td&gt;&lt;td&gt;4294398&lt;/td&gt;&lt;td&gt;3584&lt;/td&gt;&lt;td&gt;5748&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9677&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;175&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;34m34.469s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;166&lt;/td&gt;&lt;td&gt;109935&lt;/td&gt;&lt;td&gt;662&lt;/td&gt;&lt;td&gt;651&lt;/td&gt;&lt;td&gt;1433&lt;/td&gt;&lt;td&gt;0.0608&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;741&lt;/td&gt;&lt;td&gt;620&lt;/td&gt;&lt;td&gt;79m50.304s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;1598265&lt;/td&gt;&lt;td&gt;7683&lt;/td&gt;&lt;td&gt;12698&lt;/td&gt;&lt;td&gt;54143&lt;/td&gt;&lt;td&gt;0.9890&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;133&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;13m2.283s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;td&gt;1606647&lt;/td&gt;&lt;td&gt;22314&lt;/td&gt;&lt;td&gt;36518&lt;/td&gt;&lt;td&gt;91303&lt;/td&gt;&lt;td&gt;0.9862&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;19m51.388s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;156&lt;/td&gt;&lt;td&gt;1596474&lt;/td&gt;&lt;td&gt;10233&lt;/td&gt;&lt;td&gt;19950&lt;/td&gt;&lt;td&gt;69217&lt;/td&gt;&lt;td&gt;0.9881&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;22m45.895s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;1609423&lt;/td&gt;&lt;td&gt;53647&lt;/td&gt;&lt;td&gt;261125&lt;/td&gt;&lt;td&gt;477358&lt;/td&gt;&lt;td&gt;0.9904&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;21m24.064s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;153&lt;/td&gt;&lt;td&gt;3078576&lt;/td&gt;&lt;td&gt;20121&lt;/td&gt;&lt;td&gt;76729&lt;/td&gt;&lt;td&gt;258262&lt;/td&gt;&lt;td&gt;0.9861&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;104&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;13m55.961s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;1600395&lt;/td&gt;&lt;td&gt;27593&lt;/td&gt;&lt;td&gt;76702&lt;/td&gt;&lt;td&gt;191999&lt;/td&gt;&lt;td&gt;0.9914&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;176&lt;/td&gt;&lt;td&gt;3m29.796s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;184&lt;/td&gt;&lt;td&gt;1573256&lt;/td&gt;&lt;td&gt;8550&lt;/td&gt;&lt;td&gt;14142&lt;/td&gt;&lt;td&gt;76631&lt;/td&gt;&lt;td&gt;0.9503&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m42.587s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;478&lt;/td&gt;&lt;td&gt;1566837&lt;/td&gt;&lt;td&gt;3277&lt;/td&gt;&lt;td&gt;5064&lt;/td&gt;&lt;td&gt;16718&lt;/td&gt;&lt;td&gt;0.9689&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m14.770s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;td&gt;27077&lt;/td&gt;&lt;td&gt;601&lt;/td&gt;&lt;td&gt;567&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;0.0023&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;67&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;87m51.332s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;190&lt;/td&gt;&lt;td&gt;1593755&lt;/td&gt;&lt;td&gt;8388&lt;/td&gt;&lt;td&gt;13136&lt;/td&gt;&lt;td&gt;45625&lt;/td&gt;&lt;td&gt;0.9848&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;238&lt;/td&gt;&lt;td&gt;1701&lt;/td&gt;&lt;td&gt;16m37.093s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;1602133&lt;/td&gt;&lt;td&gt;59338&lt;/td&gt;&lt;td&gt;116274&lt;/td&gt;&lt;td&gt;236544&lt;/td&gt;&lt;td&gt;0.9897&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;35m8.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;1590298&lt;/td&gt;&lt;td&gt;6361&lt;/td&gt;&lt;td&gt;10207&lt;/td&gt;&lt;td&gt;37072&lt;/td&gt;&lt;td&gt;0.9835&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;23m33.000s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;495&lt;/td&gt;&lt;td&gt;955333&lt;/td&gt;&lt;td&gt;1929&lt;/td&gt;&lt;td&gt;2426&lt;/td&gt;&lt;td&gt;10235&lt;/td&gt;&lt;td&gt;0.9290&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;383&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;6m40.744s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;845807&lt;/td&gt;&lt;td&gt;4066&lt;/td&gt;&lt;td&gt;5938&lt;/td&gt;&lt;td&gt;19562&lt;/td&gt;&lt;td&gt;0.9664&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;1m13.446s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;160&lt;/td&gt;&lt;td&gt;861365&lt;/td&gt;&lt;td&gt;5383&lt;/td&gt;&lt;td&gt;8079&lt;/td&gt;&lt;td&gt;48424&lt;/td&gt;&lt;td&gt;0.9544&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;2m27.208s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;332&lt;/td&gt;&lt;td&gt;826396&lt;/td&gt;&lt;td&gt;2489&lt;/td&gt;&lt;td&gt;3369&lt;/td&gt;&lt;td&gt;17054&lt;/td&gt;&lt;td&gt;0.9435&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1m44.050s&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;

== Discussion ==

Ray is good.

=== Mix14 ===

Incorrect Ray contig on mix14:
&lt;pre&gt;
115
 4210996  4294119  |   112667    29544  |    83124    83124  |    99.99  |  4639675   112667  |     1.79    73.78  | gi|49175990|ref|NC_000913.2|       115
 4294197  4323999  |    29805        1  |    29803    29805  |    99.99  |  4639675   112667  |     0.64    26.45  | gi|49175990|ref|NC_000913.2|       115
&lt;/pre&gt;

It looks ok to me.</text>
    </revision>
    <revision>
      <id>122</id>
      <timestamp>2010-04-24T12:50:25Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Ray version */</comment>
      <text xml:space="preserve">== Ray version ==
&lt;pre class=&quot;wiki&quot;&gt;AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux
&lt;/pre&gt;

== Assemblers ==
&lt;pre class=&quot;wiki&quot;&gt;nproc=25
velvetVersion=0.7.61
eulerVersion=1.1.2
newblerVersion=2.0.00.20
rayVersion=0.0.7
abyssVersion=1.1.2
wordSize=21

== Datasets&quot;&gt;Datasets ==
&lt;pre class=&quot;wiki&quot;&gt;    *  Simulated datasets
          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)
          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)
          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)
          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)
          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)
          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)
          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)
          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) 
    * Mixed set 1: E. coli K-12 MG1655 
          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
    * Mixed set 2: Acinetobacter sp. ADP1 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)
    * Mixed set 3: Cryptobacterium curtum DSM 15641 (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)
    * Illumina-only paired datasets
          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) 

== Comparisons==

&lt;table border=&quot;1&quot;&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;261&lt;/td&gt;&lt;td&gt;1967594&lt;/td&gt;&lt;td&gt;7538&lt;/td&gt;&lt;td&gt;11621&lt;/td&gt;&lt;td&gt;61396&lt;/td&gt;&lt;td&gt;0.9419&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;7m22.779s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;280&lt;/td&gt;&lt;td&gt;1917129&lt;/td&gt;&lt;td&gt;6846&lt;/td&gt;&lt;td&gt;11279&lt;/td&gt;&lt;td&gt;44362&lt;/td&gt;&lt;td&gt;0.9437&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;2m15.931s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1954999&lt;/td&gt;&lt;td&gt;7548&lt;/td&gt;&lt;td&gt;11561&lt;/td&gt;&lt;td&gt;77867&lt;/td&gt;&lt;td&gt;0.9608&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m25.240s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;417&lt;/td&gt;&lt;td&gt;1898819&lt;/td&gt;&lt;td&gt;4553&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9343&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1m56.066s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;1965104&lt;/td&gt;&lt;td&gt;7359&lt;/td&gt;&lt;td&gt;11477&lt;/td&gt;&lt;td&gt;61349&lt;/td&gt;&lt;td&gt;0.9413&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;79&lt;/td&gt;&lt;td&gt;237&lt;/td&gt;&lt;td&gt;11m15.383s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;290&lt;/td&gt;&lt;td&gt;1913682&lt;/td&gt;&lt;td&gt;6598&lt;/td&gt;&lt;td&gt;10302&lt;/td&gt;&lt;td&gt;42572&lt;/td&gt;&lt;td&gt;0.9423&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;2m40.792s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1939235&lt;/td&gt;&lt;td&gt;7487&lt;/td&gt;&lt;td&gt;11554&lt;/td&gt;&lt;td&gt;77853&lt;/td&gt;&lt;td&gt;0.9531&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m29.223s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;418&lt;/td&gt;&lt;td&gt;1898547&lt;/td&gt;&lt;td&gt;4541&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9342&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m52.727s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;235&lt;/td&gt;&lt;td&gt;1976831&lt;/td&gt;&lt;td&gt;8412&lt;/td&gt;&lt;td&gt;12383&lt;/td&gt;&lt;td&gt;61593&lt;/td&gt;&lt;td&gt;0.9458&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;187&lt;/td&gt;&lt;td&gt;9m59.464s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;113&lt;/td&gt;&lt;td&gt;1950222&lt;/td&gt;&lt;td&gt;17258&lt;/td&gt;&lt;td&gt;32111&lt;/td&gt;&lt;td&gt;123292&lt;/td&gt;&lt;td&gt;0.9565&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;382&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;2m15.371s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;1964569&lt;/td&gt;&lt;td&gt;20464&lt;/td&gt;&lt;td&gt;36692&lt;/td&gt;&lt;td&gt;127906&lt;/td&gt;&lt;td&gt;0.9632&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m52.834s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;151&lt;/td&gt;&lt;td&gt;2019778&lt;/td&gt;&lt;td&gt;13376&lt;/td&gt;&lt;td&gt;22045&lt;/td&gt;&lt;td&gt;104182&lt;/td&gt;&lt;td&gt;0.9815&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;213&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;3m38.944s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;75&lt;/td&gt;&lt;td&gt;4559811&lt;/td&gt;&lt;td&gt;60797&lt;/td&gt;&lt;td&gt;132967&lt;/td&gt;&lt;td&gt;326953&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;16m56.911s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;5399988&lt;/td&gt;&lt;td&gt;39705&lt;/td&gt;&lt;td&gt;86536&lt;/td&gt;&lt;td&gt;280065&lt;/td&gt;&lt;td&gt;0.9668&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;106&lt;/td&gt;&lt;td&gt;903&lt;/td&gt;&lt;td&gt;19m16.247s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;693&lt;/td&gt;&lt;td&gt;4472973&lt;/td&gt;&lt;td&gt;6454&lt;/td&gt;&lt;td&gt;10495&lt;/td&gt;&lt;td&gt;53974&lt;/td&gt;&lt;td&gt;0.9638&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m42.483s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4595945&lt;/td&gt;&lt;td&gt;55372&lt;/td&gt;&lt;td&gt;122763&lt;/td&gt;&lt;td&gt;327771&lt;/td&gt;&lt;td&gt;0.9876&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m24.874s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4450079&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m51.884s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;248&lt;/td&gt;&lt;td&gt;4711107&lt;/td&gt;&lt;td&gt;18996&lt;/td&gt;&lt;td&gt;33519&lt;/td&gt;&lt;td&gt;131097&lt;/td&gt;&lt;td&gt;0.9728&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;84&lt;/td&gt;&lt;td&gt;1186&lt;/td&gt;&lt;td&gt;24m49.858s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;129&lt;/td&gt;&lt;td&gt;4527399&lt;/td&gt;&lt;td&gt;35096&lt;/td&gt;&lt;td&gt;68879&lt;/td&gt;&lt;td&gt;269606&lt;/td&gt;&lt;td&gt;0.9758&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;497&lt;/td&gt;&lt;td&gt;842&lt;/td&gt;&lt;td&gt;5m33.387s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;4584885&lt;/td&gt;&lt;td&gt;41680&lt;/td&gt;&lt;td&gt;83042&lt;/td&gt;&lt;td&gt;269979&lt;/td&gt;&lt;td&gt;0.9841&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m40.040s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;147&lt;/td&gt;&lt;td&gt;4608010&lt;/td&gt;&lt;td&gt;31347&lt;/td&gt;&lt;td&gt;59697&lt;/td&gt;&lt;td&gt;174234&lt;/td&gt;&lt;td&gt;0.9880&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;289&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;7m39.983s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;323&lt;/td&gt;&lt;td&gt;4713939&lt;/td&gt;&lt;td&gt;14594&lt;/td&gt;&lt;td&gt;27098&lt;/td&gt;&lt;td&gt;100573&lt;/td&gt;&lt;td&gt;0.9714&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;970&lt;/td&gt;&lt;td&gt;19m40.888s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;405&lt;/td&gt;&lt;td&gt;4504211&lt;/td&gt;&lt;td&gt;11121&lt;/td&gt;&lt;td&gt;18003&lt;/td&gt;&lt;td&gt;120868&lt;/td&gt;&lt;td&gt;0.9713&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;4m52.789s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;317&lt;/td&gt;&lt;td&gt;4560682&lt;/td&gt;&lt;td&gt;14387&lt;/td&gt;&lt;td&gt;25607&lt;/td&gt;&lt;td&gt;120916&lt;/td&gt;&lt;td&gt;0.9780&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;9m39.849s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4449989&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m34.519s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;422&lt;/td&gt;&lt;td&gt;7066990&lt;/td&gt;&lt;td&gt;16746&lt;/td&gt;&lt;td&gt;35498&lt;/td&gt;&lt;td&gt;170764&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;80&lt;/td&gt;&lt;td&gt;531&lt;/td&gt;&lt;td&gt;29m11.924s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1264&lt;/td&gt;&lt;td&gt;6086321&lt;/td&gt;&lt;td&gt;4815&lt;/td&gt;&lt;td&gt;7720&lt;/td&gt;&lt;td&gt;49780&lt;/td&gt;&lt;td&gt;0.9716&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;93&lt;/td&gt;&lt;td&gt;8m10.649s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;547&lt;/td&gt;&lt;td&gt;6143206&lt;/td&gt;&lt;td&gt;11230&lt;/td&gt;&lt;td&gt;22131&lt;/td&gt;&lt;td&gt;210111&lt;/td&gt;&lt;td&gt;0.9782&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m47.722s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABYSS&lt;/td&gt;&lt;td&gt;4057&lt;/td&gt;&lt;td&gt;4998428&lt;/td&gt;&lt;td&gt;1232&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;14076&lt;/td&gt;&lt;td&gt;0.7933&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6m5.597s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;251&lt;/td&gt;&lt;td&gt;6305646&lt;/td&gt;&lt;td&gt;25122&lt;/td&gt;&lt;td&gt;55095&lt;/td&gt;&lt;td&gt;182061&lt;/td&gt;&lt;td&gt;0.9871&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;216&lt;/td&gt;&lt;td&gt;551&lt;/td&gt;&lt;td&gt;36m53.145s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;86&lt;/td&gt;&lt;td&gt;6189575&lt;/td&gt;&lt;td&gt;71971&lt;/td&gt;&lt;td&gt;289674&lt;/td&gt;&lt;td&gt;579752&lt;/td&gt;&lt;td&gt;0.9843&lt;/td&gt;&lt;td&gt;29&lt;/td&gt;&lt;td&gt;1079&lt;/td&gt;&lt;td&gt;2433&lt;/td&gt;&lt;td&gt;7m12.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;122&lt;/td&gt;&lt;td&gt;6227165&lt;/td&gt;&lt;td&gt;51042&lt;/td&gt;&lt;td&gt;110638&lt;/td&gt;&lt;td&gt;346568&lt;/td&gt;&lt;td&gt;0.9919&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m3.064s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;152&lt;/td&gt;&lt;td&gt;6416064&lt;/td&gt;&lt;td&gt;42210&lt;/td&gt;&lt;td&gt;83309&lt;/td&gt;&lt;td&gt;368070&lt;/td&gt;&lt;td&gt;0.9954&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;455&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;11m35.355s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1937&lt;/td&gt;&lt;td&gt;4102206&lt;/td&gt;&lt;td&gt;2117&lt;/td&gt;&lt;td&gt;3001&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8656&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1162&lt;/td&gt;&lt;td&gt;7360&lt;/td&gt;&lt;td&gt;135m2.904s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;528&lt;/td&gt;&lt;td&gt;4491661&lt;/td&gt;&lt;td&gt;8506&lt;/td&gt;&lt;td&gt;14236&lt;/td&gt;&lt;td&gt;60568&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;28m55.106s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;420&lt;/td&gt;&lt;td&gt;4522457&lt;/td&gt;&lt;td&gt;10767&lt;/td&gt;&lt;td&gt;16970&lt;/td&gt;&lt;td&gt;66556&lt;/td&gt;&lt;td&gt;0.9702&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;37m57.168s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1026&lt;/td&gt;&lt;td&gt;4440595&lt;/td&gt;&lt;td&gt;4328&lt;/td&gt;&lt;td&gt;6898&lt;/td&gt;&lt;td&gt;34595&lt;/td&gt;&lt;td&gt;0.9550&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;23m3.949s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1761&lt;/td&gt;&lt;td&gt;4099614&lt;/td&gt;&lt;td&gt;2328&lt;/td&gt;&lt;td&gt;3429&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8708&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;1173&lt;/td&gt;&lt;td&gt;7355&lt;/td&gt;&lt;td&gt;143m27.647s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4542631&lt;/td&gt;&lt;td&gt;54730&lt;/td&gt;&lt;td&gt;125611&lt;/td&gt;&lt;td&gt;311586&lt;/td&gt;&lt;td&gt;0.9657&lt;/td&gt;&lt;td&gt;28&lt;/td&gt;&lt;td&gt;456&lt;/td&gt;&lt;td&gt;895&lt;/td&gt;&lt;td&gt;31m51.199s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;126&lt;/td&gt;&lt;td&gt;4591168&lt;/td&gt;&lt;td&gt;36437&lt;/td&gt;&lt;td&gt;72499&lt;/td&gt;&lt;td&gt;174569&lt;/td&gt;&lt;td&gt;0.9818&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;47m54.377s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4661190&lt;/td&gt;&lt;td&gt;30267&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174288&lt;/td&gt;&lt;td&gt;0.9840&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;233&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;44m53.714s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;874&lt;/td&gt;&lt;td&gt;4513335&lt;/td&gt;&lt;td&gt;5163&lt;/td&gt;&lt;td&gt;8771&lt;/td&gt;&lt;td&gt;42344&lt;/td&gt;&lt;td&gt;0.9731&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;td&gt;247&lt;/td&gt;&lt;td&gt;29m53.841s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1538&lt;/td&gt;&lt;td&gt;5056677&lt;/td&gt;&lt;td&gt;3287&lt;/td&gt;&lt;td&gt;4969&lt;/td&gt;&lt;td&gt;26316&lt;/td&gt;&lt;td&gt;0.9600&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;648&lt;/td&gt;&lt;td&gt;1199&lt;/td&gt;&lt;td&gt;7m49.404s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;2415&lt;/td&gt;&lt;td&gt;3942859&lt;/td&gt;&lt;td&gt;1632&lt;/td&gt;&lt;td&gt;2068&lt;/td&gt;&lt;td&gt;10286&lt;/td&gt;&lt;td&gt;0.8499&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;386&lt;/td&gt;&lt;td&gt;207&lt;/td&gt;&lt;td&gt;2m10.820s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;1722&lt;/td&gt;&lt;td&gt;4737188&lt;/td&gt;&lt;td&gt;2750&lt;/td&gt;&lt;td&gt;3660&lt;/td&gt;&lt;td&gt;16250&lt;/td&gt;&lt;td&gt;0.9630&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;145&lt;/td&gt;&lt;td&gt;89&lt;/td&gt;&lt;td&gt;5m27.089s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2662&lt;/td&gt;&lt;td&gt;4020201&lt;/td&gt;&lt;td&gt;1510&lt;/td&gt;&lt;td&gt;1899&lt;/td&gt;&lt;td&gt;12092&lt;/td&gt;&lt;td&gt;0.8630&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;63&lt;/td&gt;&lt;td&gt;41&lt;/td&gt;&lt;td&gt;3m45.703s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1813&lt;/td&gt;&lt;td&gt;3538992&lt;/td&gt;&lt;td&gt;1952&lt;/td&gt;&lt;td&gt;2632&lt;/td&gt;&lt;td&gt;15039&lt;/td&gt;&lt;td&gt;0.7598&lt;/td&gt;&lt;td&gt;598&lt;/td&gt;&lt;td&gt;1820&lt;/td&gt;&lt;td&gt;7077&lt;/td&gt;&lt;td&gt;157m46.099s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;754&lt;/td&gt;&lt;td&gt;4518284&lt;/td&gt;&lt;td&gt;5992&lt;/td&gt;&lt;td&gt;8787&lt;/td&gt;&lt;td&gt;29554&lt;/td&gt;&lt;td&gt;0.9730&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;35m18.761s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;4579657&lt;/td&gt;&lt;td&gt;42015&lt;/td&gt;&lt;td&gt;87318&lt;/td&gt;&lt;td&gt;268385&lt;/td&gt;&lt;td&gt;0.9831&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;234&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;62m30.978s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4667915&lt;/td&gt;&lt;td&gt;30311&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174286&lt;/td&gt;&lt;td&gt;0.9851&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;239&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;47m12.271s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1498&lt;/td&gt;&lt;td&gt;4706276&lt;/td&gt;&lt;td&gt;3141&lt;/td&gt;&lt;td&gt;4965&lt;/td&gt;&lt;td&gt;24129&lt;/td&gt;&lt;td&gt;0.9679&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1115&lt;/td&gt;&lt;td&gt;210&lt;/td&gt;&lt;td&gt;87m18.839s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;4361792&lt;/td&gt;&lt;td&gt;10143&lt;/td&gt;&lt;td&gt;20490&lt;/td&gt;&lt;td&gt;85191&lt;/td&gt;&lt;td&gt;0.9773&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;381&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;16m3.742s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;3677696&lt;/td&gt;&lt;td&gt;14199&lt;/td&gt;&lt;td&gt;25852&lt;/td&gt;&lt;td&gt;72730&lt;/td&gt;&lt;td&gt;0.9749&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;82&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;29m48.993s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1105&lt;/td&gt;&lt;td&gt;4315007&lt;/td&gt;&lt;td&gt;3904&lt;/td&gt;&lt;td&gt;6485&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9697&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;172&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;28m59.212s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;3547847&lt;/td&gt;&lt;td&gt;32549&lt;/td&gt;&lt;td&gt;61793&lt;/td&gt;&lt;td&gt;214173&lt;/td&gt;&lt;td&gt;0.9846&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;380&lt;/td&gt;&lt;td&gt;43m3.785s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1715&lt;/td&gt;&lt;td&gt;6018217&lt;/td&gt;&lt;td&gt;3509&lt;/td&gt;&lt;td&gt;5511&lt;/td&gt;&lt;td&gt;29671&lt;/td&gt;&lt;td&gt;0.9722&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;1421&lt;/td&gt;&lt;td&gt;12480&lt;/td&gt;&lt;td&gt;18m3.905s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1440&lt;/td&gt;&lt;td&gt;3356900&lt;/td&gt;&lt;td&gt;2331&lt;/td&gt;&lt;td&gt;3267&lt;/td&gt;&lt;td&gt;14690&lt;/td&gt;&lt;td&gt;0.9308&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;704&lt;/td&gt;&lt;td&gt;3166&lt;/td&gt;&lt;td&gt;3m54.495s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;2482&lt;/td&gt;&lt;td&gt;3361598&lt;/td&gt;&lt;td&gt;1354&lt;/td&gt;&lt;td&gt;1554&lt;/td&gt;&lt;td&gt;7435&lt;/td&gt;&lt;td&gt;0.8571&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;305&lt;/td&gt;&lt;td&gt;5m22.559s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2324&lt;/td&gt;&lt;td&gt;2991350&lt;/td&gt;&lt;td&gt;1287&lt;/td&gt;&lt;td&gt;1496&lt;/td&gt;&lt;td&gt;10227&lt;/td&gt;&lt;td&gt;0.8309&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;37&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;7m4.659s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;2399&lt;/td&gt;&lt;td&gt;6932733&lt;/td&gt;&lt;td&gt;2889&lt;/td&gt;&lt;td&gt;4495&lt;/td&gt;&lt;td&gt;47460&lt;/td&gt;&lt;td&gt;0.9681&lt;/td&gt;&lt;td&gt;70&lt;/td&gt;&lt;td&gt;2149&lt;/td&gt;&lt;td&gt;8033&lt;/td&gt;&lt;td&gt;129m53.436s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1165&lt;/td&gt;&lt;td&gt;4285023&lt;/td&gt;&lt;td&gt;3678&lt;/td&gt;&lt;td&gt;5820&lt;/td&gt;&lt;td&gt;21242&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;753&lt;/td&gt;&lt;td&gt;3164&lt;/td&gt;&lt;td&gt;22m52.574s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;91&lt;/td&gt;&lt;td&gt;3540404&lt;/td&gt;&lt;td&gt;38905&lt;/td&gt;&lt;td&gt;82891&lt;/td&gt;&lt;td&gt;215819&lt;/td&gt;&lt;td&gt;0.9804&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;36m27.635s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1198&lt;/td&gt;&lt;td&gt;4294398&lt;/td&gt;&lt;td&gt;3584&lt;/td&gt;&lt;td&gt;5748&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9677&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;175&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;34m34.469s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;166&lt;/td&gt;&lt;td&gt;109935&lt;/td&gt;&lt;td&gt;662&lt;/td&gt;&lt;td&gt;651&lt;/td&gt;&lt;td&gt;1433&lt;/td&gt;&lt;td&gt;0.0608&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;741&lt;/td&gt;&lt;td&gt;620&lt;/td&gt;&lt;td&gt;79m50.304s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;1598265&lt;/td&gt;&lt;td&gt;7683&lt;/td&gt;&lt;td&gt;12698&lt;/td&gt;&lt;td&gt;54143&lt;/td&gt;&lt;td&gt;0.9890&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;133&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;13m2.283s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;td&gt;1606647&lt;/td&gt;&lt;td&gt;22314&lt;/td&gt;&lt;td&gt;36518&lt;/td&gt;&lt;td&gt;91303&lt;/td&gt;&lt;td&gt;0.9862&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;19m51.388s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;156&lt;/td&gt;&lt;td&gt;1596474&lt;/td&gt;&lt;td&gt;10233&lt;/td&gt;&lt;td&gt;19950&lt;/td&gt;&lt;td&gt;69217&lt;/td&gt;&lt;td&gt;0.9881&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;22m45.895s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;1609423&lt;/td&gt;&lt;td&gt;53647&lt;/td&gt;&lt;td&gt;261125&lt;/td&gt;&lt;td&gt;477358&lt;/td&gt;&lt;td&gt;0.9904&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;21m24.064s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;153&lt;/td&gt;&lt;td&gt;3078576&lt;/td&gt;&lt;td&gt;20121&lt;/td&gt;&lt;td&gt;76729&lt;/td&gt;&lt;td&gt;258262&lt;/td&gt;&lt;td&gt;0.9861&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;104&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;13m55.961s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;1600395&lt;/td&gt;&lt;td&gt;27593&lt;/td&gt;&lt;td&gt;76702&lt;/td&gt;&lt;td&gt;191999&lt;/td&gt;&lt;td&gt;0.9914&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;176&lt;/td&gt;&lt;td&gt;3m29.796s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;184&lt;/td&gt;&lt;td&gt;1573256&lt;/td&gt;&lt;td&gt;8550&lt;/td&gt;&lt;td&gt;14142&lt;/td&gt;&lt;td&gt;76631&lt;/td&gt;&lt;td&gt;0.9503&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m42.587s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;478&lt;/td&gt;&lt;td&gt;1566837&lt;/td&gt;&lt;td&gt;3277&lt;/td&gt;&lt;td&gt;5064&lt;/td&gt;&lt;td&gt;16718&lt;/td&gt;&lt;td&gt;0.9689&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m14.770s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;td&gt;27077&lt;/td&gt;&lt;td&gt;601&lt;/td&gt;&lt;td&gt;567&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;0.0023&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;67&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;87m51.332s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;190&lt;/td&gt;&lt;td&gt;1593755&lt;/td&gt;&lt;td&gt;8388&lt;/td&gt;&lt;td&gt;13136&lt;/td&gt;&lt;td&gt;45625&lt;/td&gt;&lt;td&gt;0.9848&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;238&lt;/td&gt;&lt;td&gt;1701&lt;/td&gt;&lt;td&gt;16m37.093s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;1602133&lt;/td&gt;&lt;td&gt;59338&lt;/td&gt;&lt;td&gt;116274&lt;/td&gt;&lt;td&gt;236544&lt;/td&gt;&lt;td&gt;0.9897&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;35m8.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;1590298&lt;/td&gt;&lt;td&gt;6361&lt;/td&gt;&lt;td&gt;10207&lt;/td&gt;&lt;td&gt;37072&lt;/td&gt;&lt;td&gt;0.9835&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;23m33.000s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;495&lt;/td&gt;&lt;td&gt;955333&lt;/td&gt;&lt;td&gt;1929&lt;/td&gt;&lt;td&gt;2426&lt;/td&gt;&lt;td&gt;10235&lt;/td&gt;&lt;td&gt;0.9290&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;383&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;6m40.744s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;845807&lt;/td&gt;&lt;td&gt;4066&lt;/td&gt;&lt;td&gt;5938&lt;/td&gt;&lt;td&gt;19562&lt;/td&gt;&lt;td&gt;0.9664&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;1m13.446s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;160&lt;/td&gt;&lt;td&gt;861365&lt;/td&gt;&lt;td&gt;5383&lt;/td&gt;&lt;td&gt;8079&lt;/td&gt;&lt;td&gt;48424&lt;/td&gt;&lt;td&gt;0.9544&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;2m27.208s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;332&lt;/td&gt;&lt;td&gt;826396&lt;/td&gt;&lt;td&gt;2489&lt;/td&gt;&lt;td&gt;3369&lt;/td&gt;&lt;td&gt;17054&lt;/td&gt;&lt;td&gt;0.9435&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1m44.050s&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;

== Discussion ==

Ray is good.

=== Mix14 ===

Incorrect Ray contig on mix14:
&lt;pre&gt;
115
 4210996  4294119  |   112667    29544  |    83124    83124  |    99.99  |  4639675   112667  |     1.79    73.78  | gi|49175990|ref|NC_000913.2|       115
 4294197  4323999  |    29805        1  |    29803    29805  |    99.99  |  4639675   112667  |     0.64    26.45  | gi|49175990|ref|NC_000913.2|       115
&lt;/pre&gt;

It looks ok to me.</text>
    </revision>
    <revision>
      <id>123</id>
      <timestamp>2010-04-24T12:51:04Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Assemblers */</comment>
      <text xml:space="preserve">== Ray version ==
&lt;pre class=&quot;wiki&quot;&gt;AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux
&lt;/pre&gt;

== Assemblers ==
&lt;pre class=&quot;wiki&quot;&gt;nproc=25
velvetVersion=0.7.61
eulerVersion=1.1.2
newblerVersion=2.0.00.20
rayVersion=0.0.7
abyssVersion=1.1.2
wordSize=21

== Datasets ==

&lt;pre class=&quot;wiki&quot;&gt;    *  Simulated datasets
          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)
          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)
          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)
          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)
          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)
          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)
          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)
          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) 
    * Mixed set 1: E. coli K-12 MG1655 
          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
    * Mixed set 2: Acinetobacter sp. ADP1 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)
    * Mixed set 3: Cryptobacterium curtum DSM 15641 (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)
    * Illumina-only paired datasets
          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) 

== Comparisons==

&lt;table border=&quot;1&quot;&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;261&lt;/td&gt;&lt;td&gt;1967594&lt;/td&gt;&lt;td&gt;7538&lt;/td&gt;&lt;td&gt;11621&lt;/td&gt;&lt;td&gt;61396&lt;/td&gt;&lt;td&gt;0.9419&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;7m22.779s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;280&lt;/td&gt;&lt;td&gt;1917129&lt;/td&gt;&lt;td&gt;6846&lt;/td&gt;&lt;td&gt;11279&lt;/td&gt;&lt;td&gt;44362&lt;/td&gt;&lt;td&gt;0.9437&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;2m15.931s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1954999&lt;/td&gt;&lt;td&gt;7548&lt;/td&gt;&lt;td&gt;11561&lt;/td&gt;&lt;td&gt;77867&lt;/td&gt;&lt;td&gt;0.9608&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m25.240s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;417&lt;/td&gt;&lt;td&gt;1898819&lt;/td&gt;&lt;td&gt;4553&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9343&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1m56.066s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;1965104&lt;/td&gt;&lt;td&gt;7359&lt;/td&gt;&lt;td&gt;11477&lt;/td&gt;&lt;td&gt;61349&lt;/td&gt;&lt;td&gt;0.9413&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;79&lt;/td&gt;&lt;td&gt;237&lt;/td&gt;&lt;td&gt;11m15.383s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;290&lt;/td&gt;&lt;td&gt;1913682&lt;/td&gt;&lt;td&gt;6598&lt;/td&gt;&lt;td&gt;10302&lt;/td&gt;&lt;td&gt;42572&lt;/td&gt;&lt;td&gt;0.9423&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;2m40.792s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1939235&lt;/td&gt;&lt;td&gt;7487&lt;/td&gt;&lt;td&gt;11554&lt;/td&gt;&lt;td&gt;77853&lt;/td&gt;&lt;td&gt;0.9531&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m29.223s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;418&lt;/td&gt;&lt;td&gt;1898547&lt;/td&gt;&lt;td&gt;4541&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9342&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m52.727s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;235&lt;/td&gt;&lt;td&gt;1976831&lt;/td&gt;&lt;td&gt;8412&lt;/td&gt;&lt;td&gt;12383&lt;/td&gt;&lt;td&gt;61593&lt;/td&gt;&lt;td&gt;0.9458&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;187&lt;/td&gt;&lt;td&gt;9m59.464s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;113&lt;/td&gt;&lt;td&gt;1950222&lt;/td&gt;&lt;td&gt;17258&lt;/td&gt;&lt;td&gt;32111&lt;/td&gt;&lt;td&gt;123292&lt;/td&gt;&lt;td&gt;0.9565&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;382&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;2m15.371s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;1964569&lt;/td&gt;&lt;td&gt;20464&lt;/td&gt;&lt;td&gt;36692&lt;/td&gt;&lt;td&gt;127906&lt;/td&gt;&lt;td&gt;0.9632&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m52.834s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;151&lt;/td&gt;&lt;td&gt;2019778&lt;/td&gt;&lt;td&gt;13376&lt;/td&gt;&lt;td&gt;22045&lt;/td&gt;&lt;td&gt;104182&lt;/td&gt;&lt;td&gt;0.9815&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;213&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;3m38.944s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;75&lt;/td&gt;&lt;td&gt;4559811&lt;/td&gt;&lt;td&gt;60797&lt;/td&gt;&lt;td&gt;132967&lt;/td&gt;&lt;td&gt;326953&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;16m56.911s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;5399988&lt;/td&gt;&lt;td&gt;39705&lt;/td&gt;&lt;td&gt;86536&lt;/td&gt;&lt;td&gt;280065&lt;/td&gt;&lt;td&gt;0.9668&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;106&lt;/td&gt;&lt;td&gt;903&lt;/td&gt;&lt;td&gt;19m16.247s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;693&lt;/td&gt;&lt;td&gt;4472973&lt;/td&gt;&lt;td&gt;6454&lt;/td&gt;&lt;td&gt;10495&lt;/td&gt;&lt;td&gt;53974&lt;/td&gt;&lt;td&gt;0.9638&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m42.483s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4595945&lt;/td&gt;&lt;td&gt;55372&lt;/td&gt;&lt;td&gt;122763&lt;/td&gt;&lt;td&gt;327771&lt;/td&gt;&lt;td&gt;0.9876&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m24.874s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4450079&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m51.884s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;248&lt;/td&gt;&lt;td&gt;4711107&lt;/td&gt;&lt;td&gt;18996&lt;/td&gt;&lt;td&gt;33519&lt;/td&gt;&lt;td&gt;131097&lt;/td&gt;&lt;td&gt;0.9728&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;84&lt;/td&gt;&lt;td&gt;1186&lt;/td&gt;&lt;td&gt;24m49.858s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;129&lt;/td&gt;&lt;td&gt;4527399&lt;/td&gt;&lt;td&gt;35096&lt;/td&gt;&lt;td&gt;68879&lt;/td&gt;&lt;td&gt;269606&lt;/td&gt;&lt;td&gt;0.9758&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;497&lt;/td&gt;&lt;td&gt;842&lt;/td&gt;&lt;td&gt;5m33.387s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;4584885&lt;/td&gt;&lt;td&gt;41680&lt;/td&gt;&lt;td&gt;83042&lt;/td&gt;&lt;td&gt;269979&lt;/td&gt;&lt;td&gt;0.9841&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m40.040s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;147&lt;/td&gt;&lt;td&gt;4608010&lt;/td&gt;&lt;td&gt;31347&lt;/td&gt;&lt;td&gt;59697&lt;/td&gt;&lt;td&gt;174234&lt;/td&gt;&lt;td&gt;0.9880&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;289&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;7m39.983s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;323&lt;/td&gt;&lt;td&gt;4713939&lt;/td&gt;&lt;td&gt;14594&lt;/td&gt;&lt;td&gt;27098&lt;/td&gt;&lt;td&gt;100573&lt;/td&gt;&lt;td&gt;0.9714&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;970&lt;/td&gt;&lt;td&gt;19m40.888s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;405&lt;/td&gt;&lt;td&gt;4504211&lt;/td&gt;&lt;td&gt;11121&lt;/td&gt;&lt;td&gt;18003&lt;/td&gt;&lt;td&gt;120868&lt;/td&gt;&lt;td&gt;0.9713&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;4m52.789s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;317&lt;/td&gt;&lt;td&gt;4560682&lt;/td&gt;&lt;td&gt;14387&lt;/td&gt;&lt;td&gt;25607&lt;/td&gt;&lt;td&gt;120916&lt;/td&gt;&lt;td&gt;0.9780&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;9m39.849s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4449989&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m34.519s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;422&lt;/td&gt;&lt;td&gt;7066990&lt;/td&gt;&lt;td&gt;16746&lt;/td&gt;&lt;td&gt;35498&lt;/td&gt;&lt;td&gt;170764&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;80&lt;/td&gt;&lt;td&gt;531&lt;/td&gt;&lt;td&gt;29m11.924s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1264&lt;/td&gt;&lt;td&gt;6086321&lt;/td&gt;&lt;td&gt;4815&lt;/td&gt;&lt;td&gt;7720&lt;/td&gt;&lt;td&gt;49780&lt;/td&gt;&lt;td&gt;0.9716&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;93&lt;/td&gt;&lt;td&gt;8m10.649s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;547&lt;/td&gt;&lt;td&gt;6143206&lt;/td&gt;&lt;td&gt;11230&lt;/td&gt;&lt;td&gt;22131&lt;/td&gt;&lt;td&gt;210111&lt;/td&gt;&lt;td&gt;0.9782&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m47.722s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABYSS&lt;/td&gt;&lt;td&gt;4057&lt;/td&gt;&lt;td&gt;4998428&lt;/td&gt;&lt;td&gt;1232&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;14076&lt;/td&gt;&lt;td&gt;0.7933&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6m5.597s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;251&lt;/td&gt;&lt;td&gt;6305646&lt;/td&gt;&lt;td&gt;25122&lt;/td&gt;&lt;td&gt;55095&lt;/td&gt;&lt;td&gt;182061&lt;/td&gt;&lt;td&gt;0.9871&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;216&lt;/td&gt;&lt;td&gt;551&lt;/td&gt;&lt;td&gt;36m53.145s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;86&lt;/td&gt;&lt;td&gt;6189575&lt;/td&gt;&lt;td&gt;71971&lt;/td&gt;&lt;td&gt;289674&lt;/td&gt;&lt;td&gt;579752&lt;/td&gt;&lt;td&gt;0.9843&lt;/td&gt;&lt;td&gt;29&lt;/td&gt;&lt;td&gt;1079&lt;/td&gt;&lt;td&gt;2433&lt;/td&gt;&lt;td&gt;7m12.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;122&lt;/td&gt;&lt;td&gt;6227165&lt;/td&gt;&lt;td&gt;51042&lt;/td&gt;&lt;td&gt;110638&lt;/td&gt;&lt;td&gt;346568&lt;/td&gt;&lt;td&gt;0.9919&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m3.064s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;152&lt;/td&gt;&lt;td&gt;6416064&lt;/td&gt;&lt;td&gt;42210&lt;/td&gt;&lt;td&gt;83309&lt;/td&gt;&lt;td&gt;368070&lt;/td&gt;&lt;td&gt;0.9954&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;455&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;11m35.355s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1937&lt;/td&gt;&lt;td&gt;4102206&lt;/td&gt;&lt;td&gt;2117&lt;/td&gt;&lt;td&gt;3001&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8656&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1162&lt;/td&gt;&lt;td&gt;7360&lt;/td&gt;&lt;td&gt;135m2.904s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;528&lt;/td&gt;&lt;td&gt;4491661&lt;/td&gt;&lt;td&gt;8506&lt;/td&gt;&lt;td&gt;14236&lt;/td&gt;&lt;td&gt;60568&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;28m55.106s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;420&lt;/td&gt;&lt;td&gt;4522457&lt;/td&gt;&lt;td&gt;10767&lt;/td&gt;&lt;td&gt;16970&lt;/td&gt;&lt;td&gt;66556&lt;/td&gt;&lt;td&gt;0.9702&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;37m57.168s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1026&lt;/td&gt;&lt;td&gt;4440595&lt;/td&gt;&lt;td&gt;4328&lt;/td&gt;&lt;td&gt;6898&lt;/td&gt;&lt;td&gt;34595&lt;/td&gt;&lt;td&gt;0.9550&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;23m3.949s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1761&lt;/td&gt;&lt;td&gt;4099614&lt;/td&gt;&lt;td&gt;2328&lt;/td&gt;&lt;td&gt;3429&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8708&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;1173&lt;/td&gt;&lt;td&gt;7355&lt;/td&gt;&lt;td&gt;143m27.647s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4542631&lt;/td&gt;&lt;td&gt;54730&lt;/td&gt;&lt;td&gt;125611&lt;/td&gt;&lt;td&gt;311586&lt;/td&gt;&lt;td&gt;0.9657&lt;/td&gt;&lt;td&gt;28&lt;/td&gt;&lt;td&gt;456&lt;/td&gt;&lt;td&gt;895&lt;/td&gt;&lt;td&gt;31m51.199s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;126&lt;/td&gt;&lt;td&gt;4591168&lt;/td&gt;&lt;td&gt;36437&lt;/td&gt;&lt;td&gt;72499&lt;/td&gt;&lt;td&gt;174569&lt;/td&gt;&lt;td&gt;0.9818&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;47m54.377s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4661190&lt;/td&gt;&lt;td&gt;30267&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174288&lt;/td&gt;&lt;td&gt;0.9840&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;233&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;44m53.714s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;874&lt;/td&gt;&lt;td&gt;4513335&lt;/td&gt;&lt;td&gt;5163&lt;/td&gt;&lt;td&gt;8771&lt;/td&gt;&lt;td&gt;42344&lt;/td&gt;&lt;td&gt;0.9731&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;td&gt;247&lt;/td&gt;&lt;td&gt;29m53.841s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1538&lt;/td&gt;&lt;td&gt;5056677&lt;/td&gt;&lt;td&gt;3287&lt;/td&gt;&lt;td&gt;4969&lt;/td&gt;&lt;td&gt;26316&lt;/td&gt;&lt;td&gt;0.9600&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;648&lt;/td&gt;&lt;td&gt;1199&lt;/td&gt;&lt;td&gt;7m49.404s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;2415&lt;/td&gt;&lt;td&gt;3942859&lt;/td&gt;&lt;td&gt;1632&lt;/td&gt;&lt;td&gt;2068&lt;/td&gt;&lt;td&gt;10286&lt;/td&gt;&lt;td&gt;0.8499&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;386&lt;/td&gt;&lt;td&gt;207&lt;/td&gt;&lt;td&gt;2m10.820s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;1722&lt;/td&gt;&lt;td&gt;4737188&lt;/td&gt;&lt;td&gt;2750&lt;/td&gt;&lt;td&gt;3660&lt;/td&gt;&lt;td&gt;16250&lt;/td&gt;&lt;td&gt;0.9630&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;145&lt;/td&gt;&lt;td&gt;89&lt;/td&gt;&lt;td&gt;5m27.089s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2662&lt;/td&gt;&lt;td&gt;4020201&lt;/td&gt;&lt;td&gt;1510&lt;/td&gt;&lt;td&gt;1899&lt;/td&gt;&lt;td&gt;12092&lt;/td&gt;&lt;td&gt;0.8630&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;63&lt;/td&gt;&lt;td&gt;41&lt;/td&gt;&lt;td&gt;3m45.703s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1813&lt;/td&gt;&lt;td&gt;3538992&lt;/td&gt;&lt;td&gt;1952&lt;/td&gt;&lt;td&gt;2632&lt;/td&gt;&lt;td&gt;15039&lt;/td&gt;&lt;td&gt;0.7598&lt;/td&gt;&lt;td&gt;598&lt;/td&gt;&lt;td&gt;1820&lt;/td&gt;&lt;td&gt;7077&lt;/td&gt;&lt;td&gt;157m46.099s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;754&lt;/td&gt;&lt;td&gt;4518284&lt;/td&gt;&lt;td&gt;5992&lt;/td&gt;&lt;td&gt;8787&lt;/td&gt;&lt;td&gt;29554&lt;/td&gt;&lt;td&gt;0.9730&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;35m18.761s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;4579657&lt;/td&gt;&lt;td&gt;42015&lt;/td&gt;&lt;td&gt;87318&lt;/td&gt;&lt;td&gt;268385&lt;/td&gt;&lt;td&gt;0.9831&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;234&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;62m30.978s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4667915&lt;/td&gt;&lt;td&gt;30311&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174286&lt;/td&gt;&lt;td&gt;0.9851&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;239&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;47m12.271s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1498&lt;/td&gt;&lt;td&gt;4706276&lt;/td&gt;&lt;td&gt;3141&lt;/td&gt;&lt;td&gt;4965&lt;/td&gt;&lt;td&gt;24129&lt;/td&gt;&lt;td&gt;0.9679&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1115&lt;/td&gt;&lt;td&gt;210&lt;/td&gt;&lt;td&gt;87m18.839s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;4361792&lt;/td&gt;&lt;td&gt;10143&lt;/td&gt;&lt;td&gt;20490&lt;/td&gt;&lt;td&gt;85191&lt;/td&gt;&lt;td&gt;0.9773&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;381&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;16m3.742s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;3677696&lt;/td&gt;&lt;td&gt;14199&lt;/td&gt;&lt;td&gt;25852&lt;/td&gt;&lt;td&gt;72730&lt;/td&gt;&lt;td&gt;0.9749&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;82&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;29m48.993s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1105&lt;/td&gt;&lt;td&gt;4315007&lt;/td&gt;&lt;td&gt;3904&lt;/td&gt;&lt;td&gt;6485&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9697&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;172&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;28m59.212s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;3547847&lt;/td&gt;&lt;td&gt;32549&lt;/td&gt;&lt;td&gt;61793&lt;/td&gt;&lt;td&gt;214173&lt;/td&gt;&lt;td&gt;0.9846&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;380&lt;/td&gt;&lt;td&gt;43m3.785s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1715&lt;/td&gt;&lt;td&gt;6018217&lt;/td&gt;&lt;td&gt;3509&lt;/td&gt;&lt;td&gt;5511&lt;/td&gt;&lt;td&gt;29671&lt;/td&gt;&lt;td&gt;0.9722&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;1421&lt;/td&gt;&lt;td&gt;12480&lt;/td&gt;&lt;td&gt;18m3.905s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1440&lt;/td&gt;&lt;td&gt;3356900&lt;/td&gt;&lt;td&gt;2331&lt;/td&gt;&lt;td&gt;3267&lt;/td&gt;&lt;td&gt;14690&lt;/td&gt;&lt;td&gt;0.9308&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;704&lt;/td&gt;&lt;td&gt;3166&lt;/td&gt;&lt;td&gt;3m54.495s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;2482&lt;/td&gt;&lt;td&gt;3361598&lt;/td&gt;&lt;td&gt;1354&lt;/td&gt;&lt;td&gt;1554&lt;/td&gt;&lt;td&gt;7435&lt;/td&gt;&lt;td&gt;0.8571&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;305&lt;/td&gt;&lt;td&gt;5m22.559s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2324&lt;/td&gt;&lt;td&gt;2991350&lt;/td&gt;&lt;td&gt;1287&lt;/td&gt;&lt;td&gt;1496&lt;/td&gt;&lt;td&gt;10227&lt;/td&gt;&lt;td&gt;0.8309&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;37&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;7m4.659s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;2399&lt;/td&gt;&lt;td&gt;6932733&lt;/td&gt;&lt;td&gt;2889&lt;/td&gt;&lt;td&gt;4495&lt;/td&gt;&lt;td&gt;47460&lt;/td&gt;&lt;td&gt;0.9681&lt;/td&gt;&lt;td&gt;70&lt;/td&gt;&lt;td&gt;2149&lt;/td&gt;&lt;td&gt;8033&lt;/td&gt;&lt;td&gt;129m53.436s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1165&lt;/td&gt;&lt;td&gt;4285023&lt;/td&gt;&lt;td&gt;3678&lt;/td&gt;&lt;td&gt;5820&lt;/td&gt;&lt;td&gt;21242&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;753&lt;/td&gt;&lt;td&gt;3164&lt;/td&gt;&lt;td&gt;22m52.574s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;91&lt;/td&gt;&lt;td&gt;3540404&lt;/td&gt;&lt;td&gt;38905&lt;/td&gt;&lt;td&gt;82891&lt;/td&gt;&lt;td&gt;215819&lt;/td&gt;&lt;td&gt;0.9804&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;36m27.635s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1198&lt;/td&gt;&lt;td&gt;4294398&lt;/td&gt;&lt;td&gt;3584&lt;/td&gt;&lt;td&gt;5748&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9677&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;175&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;34m34.469s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;166&lt;/td&gt;&lt;td&gt;109935&lt;/td&gt;&lt;td&gt;662&lt;/td&gt;&lt;td&gt;651&lt;/td&gt;&lt;td&gt;1433&lt;/td&gt;&lt;td&gt;0.0608&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;741&lt;/td&gt;&lt;td&gt;620&lt;/td&gt;&lt;td&gt;79m50.304s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;1598265&lt;/td&gt;&lt;td&gt;7683&lt;/td&gt;&lt;td&gt;12698&lt;/td&gt;&lt;td&gt;54143&lt;/td&gt;&lt;td&gt;0.9890&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;133&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;13m2.283s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;td&gt;1606647&lt;/td&gt;&lt;td&gt;22314&lt;/td&gt;&lt;td&gt;36518&lt;/td&gt;&lt;td&gt;91303&lt;/td&gt;&lt;td&gt;0.9862&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;19m51.388s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;156&lt;/td&gt;&lt;td&gt;1596474&lt;/td&gt;&lt;td&gt;10233&lt;/td&gt;&lt;td&gt;19950&lt;/td&gt;&lt;td&gt;69217&lt;/td&gt;&lt;td&gt;0.9881&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;22m45.895s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;1609423&lt;/td&gt;&lt;td&gt;53647&lt;/td&gt;&lt;td&gt;261125&lt;/td&gt;&lt;td&gt;477358&lt;/td&gt;&lt;td&gt;0.9904&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;21m24.064s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;153&lt;/td&gt;&lt;td&gt;3078576&lt;/td&gt;&lt;td&gt;20121&lt;/td&gt;&lt;td&gt;76729&lt;/td&gt;&lt;td&gt;258262&lt;/td&gt;&lt;td&gt;0.9861&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;104&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;13m55.961s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;1600395&lt;/td&gt;&lt;td&gt;27593&lt;/td&gt;&lt;td&gt;76702&lt;/td&gt;&lt;td&gt;191999&lt;/td&gt;&lt;td&gt;0.9914&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;176&lt;/td&gt;&lt;td&gt;3m29.796s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;184&lt;/td&gt;&lt;td&gt;1573256&lt;/td&gt;&lt;td&gt;8550&lt;/td&gt;&lt;td&gt;14142&lt;/td&gt;&lt;td&gt;76631&lt;/td&gt;&lt;td&gt;0.9503&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m42.587s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;478&lt;/td&gt;&lt;td&gt;1566837&lt;/td&gt;&lt;td&gt;3277&lt;/td&gt;&lt;td&gt;5064&lt;/td&gt;&lt;td&gt;16718&lt;/td&gt;&lt;td&gt;0.9689&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m14.770s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;td&gt;27077&lt;/td&gt;&lt;td&gt;601&lt;/td&gt;&lt;td&gt;567&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;0.0023&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;67&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;87m51.332s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;190&lt;/td&gt;&lt;td&gt;1593755&lt;/td&gt;&lt;td&gt;8388&lt;/td&gt;&lt;td&gt;13136&lt;/td&gt;&lt;td&gt;45625&lt;/td&gt;&lt;td&gt;0.9848&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;238&lt;/td&gt;&lt;td&gt;1701&lt;/td&gt;&lt;td&gt;16m37.093s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;1602133&lt;/td&gt;&lt;td&gt;59338&lt;/td&gt;&lt;td&gt;116274&lt;/td&gt;&lt;td&gt;236544&lt;/td&gt;&lt;td&gt;0.9897&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;35m8.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;1590298&lt;/td&gt;&lt;td&gt;6361&lt;/td&gt;&lt;td&gt;10207&lt;/td&gt;&lt;td&gt;37072&lt;/td&gt;&lt;td&gt;0.9835&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;23m33.000s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;495&lt;/td&gt;&lt;td&gt;955333&lt;/td&gt;&lt;td&gt;1929&lt;/td&gt;&lt;td&gt;2426&lt;/td&gt;&lt;td&gt;10235&lt;/td&gt;&lt;td&gt;0.9290&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;383&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;6m40.744s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;845807&lt;/td&gt;&lt;td&gt;4066&lt;/td&gt;&lt;td&gt;5938&lt;/td&gt;&lt;td&gt;19562&lt;/td&gt;&lt;td&gt;0.9664&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;1m13.446s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;160&lt;/td&gt;&lt;td&gt;861365&lt;/td&gt;&lt;td&gt;5383&lt;/td&gt;&lt;td&gt;8079&lt;/td&gt;&lt;td&gt;48424&lt;/td&gt;&lt;td&gt;0.9544&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;2m27.208s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;332&lt;/td&gt;&lt;td&gt;826396&lt;/td&gt;&lt;td&gt;2489&lt;/td&gt;&lt;td&gt;3369&lt;/td&gt;&lt;td&gt;17054&lt;/td&gt;&lt;td&gt;0.9435&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1m44.050s&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;

== Discussion ==

Ray is good.

=== Mix14 ===

Incorrect Ray contig on mix14:
&lt;pre&gt;
115
 4210996  4294119  |   112667    29544  |    83124    83124  |    99.99  |  4639675   112667  |     1.79    73.78  | gi|49175990|ref|NC_000913.2|       115
 4294197  4323999  |    29805        1  |    29803    29805  |    99.99  |  4639675   112667  |     0.64    26.45  | gi|49175990|ref|NC_000913.2|       115
&lt;/pre&gt;

It looks ok to me.</text>
    </revision>
    <revision>
      <id>124</id>
      <timestamp>2010-04-24T12:51:28Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Assemblers */</comment>
      <text xml:space="preserve">== Ray version ==
&lt;pre class=&quot;wiki&quot;&gt;AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux
&lt;/pre&gt;

== Assemblers ==
&lt;pre class=&quot;wiki&quot;&gt;nproc=25
velvetVersion=0.7.61
eulerVersion=1.1.2
newblerVersion=2.0.00.20
rayVersion=0.0.7
abyssVersion=1.1.2
wordSize=21
&lt;/pre&gt;

== Datasets ==

&lt;pre class=&quot;wiki&quot;&gt;    *  Simulated datasets
          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)
          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)
          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)
          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)
          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)
          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)
          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)
          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) 
    * Mixed set 1: E. coli K-12 MG1655 
          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
    * Mixed set 2: Acinetobacter sp. ADP1 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)
    * Mixed set 3: Cryptobacterium curtum DSM 15641 (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)
    * Illumina-only paired datasets
          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) 

== Comparisons==

&lt;table border=&quot;1&quot;&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;261&lt;/td&gt;&lt;td&gt;1967594&lt;/td&gt;&lt;td&gt;7538&lt;/td&gt;&lt;td&gt;11621&lt;/td&gt;&lt;td&gt;61396&lt;/td&gt;&lt;td&gt;0.9419&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;7m22.779s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;280&lt;/td&gt;&lt;td&gt;1917129&lt;/td&gt;&lt;td&gt;6846&lt;/td&gt;&lt;td&gt;11279&lt;/td&gt;&lt;td&gt;44362&lt;/td&gt;&lt;td&gt;0.9437&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;2m15.931s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1954999&lt;/td&gt;&lt;td&gt;7548&lt;/td&gt;&lt;td&gt;11561&lt;/td&gt;&lt;td&gt;77867&lt;/td&gt;&lt;td&gt;0.9608&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m25.240s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;417&lt;/td&gt;&lt;td&gt;1898819&lt;/td&gt;&lt;td&gt;4553&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9343&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1m56.066s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;1965104&lt;/td&gt;&lt;td&gt;7359&lt;/td&gt;&lt;td&gt;11477&lt;/td&gt;&lt;td&gt;61349&lt;/td&gt;&lt;td&gt;0.9413&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;79&lt;/td&gt;&lt;td&gt;237&lt;/td&gt;&lt;td&gt;11m15.383s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;290&lt;/td&gt;&lt;td&gt;1913682&lt;/td&gt;&lt;td&gt;6598&lt;/td&gt;&lt;td&gt;10302&lt;/td&gt;&lt;td&gt;42572&lt;/td&gt;&lt;td&gt;0.9423&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;2m40.792s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1939235&lt;/td&gt;&lt;td&gt;7487&lt;/td&gt;&lt;td&gt;11554&lt;/td&gt;&lt;td&gt;77853&lt;/td&gt;&lt;td&gt;0.9531&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m29.223s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;418&lt;/td&gt;&lt;td&gt;1898547&lt;/td&gt;&lt;td&gt;4541&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9342&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m52.727s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;235&lt;/td&gt;&lt;td&gt;1976831&lt;/td&gt;&lt;td&gt;8412&lt;/td&gt;&lt;td&gt;12383&lt;/td&gt;&lt;td&gt;61593&lt;/td&gt;&lt;td&gt;0.9458&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;187&lt;/td&gt;&lt;td&gt;9m59.464s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;113&lt;/td&gt;&lt;td&gt;1950222&lt;/td&gt;&lt;td&gt;17258&lt;/td&gt;&lt;td&gt;32111&lt;/td&gt;&lt;td&gt;123292&lt;/td&gt;&lt;td&gt;0.9565&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;382&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;2m15.371s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;1964569&lt;/td&gt;&lt;td&gt;20464&lt;/td&gt;&lt;td&gt;36692&lt;/td&gt;&lt;td&gt;127906&lt;/td&gt;&lt;td&gt;0.9632&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m52.834s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;151&lt;/td&gt;&lt;td&gt;2019778&lt;/td&gt;&lt;td&gt;13376&lt;/td&gt;&lt;td&gt;22045&lt;/td&gt;&lt;td&gt;104182&lt;/td&gt;&lt;td&gt;0.9815&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;213&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;3m38.944s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;75&lt;/td&gt;&lt;td&gt;4559811&lt;/td&gt;&lt;td&gt;60797&lt;/td&gt;&lt;td&gt;132967&lt;/td&gt;&lt;td&gt;326953&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;16m56.911s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;5399988&lt;/td&gt;&lt;td&gt;39705&lt;/td&gt;&lt;td&gt;86536&lt;/td&gt;&lt;td&gt;280065&lt;/td&gt;&lt;td&gt;0.9668&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;106&lt;/td&gt;&lt;td&gt;903&lt;/td&gt;&lt;td&gt;19m16.247s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;693&lt;/td&gt;&lt;td&gt;4472973&lt;/td&gt;&lt;td&gt;6454&lt;/td&gt;&lt;td&gt;10495&lt;/td&gt;&lt;td&gt;53974&lt;/td&gt;&lt;td&gt;0.9638&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m42.483s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4595945&lt;/td&gt;&lt;td&gt;55372&lt;/td&gt;&lt;td&gt;122763&lt;/td&gt;&lt;td&gt;327771&lt;/td&gt;&lt;td&gt;0.9876&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m24.874s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4450079&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m51.884s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;248&lt;/td&gt;&lt;td&gt;4711107&lt;/td&gt;&lt;td&gt;18996&lt;/td&gt;&lt;td&gt;33519&lt;/td&gt;&lt;td&gt;131097&lt;/td&gt;&lt;td&gt;0.9728&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;84&lt;/td&gt;&lt;td&gt;1186&lt;/td&gt;&lt;td&gt;24m49.858s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;129&lt;/td&gt;&lt;td&gt;4527399&lt;/td&gt;&lt;td&gt;35096&lt;/td&gt;&lt;td&gt;68879&lt;/td&gt;&lt;td&gt;269606&lt;/td&gt;&lt;td&gt;0.9758&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;497&lt;/td&gt;&lt;td&gt;842&lt;/td&gt;&lt;td&gt;5m33.387s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;4584885&lt;/td&gt;&lt;td&gt;41680&lt;/td&gt;&lt;td&gt;83042&lt;/td&gt;&lt;td&gt;269979&lt;/td&gt;&lt;td&gt;0.9841&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m40.040s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;147&lt;/td&gt;&lt;td&gt;4608010&lt;/td&gt;&lt;td&gt;31347&lt;/td&gt;&lt;td&gt;59697&lt;/td&gt;&lt;td&gt;174234&lt;/td&gt;&lt;td&gt;0.9880&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;289&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;7m39.983s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;323&lt;/td&gt;&lt;td&gt;4713939&lt;/td&gt;&lt;td&gt;14594&lt;/td&gt;&lt;td&gt;27098&lt;/td&gt;&lt;td&gt;100573&lt;/td&gt;&lt;td&gt;0.9714&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;970&lt;/td&gt;&lt;td&gt;19m40.888s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;405&lt;/td&gt;&lt;td&gt;4504211&lt;/td&gt;&lt;td&gt;11121&lt;/td&gt;&lt;td&gt;18003&lt;/td&gt;&lt;td&gt;120868&lt;/td&gt;&lt;td&gt;0.9713&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;4m52.789s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;317&lt;/td&gt;&lt;td&gt;4560682&lt;/td&gt;&lt;td&gt;14387&lt;/td&gt;&lt;td&gt;25607&lt;/td&gt;&lt;td&gt;120916&lt;/td&gt;&lt;td&gt;0.9780&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;9m39.849s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4449989&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m34.519s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;422&lt;/td&gt;&lt;td&gt;7066990&lt;/td&gt;&lt;td&gt;16746&lt;/td&gt;&lt;td&gt;35498&lt;/td&gt;&lt;td&gt;170764&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;80&lt;/td&gt;&lt;td&gt;531&lt;/td&gt;&lt;td&gt;29m11.924s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1264&lt;/td&gt;&lt;td&gt;6086321&lt;/td&gt;&lt;td&gt;4815&lt;/td&gt;&lt;td&gt;7720&lt;/td&gt;&lt;td&gt;49780&lt;/td&gt;&lt;td&gt;0.9716&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;93&lt;/td&gt;&lt;td&gt;8m10.649s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;547&lt;/td&gt;&lt;td&gt;6143206&lt;/td&gt;&lt;td&gt;11230&lt;/td&gt;&lt;td&gt;22131&lt;/td&gt;&lt;td&gt;210111&lt;/td&gt;&lt;td&gt;0.9782&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m47.722s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABYSS&lt;/td&gt;&lt;td&gt;4057&lt;/td&gt;&lt;td&gt;4998428&lt;/td&gt;&lt;td&gt;1232&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;14076&lt;/td&gt;&lt;td&gt;0.7933&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6m5.597s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;251&lt;/td&gt;&lt;td&gt;6305646&lt;/td&gt;&lt;td&gt;25122&lt;/td&gt;&lt;td&gt;55095&lt;/td&gt;&lt;td&gt;182061&lt;/td&gt;&lt;td&gt;0.9871&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;216&lt;/td&gt;&lt;td&gt;551&lt;/td&gt;&lt;td&gt;36m53.145s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;86&lt;/td&gt;&lt;td&gt;6189575&lt;/td&gt;&lt;td&gt;71971&lt;/td&gt;&lt;td&gt;289674&lt;/td&gt;&lt;td&gt;579752&lt;/td&gt;&lt;td&gt;0.9843&lt;/td&gt;&lt;td&gt;29&lt;/td&gt;&lt;td&gt;1079&lt;/td&gt;&lt;td&gt;2433&lt;/td&gt;&lt;td&gt;7m12.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;122&lt;/td&gt;&lt;td&gt;6227165&lt;/td&gt;&lt;td&gt;51042&lt;/td&gt;&lt;td&gt;110638&lt;/td&gt;&lt;td&gt;346568&lt;/td&gt;&lt;td&gt;0.9919&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m3.064s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;152&lt;/td&gt;&lt;td&gt;6416064&lt;/td&gt;&lt;td&gt;42210&lt;/td&gt;&lt;td&gt;83309&lt;/td&gt;&lt;td&gt;368070&lt;/td&gt;&lt;td&gt;0.9954&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;455&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;11m35.355s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1937&lt;/td&gt;&lt;td&gt;4102206&lt;/td&gt;&lt;td&gt;2117&lt;/td&gt;&lt;td&gt;3001&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8656&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1162&lt;/td&gt;&lt;td&gt;7360&lt;/td&gt;&lt;td&gt;135m2.904s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;528&lt;/td&gt;&lt;td&gt;4491661&lt;/td&gt;&lt;td&gt;8506&lt;/td&gt;&lt;td&gt;14236&lt;/td&gt;&lt;td&gt;60568&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;28m55.106s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;420&lt;/td&gt;&lt;td&gt;4522457&lt;/td&gt;&lt;td&gt;10767&lt;/td&gt;&lt;td&gt;16970&lt;/td&gt;&lt;td&gt;66556&lt;/td&gt;&lt;td&gt;0.9702&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;37m57.168s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1026&lt;/td&gt;&lt;td&gt;4440595&lt;/td&gt;&lt;td&gt;4328&lt;/td&gt;&lt;td&gt;6898&lt;/td&gt;&lt;td&gt;34595&lt;/td&gt;&lt;td&gt;0.9550&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;23m3.949s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1761&lt;/td&gt;&lt;td&gt;4099614&lt;/td&gt;&lt;td&gt;2328&lt;/td&gt;&lt;td&gt;3429&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8708&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;1173&lt;/td&gt;&lt;td&gt;7355&lt;/td&gt;&lt;td&gt;143m27.647s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4542631&lt;/td&gt;&lt;td&gt;54730&lt;/td&gt;&lt;td&gt;125611&lt;/td&gt;&lt;td&gt;311586&lt;/td&gt;&lt;td&gt;0.9657&lt;/td&gt;&lt;td&gt;28&lt;/td&gt;&lt;td&gt;456&lt;/td&gt;&lt;td&gt;895&lt;/td&gt;&lt;td&gt;31m51.199s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;126&lt;/td&gt;&lt;td&gt;4591168&lt;/td&gt;&lt;td&gt;36437&lt;/td&gt;&lt;td&gt;72499&lt;/td&gt;&lt;td&gt;174569&lt;/td&gt;&lt;td&gt;0.9818&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;47m54.377s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4661190&lt;/td&gt;&lt;td&gt;30267&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174288&lt;/td&gt;&lt;td&gt;0.9840&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;233&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;44m53.714s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;874&lt;/td&gt;&lt;td&gt;4513335&lt;/td&gt;&lt;td&gt;5163&lt;/td&gt;&lt;td&gt;8771&lt;/td&gt;&lt;td&gt;42344&lt;/td&gt;&lt;td&gt;0.9731&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;td&gt;247&lt;/td&gt;&lt;td&gt;29m53.841s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1538&lt;/td&gt;&lt;td&gt;5056677&lt;/td&gt;&lt;td&gt;3287&lt;/td&gt;&lt;td&gt;4969&lt;/td&gt;&lt;td&gt;26316&lt;/td&gt;&lt;td&gt;0.9600&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;648&lt;/td&gt;&lt;td&gt;1199&lt;/td&gt;&lt;td&gt;7m49.404s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;2415&lt;/td&gt;&lt;td&gt;3942859&lt;/td&gt;&lt;td&gt;1632&lt;/td&gt;&lt;td&gt;2068&lt;/td&gt;&lt;td&gt;10286&lt;/td&gt;&lt;td&gt;0.8499&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;386&lt;/td&gt;&lt;td&gt;207&lt;/td&gt;&lt;td&gt;2m10.820s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;1722&lt;/td&gt;&lt;td&gt;4737188&lt;/td&gt;&lt;td&gt;2750&lt;/td&gt;&lt;td&gt;3660&lt;/td&gt;&lt;td&gt;16250&lt;/td&gt;&lt;td&gt;0.9630&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;145&lt;/td&gt;&lt;td&gt;89&lt;/td&gt;&lt;td&gt;5m27.089s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2662&lt;/td&gt;&lt;td&gt;4020201&lt;/td&gt;&lt;td&gt;1510&lt;/td&gt;&lt;td&gt;1899&lt;/td&gt;&lt;td&gt;12092&lt;/td&gt;&lt;td&gt;0.8630&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;63&lt;/td&gt;&lt;td&gt;41&lt;/td&gt;&lt;td&gt;3m45.703s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1813&lt;/td&gt;&lt;td&gt;3538992&lt;/td&gt;&lt;td&gt;1952&lt;/td&gt;&lt;td&gt;2632&lt;/td&gt;&lt;td&gt;15039&lt;/td&gt;&lt;td&gt;0.7598&lt;/td&gt;&lt;td&gt;598&lt;/td&gt;&lt;td&gt;1820&lt;/td&gt;&lt;td&gt;7077&lt;/td&gt;&lt;td&gt;157m46.099s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;754&lt;/td&gt;&lt;td&gt;4518284&lt;/td&gt;&lt;td&gt;5992&lt;/td&gt;&lt;td&gt;8787&lt;/td&gt;&lt;td&gt;29554&lt;/td&gt;&lt;td&gt;0.9730&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;35m18.761s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;4579657&lt;/td&gt;&lt;td&gt;42015&lt;/td&gt;&lt;td&gt;87318&lt;/td&gt;&lt;td&gt;268385&lt;/td&gt;&lt;td&gt;0.9831&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;234&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;62m30.978s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4667915&lt;/td&gt;&lt;td&gt;30311&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174286&lt;/td&gt;&lt;td&gt;0.9851&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;239&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;47m12.271s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1498&lt;/td&gt;&lt;td&gt;4706276&lt;/td&gt;&lt;td&gt;3141&lt;/td&gt;&lt;td&gt;4965&lt;/td&gt;&lt;td&gt;24129&lt;/td&gt;&lt;td&gt;0.9679&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1115&lt;/td&gt;&lt;td&gt;210&lt;/td&gt;&lt;td&gt;87m18.839s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;4361792&lt;/td&gt;&lt;td&gt;10143&lt;/td&gt;&lt;td&gt;20490&lt;/td&gt;&lt;td&gt;85191&lt;/td&gt;&lt;td&gt;0.9773&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;381&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;16m3.742s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;3677696&lt;/td&gt;&lt;td&gt;14199&lt;/td&gt;&lt;td&gt;25852&lt;/td&gt;&lt;td&gt;72730&lt;/td&gt;&lt;td&gt;0.9749&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;82&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;29m48.993s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1105&lt;/td&gt;&lt;td&gt;4315007&lt;/td&gt;&lt;td&gt;3904&lt;/td&gt;&lt;td&gt;6485&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9697&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;172&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;28m59.212s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;3547847&lt;/td&gt;&lt;td&gt;32549&lt;/td&gt;&lt;td&gt;61793&lt;/td&gt;&lt;td&gt;214173&lt;/td&gt;&lt;td&gt;0.9846&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;380&lt;/td&gt;&lt;td&gt;43m3.785s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1715&lt;/td&gt;&lt;td&gt;6018217&lt;/td&gt;&lt;td&gt;3509&lt;/td&gt;&lt;td&gt;5511&lt;/td&gt;&lt;td&gt;29671&lt;/td&gt;&lt;td&gt;0.9722&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;1421&lt;/td&gt;&lt;td&gt;12480&lt;/td&gt;&lt;td&gt;18m3.905s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1440&lt;/td&gt;&lt;td&gt;3356900&lt;/td&gt;&lt;td&gt;2331&lt;/td&gt;&lt;td&gt;3267&lt;/td&gt;&lt;td&gt;14690&lt;/td&gt;&lt;td&gt;0.9308&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;704&lt;/td&gt;&lt;td&gt;3166&lt;/td&gt;&lt;td&gt;3m54.495s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;2482&lt;/td&gt;&lt;td&gt;3361598&lt;/td&gt;&lt;td&gt;1354&lt;/td&gt;&lt;td&gt;1554&lt;/td&gt;&lt;td&gt;7435&lt;/td&gt;&lt;td&gt;0.8571&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;305&lt;/td&gt;&lt;td&gt;5m22.559s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2324&lt;/td&gt;&lt;td&gt;2991350&lt;/td&gt;&lt;td&gt;1287&lt;/td&gt;&lt;td&gt;1496&lt;/td&gt;&lt;td&gt;10227&lt;/td&gt;&lt;td&gt;0.8309&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;37&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;7m4.659s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;2399&lt;/td&gt;&lt;td&gt;6932733&lt;/td&gt;&lt;td&gt;2889&lt;/td&gt;&lt;td&gt;4495&lt;/td&gt;&lt;td&gt;47460&lt;/td&gt;&lt;td&gt;0.9681&lt;/td&gt;&lt;td&gt;70&lt;/td&gt;&lt;td&gt;2149&lt;/td&gt;&lt;td&gt;8033&lt;/td&gt;&lt;td&gt;129m53.436s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1165&lt;/td&gt;&lt;td&gt;4285023&lt;/td&gt;&lt;td&gt;3678&lt;/td&gt;&lt;td&gt;5820&lt;/td&gt;&lt;td&gt;21242&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;753&lt;/td&gt;&lt;td&gt;3164&lt;/td&gt;&lt;td&gt;22m52.574s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;91&lt;/td&gt;&lt;td&gt;3540404&lt;/td&gt;&lt;td&gt;38905&lt;/td&gt;&lt;td&gt;82891&lt;/td&gt;&lt;td&gt;215819&lt;/td&gt;&lt;td&gt;0.9804&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;36m27.635s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1198&lt;/td&gt;&lt;td&gt;4294398&lt;/td&gt;&lt;td&gt;3584&lt;/td&gt;&lt;td&gt;5748&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9677&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;175&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;34m34.469s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;166&lt;/td&gt;&lt;td&gt;109935&lt;/td&gt;&lt;td&gt;662&lt;/td&gt;&lt;td&gt;651&lt;/td&gt;&lt;td&gt;1433&lt;/td&gt;&lt;td&gt;0.0608&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;741&lt;/td&gt;&lt;td&gt;620&lt;/td&gt;&lt;td&gt;79m50.304s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;1598265&lt;/td&gt;&lt;td&gt;7683&lt;/td&gt;&lt;td&gt;12698&lt;/td&gt;&lt;td&gt;54143&lt;/td&gt;&lt;td&gt;0.9890&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;133&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;13m2.283s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;td&gt;1606647&lt;/td&gt;&lt;td&gt;22314&lt;/td&gt;&lt;td&gt;36518&lt;/td&gt;&lt;td&gt;91303&lt;/td&gt;&lt;td&gt;0.9862&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;19m51.388s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;156&lt;/td&gt;&lt;td&gt;1596474&lt;/td&gt;&lt;td&gt;10233&lt;/td&gt;&lt;td&gt;19950&lt;/td&gt;&lt;td&gt;69217&lt;/td&gt;&lt;td&gt;0.9881&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;22m45.895s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;1609423&lt;/td&gt;&lt;td&gt;53647&lt;/td&gt;&lt;td&gt;261125&lt;/td&gt;&lt;td&gt;477358&lt;/td&gt;&lt;td&gt;0.9904&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;21m24.064s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;153&lt;/td&gt;&lt;td&gt;3078576&lt;/td&gt;&lt;td&gt;20121&lt;/td&gt;&lt;td&gt;76729&lt;/td&gt;&lt;td&gt;258262&lt;/td&gt;&lt;td&gt;0.9861&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;104&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;13m55.961s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;1600395&lt;/td&gt;&lt;td&gt;27593&lt;/td&gt;&lt;td&gt;76702&lt;/td&gt;&lt;td&gt;191999&lt;/td&gt;&lt;td&gt;0.9914&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;176&lt;/td&gt;&lt;td&gt;3m29.796s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;184&lt;/td&gt;&lt;td&gt;1573256&lt;/td&gt;&lt;td&gt;8550&lt;/td&gt;&lt;td&gt;14142&lt;/td&gt;&lt;td&gt;76631&lt;/td&gt;&lt;td&gt;0.9503&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m42.587s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;478&lt;/td&gt;&lt;td&gt;1566837&lt;/td&gt;&lt;td&gt;3277&lt;/td&gt;&lt;td&gt;5064&lt;/td&gt;&lt;td&gt;16718&lt;/td&gt;&lt;td&gt;0.9689&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m14.770s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;td&gt;27077&lt;/td&gt;&lt;td&gt;601&lt;/td&gt;&lt;td&gt;567&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;0.0023&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;67&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;87m51.332s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;190&lt;/td&gt;&lt;td&gt;1593755&lt;/td&gt;&lt;td&gt;8388&lt;/td&gt;&lt;td&gt;13136&lt;/td&gt;&lt;td&gt;45625&lt;/td&gt;&lt;td&gt;0.9848&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;238&lt;/td&gt;&lt;td&gt;1701&lt;/td&gt;&lt;td&gt;16m37.093s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;1602133&lt;/td&gt;&lt;td&gt;59338&lt;/td&gt;&lt;td&gt;116274&lt;/td&gt;&lt;td&gt;236544&lt;/td&gt;&lt;td&gt;0.9897&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;35m8.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;1590298&lt;/td&gt;&lt;td&gt;6361&lt;/td&gt;&lt;td&gt;10207&lt;/td&gt;&lt;td&gt;37072&lt;/td&gt;&lt;td&gt;0.9835&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;23m33.000s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;495&lt;/td&gt;&lt;td&gt;955333&lt;/td&gt;&lt;td&gt;1929&lt;/td&gt;&lt;td&gt;2426&lt;/td&gt;&lt;td&gt;10235&lt;/td&gt;&lt;td&gt;0.9290&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;383&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;6m40.744s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;845807&lt;/td&gt;&lt;td&gt;4066&lt;/td&gt;&lt;td&gt;5938&lt;/td&gt;&lt;td&gt;19562&lt;/td&gt;&lt;td&gt;0.9664&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;1m13.446s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;160&lt;/td&gt;&lt;td&gt;861365&lt;/td&gt;&lt;td&gt;5383&lt;/td&gt;&lt;td&gt;8079&lt;/td&gt;&lt;td&gt;48424&lt;/td&gt;&lt;td&gt;0.9544&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;2m27.208s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;332&lt;/td&gt;&lt;td&gt;826396&lt;/td&gt;&lt;td&gt;2489&lt;/td&gt;&lt;td&gt;3369&lt;/td&gt;&lt;td&gt;17054&lt;/td&gt;&lt;td&gt;0.9435&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1m44.050s&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;

== Discussion ==

Ray is good.

=== Mix14 ===

Incorrect Ray contig on mix14:
&lt;pre&gt;
115
 4210996  4294119  |   112667    29544  |    83124    83124  |    99.99  |  4639675   112667  |     1.79    73.78  | gi|49175990|ref|NC_000913.2|       115
 4294197  4323999  |    29805        1  |    29803    29805  |    99.99  |  4639675   112667  |     0.64    26.45  | gi|49175990|ref|NC_000913.2|       115
&lt;/pre&gt;

It looks ok to me.</text>
    </revision>
    <revision>
      <id>126</id>
      <timestamp>2010-04-24T12:55:27Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Datasets */</comment>
      <text xml:space="preserve">== Ray version ==
&lt;pre class=&quot;wiki&quot;&gt;AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux
&lt;/pre&gt;

== Assemblers ==
&lt;pre class=&quot;wiki&quot;&gt;nproc=25
velvetVersion=0.7.61
eulerVersion=1.1.2
newblerVersion=2.0.00.20
rayVersion=0.0.7
abyssVersion=1.1.2
wordSize=21
&lt;/pre&gt;

== Datasets ==

&lt;pre class=&quot;wiki&quot;&gt;    *  Simulated datasets
          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)
          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)
          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)
          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)
          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)
          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)
          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)
          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) 
    * Mixed set 1: E. coli K-12 MG1655 
          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
    * Mixed set 2: Acinetobacter sp. ADP1 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)
    * Mixed set 3: Cryptobacterium curtum DSM 15641 (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)
    * Illumina-only paired datasets
          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) 
&lt;/pre&gt;

== Results ==

&lt;table border=&quot;1&quot;&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;261&lt;/td&gt;&lt;td&gt;1967594&lt;/td&gt;&lt;td&gt;7538&lt;/td&gt;&lt;td&gt;11621&lt;/td&gt;&lt;td&gt;61396&lt;/td&gt;&lt;td&gt;0.9419&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;7m22.779s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;280&lt;/td&gt;&lt;td&gt;1917129&lt;/td&gt;&lt;td&gt;6846&lt;/td&gt;&lt;td&gt;11279&lt;/td&gt;&lt;td&gt;44362&lt;/td&gt;&lt;td&gt;0.9437&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;2m15.931s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1954999&lt;/td&gt;&lt;td&gt;7548&lt;/td&gt;&lt;td&gt;11561&lt;/td&gt;&lt;td&gt;77867&lt;/td&gt;&lt;td&gt;0.9608&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m25.240s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;417&lt;/td&gt;&lt;td&gt;1898819&lt;/td&gt;&lt;td&gt;4553&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9343&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1m56.066s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;1965104&lt;/td&gt;&lt;td&gt;7359&lt;/td&gt;&lt;td&gt;11477&lt;/td&gt;&lt;td&gt;61349&lt;/td&gt;&lt;td&gt;0.9413&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;79&lt;/td&gt;&lt;td&gt;237&lt;/td&gt;&lt;td&gt;11m15.383s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;290&lt;/td&gt;&lt;td&gt;1913682&lt;/td&gt;&lt;td&gt;6598&lt;/td&gt;&lt;td&gt;10302&lt;/td&gt;&lt;td&gt;42572&lt;/td&gt;&lt;td&gt;0.9423&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;2m40.792s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1939235&lt;/td&gt;&lt;td&gt;7487&lt;/td&gt;&lt;td&gt;11554&lt;/td&gt;&lt;td&gt;77853&lt;/td&gt;&lt;td&gt;0.9531&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m29.223s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;418&lt;/td&gt;&lt;td&gt;1898547&lt;/td&gt;&lt;td&gt;4541&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9342&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m52.727s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;235&lt;/td&gt;&lt;td&gt;1976831&lt;/td&gt;&lt;td&gt;8412&lt;/td&gt;&lt;td&gt;12383&lt;/td&gt;&lt;td&gt;61593&lt;/td&gt;&lt;td&gt;0.9458&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;187&lt;/td&gt;&lt;td&gt;9m59.464s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;113&lt;/td&gt;&lt;td&gt;1950222&lt;/td&gt;&lt;td&gt;17258&lt;/td&gt;&lt;td&gt;32111&lt;/td&gt;&lt;td&gt;123292&lt;/td&gt;&lt;td&gt;0.9565&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;382&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;2m15.371s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;1964569&lt;/td&gt;&lt;td&gt;20464&lt;/td&gt;&lt;td&gt;36692&lt;/td&gt;&lt;td&gt;127906&lt;/td&gt;&lt;td&gt;0.9632&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m52.834s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;151&lt;/td&gt;&lt;td&gt;2019778&lt;/td&gt;&lt;td&gt;13376&lt;/td&gt;&lt;td&gt;22045&lt;/td&gt;&lt;td&gt;104182&lt;/td&gt;&lt;td&gt;0.9815&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;213&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;3m38.944s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;75&lt;/td&gt;&lt;td&gt;4559811&lt;/td&gt;&lt;td&gt;60797&lt;/td&gt;&lt;td&gt;132967&lt;/td&gt;&lt;td&gt;326953&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;16m56.911s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;5399988&lt;/td&gt;&lt;td&gt;39705&lt;/td&gt;&lt;td&gt;86536&lt;/td&gt;&lt;td&gt;280065&lt;/td&gt;&lt;td&gt;0.9668&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;106&lt;/td&gt;&lt;td&gt;903&lt;/td&gt;&lt;td&gt;19m16.247s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;693&lt;/td&gt;&lt;td&gt;4472973&lt;/td&gt;&lt;td&gt;6454&lt;/td&gt;&lt;td&gt;10495&lt;/td&gt;&lt;td&gt;53974&lt;/td&gt;&lt;td&gt;0.9638&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m42.483s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4595945&lt;/td&gt;&lt;td&gt;55372&lt;/td&gt;&lt;td&gt;122763&lt;/td&gt;&lt;td&gt;327771&lt;/td&gt;&lt;td&gt;0.9876&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m24.874s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4450079&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m51.884s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;248&lt;/td&gt;&lt;td&gt;4711107&lt;/td&gt;&lt;td&gt;18996&lt;/td&gt;&lt;td&gt;33519&lt;/td&gt;&lt;td&gt;131097&lt;/td&gt;&lt;td&gt;0.9728&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;84&lt;/td&gt;&lt;td&gt;1186&lt;/td&gt;&lt;td&gt;24m49.858s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;129&lt;/td&gt;&lt;td&gt;4527399&lt;/td&gt;&lt;td&gt;35096&lt;/td&gt;&lt;td&gt;68879&lt;/td&gt;&lt;td&gt;269606&lt;/td&gt;&lt;td&gt;0.9758&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;497&lt;/td&gt;&lt;td&gt;842&lt;/td&gt;&lt;td&gt;5m33.387s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;4584885&lt;/td&gt;&lt;td&gt;41680&lt;/td&gt;&lt;td&gt;83042&lt;/td&gt;&lt;td&gt;269979&lt;/td&gt;&lt;td&gt;0.9841&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m40.040s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;147&lt;/td&gt;&lt;td&gt;4608010&lt;/td&gt;&lt;td&gt;31347&lt;/td&gt;&lt;td&gt;59697&lt;/td&gt;&lt;td&gt;174234&lt;/td&gt;&lt;td&gt;0.9880&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;289&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;7m39.983s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;323&lt;/td&gt;&lt;td&gt;4713939&lt;/td&gt;&lt;td&gt;14594&lt;/td&gt;&lt;td&gt;27098&lt;/td&gt;&lt;td&gt;100573&lt;/td&gt;&lt;td&gt;0.9714&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;970&lt;/td&gt;&lt;td&gt;19m40.888s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;405&lt;/td&gt;&lt;td&gt;4504211&lt;/td&gt;&lt;td&gt;11121&lt;/td&gt;&lt;td&gt;18003&lt;/td&gt;&lt;td&gt;120868&lt;/td&gt;&lt;td&gt;0.9713&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;4m52.789s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;317&lt;/td&gt;&lt;td&gt;4560682&lt;/td&gt;&lt;td&gt;14387&lt;/td&gt;&lt;td&gt;25607&lt;/td&gt;&lt;td&gt;120916&lt;/td&gt;&lt;td&gt;0.9780&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;9m39.849s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4449989&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m34.519s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;422&lt;/td&gt;&lt;td&gt;7066990&lt;/td&gt;&lt;td&gt;16746&lt;/td&gt;&lt;td&gt;35498&lt;/td&gt;&lt;td&gt;170764&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;80&lt;/td&gt;&lt;td&gt;531&lt;/td&gt;&lt;td&gt;29m11.924s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1264&lt;/td&gt;&lt;td&gt;6086321&lt;/td&gt;&lt;td&gt;4815&lt;/td&gt;&lt;td&gt;7720&lt;/td&gt;&lt;td&gt;49780&lt;/td&gt;&lt;td&gt;0.9716&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;93&lt;/td&gt;&lt;td&gt;8m10.649s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;547&lt;/td&gt;&lt;td&gt;6143206&lt;/td&gt;&lt;td&gt;11230&lt;/td&gt;&lt;td&gt;22131&lt;/td&gt;&lt;td&gt;210111&lt;/td&gt;&lt;td&gt;0.9782&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m47.722s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABYSS&lt;/td&gt;&lt;td&gt;4057&lt;/td&gt;&lt;td&gt;4998428&lt;/td&gt;&lt;td&gt;1232&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;14076&lt;/td&gt;&lt;td&gt;0.7933&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6m5.597s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;251&lt;/td&gt;&lt;td&gt;6305646&lt;/td&gt;&lt;td&gt;25122&lt;/td&gt;&lt;td&gt;55095&lt;/td&gt;&lt;td&gt;182061&lt;/td&gt;&lt;td&gt;0.9871&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;216&lt;/td&gt;&lt;td&gt;551&lt;/td&gt;&lt;td&gt;36m53.145s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;86&lt;/td&gt;&lt;td&gt;6189575&lt;/td&gt;&lt;td&gt;71971&lt;/td&gt;&lt;td&gt;289674&lt;/td&gt;&lt;td&gt;579752&lt;/td&gt;&lt;td&gt;0.9843&lt;/td&gt;&lt;td&gt;29&lt;/td&gt;&lt;td&gt;1079&lt;/td&gt;&lt;td&gt;2433&lt;/td&gt;&lt;td&gt;7m12.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;122&lt;/td&gt;&lt;td&gt;6227165&lt;/td&gt;&lt;td&gt;51042&lt;/td&gt;&lt;td&gt;110638&lt;/td&gt;&lt;td&gt;346568&lt;/td&gt;&lt;td&gt;0.9919&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m3.064s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;152&lt;/td&gt;&lt;td&gt;6416064&lt;/td&gt;&lt;td&gt;42210&lt;/td&gt;&lt;td&gt;83309&lt;/td&gt;&lt;td&gt;368070&lt;/td&gt;&lt;td&gt;0.9954&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;455&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;11m35.355s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1937&lt;/td&gt;&lt;td&gt;4102206&lt;/td&gt;&lt;td&gt;2117&lt;/td&gt;&lt;td&gt;3001&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8656&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1162&lt;/td&gt;&lt;td&gt;7360&lt;/td&gt;&lt;td&gt;135m2.904s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;528&lt;/td&gt;&lt;td&gt;4491661&lt;/td&gt;&lt;td&gt;8506&lt;/td&gt;&lt;td&gt;14236&lt;/td&gt;&lt;td&gt;60568&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;28m55.106s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;420&lt;/td&gt;&lt;td&gt;4522457&lt;/td&gt;&lt;td&gt;10767&lt;/td&gt;&lt;td&gt;16970&lt;/td&gt;&lt;td&gt;66556&lt;/td&gt;&lt;td&gt;0.9702&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;37m57.168s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1026&lt;/td&gt;&lt;td&gt;4440595&lt;/td&gt;&lt;td&gt;4328&lt;/td&gt;&lt;td&gt;6898&lt;/td&gt;&lt;td&gt;34595&lt;/td&gt;&lt;td&gt;0.9550&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;23m3.949s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1761&lt;/td&gt;&lt;td&gt;4099614&lt;/td&gt;&lt;td&gt;2328&lt;/td&gt;&lt;td&gt;3429&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8708&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;1173&lt;/td&gt;&lt;td&gt;7355&lt;/td&gt;&lt;td&gt;143m27.647s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4542631&lt;/td&gt;&lt;td&gt;54730&lt;/td&gt;&lt;td&gt;125611&lt;/td&gt;&lt;td&gt;311586&lt;/td&gt;&lt;td&gt;0.9657&lt;/td&gt;&lt;td&gt;28&lt;/td&gt;&lt;td&gt;456&lt;/td&gt;&lt;td&gt;895&lt;/td&gt;&lt;td&gt;31m51.199s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;126&lt;/td&gt;&lt;td&gt;4591168&lt;/td&gt;&lt;td&gt;36437&lt;/td&gt;&lt;td&gt;72499&lt;/td&gt;&lt;td&gt;174569&lt;/td&gt;&lt;td&gt;0.9818&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;47m54.377s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4661190&lt;/td&gt;&lt;td&gt;30267&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174288&lt;/td&gt;&lt;td&gt;0.9840&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;233&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;44m53.714s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;874&lt;/td&gt;&lt;td&gt;4513335&lt;/td&gt;&lt;td&gt;5163&lt;/td&gt;&lt;td&gt;8771&lt;/td&gt;&lt;td&gt;42344&lt;/td&gt;&lt;td&gt;0.9731&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;td&gt;247&lt;/td&gt;&lt;td&gt;29m53.841s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1538&lt;/td&gt;&lt;td&gt;5056677&lt;/td&gt;&lt;td&gt;3287&lt;/td&gt;&lt;td&gt;4969&lt;/td&gt;&lt;td&gt;26316&lt;/td&gt;&lt;td&gt;0.9600&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;648&lt;/td&gt;&lt;td&gt;1199&lt;/td&gt;&lt;td&gt;7m49.404s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;2415&lt;/td&gt;&lt;td&gt;3942859&lt;/td&gt;&lt;td&gt;1632&lt;/td&gt;&lt;td&gt;2068&lt;/td&gt;&lt;td&gt;10286&lt;/td&gt;&lt;td&gt;0.8499&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;386&lt;/td&gt;&lt;td&gt;207&lt;/td&gt;&lt;td&gt;2m10.820s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;1722&lt;/td&gt;&lt;td&gt;4737188&lt;/td&gt;&lt;td&gt;2750&lt;/td&gt;&lt;td&gt;3660&lt;/td&gt;&lt;td&gt;16250&lt;/td&gt;&lt;td&gt;0.9630&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;145&lt;/td&gt;&lt;td&gt;89&lt;/td&gt;&lt;td&gt;5m27.089s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2662&lt;/td&gt;&lt;td&gt;4020201&lt;/td&gt;&lt;td&gt;1510&lt;/td&gt;&lt;td&gt;1899&lt;/td&gt;&lt;td&gt;12092&lt;/td&gt;&lt;td&gt;0.8630&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;63&lt;/td&gt;&lt;td&gt;41&lt;/td&gt;&lt;td&gt;3m45.703s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1813&lt;/td&gt;&lt;td&gt;3538992&lt;/td&gt;&lt;td&gt;1952&lt;/td&gt;&lt;td&gt;2632&lt;/td&gt;&lt;td&gt;15039&lt;/td&gt;&lt;td&gt;0.7598&lt;/td&gt;&lt;td&gt;598&lt;/td&gt;&lt;td&gt;1820&lt;/td&gt;&lt;td&gt;7077&lt;/td&gt;&lt;td&gt;157m46.099s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;754&lt;/td&gt;&lt;td&gt;4518284&lt;/td&gt;&lt;td&gt;5992&lt;/td&gt;&lt;td&gt;8787&lt;/td&gt;&lt;td&gt;29554&lt;/td&gt;&lt;td&gt;0.9730&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;35m18.761s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;4579657&lt;/td&gt;&lt;td&gt;42015&lt;/td&gt;&lt;td&gt;87318&lt;/td&gt;&lt;td&gt;268385&lt;/td&gt;&lt;td&gt;0.9831&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;234&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;62m30.978s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4667915&lt;/td&gt;&lt;td&gt;30311&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174286&lt;/td&gt;&lt;td&gt;0.9851&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;239&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;47m12.271s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1498&lt;/td&gt;&lt;td&gt;4706276&lt;/td&gt;&lt;td&gt;3141&lt;/td&gt;&lt;td&gt;4965&lt;/td&gt;&lt;td&gt;24129&lt;/td&gt;&lt;td&gt;0.9679&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1115&lt;/td&gt;&lt;td&gt;210&lt;/td&gt;&lt;td&gt;87m18.839s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;4361792&lt;/td&gt;&lt;td&gt;10143&lt;/td&gt;&lt;td&gt;20490&lt;/td&gt;&lt;td&gt;85191&lt;/td&gt;&lt;td&gt;0.9773&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;381&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;16m3.742s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;3677696&lt;/td&gt;&lt;td&gt;14199&lt;/td&gt;&lt;td&gt;25852&lt;/td&gt;&lt;td&gt;72730&lt;/td&gt;&lt;td&gt;0.9749&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;82&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;29m48.993s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1105&lt;/td&gt;&lt;td&gt;4315007&lt;/td&gt;&lt;td&gt;3904&lt;/td&gt;&lt;td&gt;6485&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9697&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;172&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;28m59.212s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;3547847&lt;/td&gt;&lt;td&gt;32549&lt;/td&gt;&lt;td&gt;61793&lt;/td&gt;&lt;td&gt;214173&lt;/td&gt;&lt;td&gt;0.9846&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;380&lt;/td&gt;&lt;td&gt;43m3.785s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1715&lt;/td&gt;&lt;td&gt;6018217&lt;/td&gt;&lt;td&gt;3509&lt;/td&gt;&lt;td&gt;5511&lt;/td&gt;&lt;td&gt;29671&lt;/td&gt;&lt;td&gt;0.9722&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;1421&lt;/td&gt;&lt;td&gt;12480&lt;/td&gt;&lt;td&gt;18m3.905s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1440&lt;/td&gt;&lt;td&gt;3356900&lt;/td&gt;&lt;td&gt;2331&lt;/td&gt;&lt;td&gt;3267&lt;/td&gt;&lt;td&gt;14690&lt;/td&gt;&lt;td&gt;0.9308&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;704&lt;/td&gt;&lt;td&gt;3166&lt;/td&gt;&lt;td&gt;3m54.495s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;2482&lt;/td&gt;&lt;td&gt;3361598&lt;/td&gt;&lt;td&gt;1354&lt;/td&gt;&lt;td&gt;1554&lt;/td&gt;&lt;td&gt;7435&lt;/td&gt;&lt;td&gt;0.8571&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;305&lt;/td&gt;&lt;td&gt;5m22.559s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2324&lt;/td&gt;&lt;td&gt;2991350&lt;/td&gt;&lt;td&gt;1287&lt;/td&gt;&lt;td&gt;1496&lt;/td&gt;&lt;td&gt;10227&lt;/td&gt;&lt;td&gt;0.8309&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;37&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;7m4.659s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;2399&lt;/td&gt;&lt;td&gt;6932733&lt;/td&gt;&lt;td&gt;2889&lt;/td&gt;&lt;td&gt;4495&lt;/td&gt;&lt;td&gt;47460&lt;/td&gt;&lt;td&gt;0.9681&lt;/td&gt;&lt;td&gt;70&lt;/td&gt;&lt;td&gt;2149&lt;/td&gt;&lt;td&gt;8033&lt;/td&gt;&lt;td&gt;129m53.436s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1165&lt;/td&gt;&lt;td&gt;4285023&lt;/td&gt;&lt;td&gt;3678&lt;/td&gt;&lt;td&gt;5820&lt;/td&gt;&lt;td&gt;21242&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;753&lt;/td&gt;&lt;td&gt;3164&lt;/td&gt;&lt;td&gt;22m52.574s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;91&lt;/td&gt;&lt;td&gt;3540404&lt;/td&gt;&lt;td&gt;38905&lt;/td&gt;&lt;td&gt;82891&lt;/td&gt;&lt;td&gt;215819&lt;/td&gt;&lt;td&gt;0.9804&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;36m27.635s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1198&lt;/td&gt;&lt;td&gt;4294398&lt;/td&gt;&lt;td&gt;3584&lt;/td&gt;&lt;td&gt;5748&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9677&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;175&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;34m34.469s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;166&lt;/td&gt;&lt;td&gt;109935&lt;/td&gt;&lt;td&gt;662&lt;/td&gt;&lt;td&gt;651&lt;/td&gt;&lt;td&gt;1433&lt;/td&gt;&lt;td&gt;0.0608&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;741&lt;/td&gt;&lt;td&gt;620&lt;/td&gt;&lt;td&gt;79m50.304s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;1598265&lt;/td&gt;&lt;td&gt;7683&lt;/td&gt;&lt;td&gt;12698&lt;/td&gt;&lt;td&gt;54143&lt;/td&gt;&lt;td&gt;0.9890&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;133&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;13m2.283s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;td&gt;1606647&lt;/td&gt;&lt;td&gt;22314&lt;/td&gt;&lt;td&gt;36518&lt;/td&gt;&lt;td&gt;91303&lt;/td&gt;&lt;td&gt;0.9862&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;19m51.388s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;156&lt;/td&gt;&lt;td&gt;1596474&lt;/td&gt;&lt;td&gt;10233&lt;/td&gt;&lt;td&gt;19950&lt;/td&gt;&lt;td&gt;69217&lt;/td&gt;&lt;td&gt;0.9881&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;22m45.895s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;1609423&lt;/td&gt;&lt;td&gt;53647&lt;/td&gt;&lt;td&gt;261125&lt;/td&gt;&lt;td&gt;477358&lt;/td&gt;&lt;td&gt;0.9904&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;21m24.064s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;153&lt;/td&gt;&lt;td&gt;3078576&lt;/td&gt;&lt;td&gt;20121&lt;/td&gt;&lt;td&gt;76729&lt;/td&gt;&lt;td&gt;258262&lt;/td&gt;&lt;td&gt;0.9861&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;104&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;13m55.961s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;1600395&lt;/td&gt;&lt;td&gt;27593&lt;/td&gt;&lt;td&gt;76702&lt;/td&gt;&lt;td&gt;191999&lt;/td&gt;&lt;td&gt;0.9914&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;176&lt;/td&gt;&lt;td&gt;3m29.796s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;184&lt;/td&gt;&lt;td&gt;1573256&lt;/td&gt;&lt;td&gt;8550&lt;/td&gt;&lt;td&gt;14142&lt;/td&gt;&lt;td&gt;76631&lt;/td&gt;&lt;td&gt;0.9503&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m42.587s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;478&lt;/td&gt;&lt;td&gt;1566837&lt;/td&gt;&lt;td&gt;3277&lt;/td&gt;&lt;td&gt;5064&lt;/td&gt;&lt;td&gt;16718&lt;/td&gt;&lt;td&gt;0.9689&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m14.770s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;td&gt;27077&lt;/td&gt;&lt;td&gt;601&lt;/td&gt;&lt;td&gt;567&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;0.0023&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;67&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;87m51.332s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;190&lt;/td&gt;&lt;td&gt;1593755&lt;/td&gt;&lt;td&gt;8388&lt;/td&gt;&lt;td&gt;13136&lt;/td&gt;&lt;td&gt;45625&lt;/td&gt;&lt;td&gt;0.9848&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;238&lt;/td&gt;&lt;td&gt;1701&lt;/td&gt;&lt;td&gt;16m37.093s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;1602133&lt;/td&gt;&lt;td&gt;59338&lt;/td&gt;&lt;td&gt;116274&lt;/td&gt;&lt;td&gt;236544&lt;/td&gt;&lt;td&gt;0.9897&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;35m8.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;1590298&lt;/td&gt;&lt;td&gt;6361&lt;/td&gt;&lt;td&gt;10207&lt;/td&gt;&lt;td&gt;37072&lt;/td&gt;&lt;td&gt;0.9835&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;23m33.000s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;495&lt;/td&gt;&lt;td&gt;955333&lt;/td&gt;&lt;td&gt;1929&lt;/td&gt;&lt;td&gt;2426&lt;/td&gt;&lt;td&gt;10235&lt;/td&gt;&lt;td&gt;0.9290&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;383&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;6m40.744s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;845807&lt;/td&gt;&lt;td&gt;4066&lt;/td&gt;&lt;td&gt;5938&lt;/td&gt;&lt;td&gt;19562&lt;/td&gt;&lt;td&gt;0.9664&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;1m13.446s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;160&lt;/td&gt;&lt;td&gt;861365&lt;/td&gt;&lt;td&gt;5383&lt;/td&gt;&lt;td&gt;8079&lt;/td&gt;&lt;td&gt;48424&lt;/td&gt;&lt;td&gt;0.9544&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;2m27.208s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;332&lt;/td&gt;&lt;td&gt;826396&lt;/td&gt;&lt;td&gt;2489&lt;/td&gt;&lt;td&gt;3369&lt;/td&gt;&lt;td&gt;17054&lt;/td&gt;&lt;td&gt;0.9435&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1m44.050s&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;

== Discussion ==

Ray is good.

=== Mix14 ===

Incorrect Ray contig on mix14:
&lt;pre&gt;
115
 4210996  4294119  |   112667    29544  |    83124    83124  |    99.99  |  4639675   112667  |     1.79    73.78  | gi|49175990|ref|NC_000913.2|       115
 4294197  4323999  |    29805        1  |    29803    29805  |    99.99  |  4639675   112667  |     0.64    26.45  | gi|49175990|ref|NC_000913.2|       115
&lt;/pre&gt;

It looks ok to me.</text>
    </revision>
    <revision>
      <id>127</id>
      <timestamp>2010-04-24T12:57:44Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Discussion */</comment>
      <text xml:space="preserve">== Ray version ==
&lt;pre class=&quot;wiki&quot;&gt;AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux
&lt;/pre&gt;

== Assemblers ==
&lt;pre class=&quot;wiki&quot;&gt;nproc=25
velvetVersion=0.7.61
eulerVersion=1.1.2
newblerVersion=2.0.00.20
rayVersion=0.0.7
abyssVersion=1.1.2
wordSize=21
&lt;/pre&gt;

== Datasets ==

&lt;pre class=&quot;wiki&quot;&gt;    *  Simulated datasets
          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)
          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)
          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)
          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)
          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)
          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)
          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)
          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) 
    * Mixed set 1: E. coli K-12 MG1655 
          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
    * Mixed set 2: Acinetobacter sp. ADP1 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)
    * Mixed set 3: Cryptobacterium curtum DSM 15641 (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)
    * Illumina-only paired datasets
          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) 
&lt;/pre&gt;

== Results ==

&lt;table border=&quot;1&quot;&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;261&lt;/td&gt;&lt;td&gt;1967594&lt;/td&gt;&lt;td&gt;7538&lt;/td&gt;&lt;td&gt;11621&lt;/td&gt;&lt;td&gt;61396&lt;/td&gt;&lt;td&gt;0.9419&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;7m22.779s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;280&lt;/td&gt;&lt;td&gt;1917129&lt;/td&gt;&lt;td&gt;6846&lt;/td&gt;&lt;td&gt;11279&lt;/td&gt;&lt;td&gt;44362&lt;/td&gt;&lt;td&gt;0.9437&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;2m15.931s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1954999&lt;/td&gt;&lt;td&gt;7548&lt;/td&gt;&lt;td&gt;11561&lt;/td&gt;&lt;td&gt;77867&lt;/td&gt;&lt;td&gt;0.9608&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m25.240s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;417&lt;/td&gt;&lt;td&gt;1898819&lt;/td&gt;&lt;td&gt;4553&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9343&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1m56.066s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;1965104&lt;/td&gt;&lt;td&gt;7359&lt;/td&gt;&lt;td&gt;11477&lt;/td&gt;&lt;td&gt;61349&lt;/td&gt;&lt;td&gt;0.9413&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;79&lt;/td&gt;&lt;td&gt;237&lt;/td&gt;&lt;td&gt;11m15.383s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;290&lt;/td&gt;&lt;td&gt;1913682&lt;/td&gt;&lt;td&gt;6598&lt;/td&gt;&lt;td&gt;10302&lt;/td&gt;&lt;td&gt;42572&lt;/td&gt;&lt;td&gt;0.9423&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;2m40.792s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1939235&lt;/td&gt;&lt;td&gt;7487&lt;/td&gt;&lt;td&gt;11554&lt;/td&gt;&lt;td&gt;77853&lt;/td&gt;&lt;td&gt;0.9531&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m29.223s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;418&lt;/td&gt;&lt;td&gt;1898547&lt;/td&gt;&lt;td&gt;4541&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9342&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m52.727s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;235&lt;/td&gt;&lt;td&gt;1976831&lt;/td&gt;&lt;td&gt;8412&lt;/td&gt;&lt;td&gt;12383&lt;/td&gt;&lt;td&gt;61593&lt;/td&gt;&lt;td&gt;0.9458&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;187&lt;/td&gt;&lt;td&gt;9m59.464s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;113&lt;/td&gt;&lt;td&gt;1950222&lt;/td&gt;&lt;td&gt;17258&lt;/td&gt;&lt;td&gt;32111&lt;/td&gt;&lt;td&gt;123292&lt;/td&gt;&lt;td&gt;0.9565&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;382&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;2m15.371s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;1964569&lt;/td&gt;&lt;td&gt;20464&lt;/td&gt;&lt;td&gt;36692&lt;/td&gt;&lt;td&gt;127906&lt;/td&gt;&lt;td&gt;0.9632&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m52.834s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;151&lt;/td&gt;&lt;td&gt;2019778&lt;/td&gt;&lt;td&gt;13376&lt;/td&gt;&lt;td&gt;22045&lt;/td&gt;&lt;td&gt;104182&lt;/td&gt;&lt;td&gt;0.9815&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;213&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;3m38.944s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;75&lt;/td&gt;&lt;td&gt;4559811&lt;/td&gt;&lt;td&gt;60797&lt;/td&gt;&lt;td&gt;132967&lt;/td&gt;&lt;td&gt;326953&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;16m56.911s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;5399988&lt;/td&gt;&lt;td&gt;39705&lt;/td&gt;&lt;td&gt;86536&lt;/td&gt;&lt;td&gt;280065&lt;/td&gt;&lt;td&gt;0.9668&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;106&lt;/td&gt;&lt;td&gt;903&lt;/td&gt;&lt;td&gt;19m16.247s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;693&lt;/td&gt;&lt;td&gt;4472973&lt;/td&gt;&lt;td&gt;6454&lt;/td&gt;&lt;td&gt;10495&lt;/td&gt;&lt;td&gt;53974&lt;/td&gt;&lt;td&gt;0.9638&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m42.483s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4595945&lt;/td&gt;&lt;td&gt;55372&lt;/td&gt;&lt;td&gt;122763&lt;/td&gt;&lt;td&gt;327771&lt;/td&gt;&lt;td&gt;0.9876&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m24.874s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4450079&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m51.884s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;248&lt;/td&gt;&lt;td&gt;4711107&lt;/td&gt;&lt;td&gt;18996&lt;/td&gt;&lt;td&gt;33519&lt;/td&gt;&lt;td&gt;131097&lt;/td&gt;&lt;td&gt;0.9728&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;84&lt;/td&gt;&lt;td&gt;1186&lt;/td&gt;&lt;td&gt;24m49.858s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;129&lt;/td&gt;&lt;td&gt;4527399&lt;/td&gt;&lt;td&gt;35096&lt;/td&gt;&lt;td&gt;68879&lt;/td&gt;&lt;td&gt;269606&lt;/td&gt;&lt;td&gt;0.9758&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;497&lt;/td&gt;&lt;td&gt;842&lt;/td&gt;&lt;td&gt;5m33.387s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;4584885&lt;/td&gt;&lt;td&gt;41680&lt;/td&gt;&lt;td&gt;83042&lt;/td&gt;&lt;td&gt;269979&lt;/td&gt;&lt;td&gt;0.9841&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m40.040s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;147&lt;/td&gt;&lt;td&gt;4608010&lt;/td&gt;&lt;td&gt;31347&lt;/td&gt;&lt;td&gt;59697&lt;/td&gt;&lt;td&gt;174234&lt;/td&gt;&lt;td&gt;0.9880&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;289&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;7m39.983s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;323&lt;/td&gt;&lt;td&gt;4713939&lt;/td&gt;&lt;td&gt;14594&lt;/td&gt;&lt;td&gt;27098&lt;/td&gt;&lt;td&gt;100573&lt;/td&gt;&lt;td&gt;0.9714&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;970&lt;/td&gt;&lt;td&gt;19m40.888s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;405&lt;/td&gt;&lt;td&gt;4504211&lt;/td&gt;&lt;td&gt;11121&lt;/td&gt;&lt;td&gt;18003&lt;/td&gt;&lt;td&gt;120868&lt;/td&gt;&lt;td&gt;0.9713&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;4m52.789s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;317&lt;/td&gt;&lt;td&gt;4560682&lt;/td&gt;&lt;td&gt;14387&lt;/td&gt;&lt;td&gt;25607&lt;/td&gt;&lt;td&gt;120916&lt;/td&gt;&lt;td&gt;0.9780&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;9m39.849s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4449989&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m34.519s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;422&lt;/td&gt;&lt;td&gt;7066990&lt;/td&gt;&lt;td&gt;16746&lt;/td&gt;&lt;td&gt;35498&lt;/td&gt;&lt;td&gt;170764&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;80&lt;/td&gt;&lt;td&gt;531&lt;/td&gt;&lt;td&gt;29m11.924s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1264&lt;/td&gt;&lt;td&gt;6086321&lt;/td&gt;&lt;td&gt;4815&lt;/td&gt;&lt;td&gt;7720&lt;/td&gt;&lt;td&gt;49780&lt;/td&gt;&lt;td&gt;0.9716&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;93&lt;/td&gt;&lt;td&gt;8m10.649s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;547&lt;/td&gt;&lt;td&gt;6143206&lt;/td&gt;&lt;td&gt;11230&lt;/td&gt;&lt;td&gt;22131&lt;/td&gt;&lt;td&gt;210111&lt;/td&gt;&lt;td&gt;0.9782&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m47.722s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABYSS&lt;/td&gt;&lt;td&gt;4057&lt;/td&gt;&lt;td&gt;4998428&lt;/td&gt;&lt;td&gt;1232&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;14076&lt;/td&gt;&lt;td&gt;0.7933&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6m5.597s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;251&lt;/td&gt;&lt;td&gt;6305646&lt;/td&gt;&lt;td&gt;25122&lt;/td&gt;&lt;td&gt;55095&lt;/td&gt;&lt;td&gt;182061&lt;/td&gt;&lt;td&gt;0.9871&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;216&lt;/td&gt;&lt;td&gt;551&lt;/td&gt;&lt;td&gt;36m53.145s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;86&lt;/td&gt;&lt;td&gt;6189575&lt;/td&gt;&lt;td&gt;71971&lt;/td&gt;&lt;td&gt;289674&lt;/td&gt;&lt;td&gt;579752&lt;/td&gt;&lt;td&gt;0.9843&lt;/td&gt;&lt;td&gt;29&lt;/td&gt;&lt;td&gt;1079&lt;/td&gt;&lt;td&gt;2433&lt;/td&gt;&lt;td&gt;7m12.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;122&lt;/td&gt;&lt;td&gt;6227165&lt;/td&gt;&lt;td&gt;51042&lt;/td&gt;&lt;td&gt;110638&lt;/td&gt;&lt;td&gt;346568&lt;/td&gt;&lt;td&gt;0.9919&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m3.064s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;152&lt;/td&gt;&lt;td&gt;6416064&lt;/td&gt;&lt;td&gt;42210&lt;/td&gt;&lt;td&gt;83309&lt;/td&gt;&lt;td&gt;368070&lt;/td&gt;&lt;td&gt;0.9954&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;455&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;11m35.355s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1937&lt;/td&gt;&lt;td&gt;4102206&lt;/td&gt;&lt;td&gt;2117&lt;/td&gt;&lt;td&gt;3001&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8656&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1162&lt;/td&gt;&lt;td&gt;7360&lt;/td&gt;&lt;td&gt;135m2.904s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;528&lt;/td&gt;&lt;td&gt;4491661&lt;/td&gt;&lt;td&gt;8506&lt;/td&gt;&lt;td&gt;14236&lt;/td&gt;&lt;td&gt;60568&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;28m55.106s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;420&lt;/td&gt;&lt;td&gt;4522457&lt;/td&gt;&lt;td&gt;10767&lt;/td&gt;&lt;td&gt;16970&lt;/td&gt;&lt;td&gt;66556&lt;/td&gt;&lt;td&gt;0.9702&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;37m57.168s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1026&lt;/td&gt;&lt;td&gt;4440595&lt;/td&gt;&lt;td&gt;4328&lt;/td&gt;&lt;td&gt;6898&lt;/td&gt;&lt;td&gt;34595&lt;/td&gt;&lt;td&gt;0.9550&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;23m3.949s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1761&lt;/td&gt;&lt;td&gt;4099614&lt;/td&gt;&lt;td&gt;2328&lt;/td&gt;&lt;td&gt;3429&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8708&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;1173&lt;/td&gt;&lt;td&gt;7355&lt;/td&gt;&lt;td&gt;143m27.647s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4542631&lt;/td&gt;&lt;td&gt;54730&lt;/td&gt;&lt;td&gt;125611&lt;/td&gt;&lt;td&gt;311586&lt;/td&gt;&lt;td&gt;0.9657&lt;/td&gt;&lt;td&gt;28&lt;/td&gt;&lt;td&gt;456&lt;/td&gt;&lt;td&gt;895&lt;/td&gt;&lt;td&gt;31m51.199s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;126&lt;/td&gt;&lt;td&gt;4591168&lt;/td&gt;&lt;td&gt;36437&lt;/td&gt;&lt;td&gt;72499&lt;/td&gt;&lt;td&gt;174569&lt;/td&gt;&lt;td&gt;0.9818&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;47m54.377s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4661190&lt;/td&gt;&lt;td&gt;30267&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174288&lt;/td&gt;&lt;td&gt;0.9840&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;233&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;44m53.714s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;874&lt;/td&gt;&lt;td&gt;4513335&lt;/td&gt;&lt;td&gt;5163&lt;/td&gt;&lt;td&gt;8771&lt;/td&gt;&lt;td&gt;42344&lt;/td&gt;&lt;td&gt;0.9731&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;td&gt;247&lt;/td&gt;&lt;td&gt;29m53.841s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1538&lt;/td&gt;&lt;td&gt;5056677&lt;/td&gt;&lt;td&gt;3287&lt;/td&gt;&lt;td&gt;4969&lt;/td&gt;&lt;td&gt;26316&lt;/td&gt;&lt;td&gt;0.9600&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;648&lt;/td&gt;&lt;td&gt;1199&lt;/td&gt;&lt;td&gt;7m49.404s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;2415&lt;/td&gt;&lt;td&gt;3942859&lt;/td&gt;&lt;td&gt;1632&lt;/td&gt;&lt;td&gt;2068&lt;/td&gt;&lt;td&gt;10286&lt;/td&gt;&lt;td&gt;0.8499&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;386&lt;/td&gt;&lt;td&gt;207&lt;/td&gt;&lt;td&gt;2m10.820s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;1722&lt;/td&gt;&lt;td&gt;4737188&lt;/td&gt;&lt;td&gt;2750&lt;/td&gt;&lt;td&gt;3660&lt;/td&gt;&lt;td&gt;16250&lt;/td&gt;&lt;td&gt;0.9630&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;145&lt;/td&gt;&lt;td&gt;89&lt;/td&gt;&lt;td&gt;5m27.089s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2662&lt;/td&gt;&lt;td&gt;4020201&lt;/td&gt;&lt;td&gt;1510&lt;/td&gt;&lt;td&gt;1899&lt;/td&gt;&lt;td&gt;12092&lt;/td&gt;&lt;td&gt;0.8630&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;63&lt;/td&gt;&lt;td&gt;41&lt;/td&gt;&lt;td&gt;3m45.703s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1813&lt;/td&gt;&lt;td&gt;3538992&lt;/td&gt;&lt;td&gt;1952&lt;/td&gt;&lt;td&gt;2632&lt;/td&gt;&lt;td&gt;15039&lt;/td&gt;&lt;td&gt;0.7598&lt;/td&gt;&lt;td&gt;598&lt;/td&gt;&lt;td&gt;1820&lt;/td&gt;&lt;td&gt;7077&lt;/td&gt;&lt;td&gt;157m46.099s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;754&lt;/td&gt;&lt;td&gt;4518284&lt;/td&gt;&lt;td&gt;5992&lt;/td&gt;&lt;td&gt;8787&lt;/td&gt;&lt;td&gt;29554&lt;/td&gt;&lt;td&gt;0.9730&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;35m18.761s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;4579657&lt;/td&gt;&lt;td&gt;42015&lt;/td&gt;&lt;td&gt;87318&lt;/td&gt;&lt;td&gt;268385&lt;/td&gt;&lt;td&gt;0.9831&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;234&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;62m30.978s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4667915&lt;/td&gt;&lt;td&gt;30311&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174286&lt;/td&gt;&lt;td&gt;0.9851&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;239&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;47m12.271s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1498&lt;/td&gt;&lt;td&gt;4706276&lt;/td&gt;&lt;td&gt;3141&lt;/td&gt;&lt;td&gt;4965&lt;/td&gt;&lt;td&gt;24129&lt;/td&gt;&lt;td&gt;0.9679&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1115&lt;/td&gt;&lt;td&gt;210&lt;/td&gt;&lt;td&gt;87m18.839s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;4361792&lt;/td&gt;&lt;td&gt;10143&lt;/td&gt;&lt;td&gt;20490&lt;/td&gt;&lt;td&gt;85191&lt;/td&gt;&lt;td&gt;0.9773&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;381&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;16m3.742s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;3677696&lt;/td&gt;&lt;td&gt;14199&lt;/td&gt;&lt;td&gt;25852&lt;/td&gt;&lt;td&gt;72730&lt;/td&gt;&lt;td&gt;0.9749&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;82&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;29m48.993s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1105&lt;/td&gt;&lt;td&gt;4315007&lt;/td&gt;&lt;td&gt;3904&lt;/td&gt;&lt;td&gt;6485&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9697&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;172&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;28m59.212s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;3547847&lt;/td&gt;&lt;td&gt;32549&lt;/td&gt;&lt;td&gt;61793&lt;/td&gt;&lt;td&gt;214173&lt;/td&gt;&lt;td&gt;0.9846&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;380&lt;/td&gt;&lt;td&gt;43m3.785s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1715&lt;/td&gt;&lt;td&gt;6018217&lt;/td&gt;&lt;td&gt;3509&lt;/td&gt;&lt;td&gt;5511&lt;/td&gt;&lt;td&gt;29671&lt;/td&gt;&lt;td&gt;0.9722&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;1421&lt;/td&gt;&lt;td&gt;12480&lt;/td&gt;&lt;td&gt;18m3.905s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1440&lt;/td&gt;&lt;td&gt;3356900&lt;/td&gt;&lt;td&gt;2331&lt;/td&gt;&lt;td&gt;3267&lt;/td&gt;&lt;td&gt;14690&lt;/td&gt;&lt;td&gt;0.9308&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;704&lt;/td&gt;&lt;td&gt;3166&lt;/td&gt;&lt;td&gt;3m54.495s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;2482&lt;/td&gt;&lt;td&gt;3361598&lt;/td&gt;&lt;td&gt;1354&lt;/td&gt;&lt;td&gt;1554&lt;/td&gt;&lt;td&gt;7435&lt;/td&gt;&lt;td&gt;0.8571&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;305&lt;/td&gt;&lt;td&gt;5m22.559s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2324&lt;/td&gt;&lt;td&gt;2991350&lt;/td&gt;&lt;td&gt;1287&lt;/td&gt;&lt;td&gt;1496&lt;/td&gt;&lt;td&gt;10227&lt;/td&gt;&lt;td&gt;0.8309&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;37&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;7m4.659s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;2399&lt;/td&gt;&lt;td&gt;6932733&lt;/td&gt;&lt;td&gt;2889&lt;/td&gt;&lt;td&gt;4495&lt;/td&gt;&lt;td&gt;47460&lt;/td&gt;&lt;td&gt;0.9681&lt;/td&gt;&lt;td&gt;70&lt;/td&gt;&lt;td&gt;2149&lt;/td&gt;&lt;td&gt;8033&lt;/td&gt;&lt;td&gt;129m53.436s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1165&lt;/td&gt;&lt;td&gt;4285023&lt;/td&gt;&lt;td&gt;3678&lt;/td&gt;&lt;td&gt;5820&lt;/td&gt;&lt;td&gt;21242&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;753&lt;/td&gt;&lt;td&gt;3164&lt;/td&gt;&lt;td&gt;22m52.574s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;91&lt;/td&gt;&lt;td&gt;3540404&lt;/td&gt;&lt;td&gt;38905&lt;/td&gt;&lt;td&gt;82891&lt;/td&gt;&lt;td&gt;215819&lt;/td&gt;&lt;td&gt;0.9804&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;36m27.635s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1198&lt;/td&gt;&lt;td&gt;4294398&lt;/td&gt;&lt;td&gt;3584&lt;/td&gt;&lt;td&gt;5748&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9677&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;175&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;34m34.469s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;166&lt;/td&gt;&lt;td&gt;109935&lt;/td&gt;&lt;td&gt;662&lt;/td&gt;&lt;td&gt;651&lt;/td&gt;&lt;td&gt;1433&lt;/td&gt;&lt;td&gt;0.0608&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;741&lt;/td&gt;&lt;td&gt;620&lt;/td&gt;&lt;td&gt;79m50.304s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;1598265&lt;/td&gt;&lt;td&gt;7683&lt;/td&gt;&lt;td&gt;12698&lt;/td&gt;&lt;td&gt;54143&lt;/td&gt;&lt;td&gt;0.9890&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;133&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;13m2.283s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;td&gt;1606647&lt;/td&gt;&lt;td&gt;22314&lt;/td&gt;&lt;td&gt;36518&lt;/td&gt;&lt;td&gt;91303&lt;/td&gt;&lt;td&gt;0.9862&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;19m51.388s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;156&lt;/td&gt;&lt;td&gt;1596474&lt;/td&gt;&lt;td&gt;10233&lt;/td&gt;&lt;td&gt;19950&lt;/td&gt;&lt;td&gt;69217&lt;/td&gt;&lt;td&gt;0.9881&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;22m45.895s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;1609423&lt;/td&gt;&lt;td&gt;53647&lt;/td&gt;&lt;td&gt;261125&lt;/td&gt;&lt;td&gt;477358&lt;/td&gt;&lt;td&gt;0.9904&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;21m24.064s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;153&lt;/td&gt;&lt;td&gt;3078576&lt;/td&gt;&lt;td&gt;20121&lt;/td&gt;&lt;td&gt;76729&lt;/td&gt;&lt;td&gt;258262&lt;/td&gt;&lt;td&gt;0.9861&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;104&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;13m55.961s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;1600395&lt;/td&gt;&lt;td&gt;27593&lt;/td&gt;&lt;td&gt;76702&lt;/td&gt;&lt;td&gt;191999&lt;/td&gt;&lt;td&gt;0.9914&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;176&lt;/td&gt;&lt;td&gt;3m29.796s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;184&lt;/td&gt;&lt;td&gt;1573256&lt;/td&gt;&lt;td&gt;8550&lt;/td&gt;&lt;td&gt;14142&lt;/td&gt;&lt;td&gt;76631&lt;/td&gt;&lt;td&gt;0.9503&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m42.587s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;478&lt;/td&gt;&lt;td&gt;1566837&lt;/td&gt;&lt;td&gt;3277&lt;/td&gt;&lt;td&gt;5064&lt;/td&gt;&lt;td&gt;16718&lt;/td&gt;&lt;td&gt;0.9689&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m14.770s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;td&gt;27077&lt;/td&gt;&lt;td&gt;601&lt;/td&gt;&lt;td&gt;567&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;0.0023&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;67&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;87m51.332s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;190&lt;/td&gt;&lt;td&gt;1593755&lt;/td&gt;&lt;td&gt;8388&lt;/td&gt;&lt;td&gt;13136&lt;/td&gt;&lt;td&gt;45625&lt;/td&gt;&lt;td&gt;0.9848&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;238&lt;/td&gt;&lt;td&gt;1701&lt;/td&gt;&lt;td&gt;16m37.093s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;1602133&lt;/td&gt;&lt;td&gt;59338&lt;/td&gt;&lt;td&gt;116274&lt;/td&gt;&lt;td&gt;236544&lt;/td&gt;&lt;td&gt;0.9897&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;35m8.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;1590298&lt;/td&gt;&lt;td&gt;6361&lt;/td&gt;&lt;td&gt;10207&lt;/td&gt;&lt;td&gt;37072&lt;/td&gt;&lt;td&gt;0.9835&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;23m33.000s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;495&lt;/td&gt;&lt;td&gt;955333&lt;/td&gt;&lt;td&gt;1929&lt;/td&gt;&lt;td&gt;2426&lt;/td&gt;&lt;td&gt;10235&lt;/td&gt;&lt;td&gt;0.9290&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;383&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;6m40.744s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;845807&lt;/td&gt;&lt;td&gt;4066&lt;/td&gt;&lt;td&gt;5938&lt;/td&gt;&lt;td&gt;19562&lt;/td&gt;&lt;td&gt;0.9664&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;1m13.446s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;160&lt;/td&gt;&lt;td&gt;861365&lt;/td&gt;&lt;td&gt;5383&lt;/td&gt;&lt;td&gt;8079&lt;/td&gt;&lt;td&gt;48424&lt;/td&gt;&lt;td&gt;0.9544&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;2m27.208s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;332&lt;/td&gt;&lt;td&gt;826396&lt;/td&gt;&lt;td&gt;2489&lt;/td&gt;&lt;td&gt;3369&lt;/td&gt;&lt;td&gt;17054&lt;/td&gt;&lt;td&gt;0.9435&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1m44.050s&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;

== Discussion ==

Ray is good.

=== Mix14 ===

Incorrect Ray contig on mix14:
&lt;pre&gt;
115
 4210996  4294119  |   112667    29544  |    83124    83124  |    99.99  |  4639675   112667  |     1.79    73.78  | gi|49175990|ref|NC_000913.2|       115
 4294197  4323999  |    29805        1  |    29803    29805  |    99.99  |  4639675   112667  |     0.64    26.45  | gi|49175990|ref|NC_000913.2|       115
&lt;/pre&gt;

It looks ok to me.

=== Mix23 ===

Incorrect Ray contig on mix23:
&lt;pre&gt;
35
 2804111  2804909  |        1      799  |      799      799  |   100.00  |  3598621     1358  |     0.02    58.84  | Acinetobacter_ADP1 35
 2804911  2805144  |     1125     1358  |      234      234  |    96.15  |  3598621     1358  |     0.01    17.23  | Acinetobacter_ADP1 35
&lt;/pre&gt;

It looks ok to me.</text>
    </revision>
    <revision>
      <id>128</id>
      <timestamp>2010-04-24T12:59:10Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Discussion */</comment>
      <text xml:space="preserve">== Ray version ==
&lt;pre class=&quot;wiki&quot;&gt;AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux
&lt;/pre&gt;

== Assemblers ==
&lt;pre class=&quot;wiki&quot;&gt;nproc=25
velvetVersion=0.7.61
eulerVersion=1.1.2
newblerVersion=2.0.00.20
rayVersion=0.0.7
abyssVersion=1.1.2
wordSize=21
&lt;/pre&gt;

== Datasets ==

&lt;pre class=&quot;wiki&quot;&gt;    *  Simulated datasets
          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)
          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)
          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)
          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)
          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)
          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)
          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)
          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) 
    * Mixed set 1: E. coli K-12 MG1655 
          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
    * Mixed set 2: Acinetobacter sp. ADP1 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)
          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)
    * Mixed set 3: Cryptobacterium curtum DSM 15641 (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)
          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)
    * Illumina-only paired datasets
          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) 
&lt;/pre&gt;

== Results ==

&lt;table border=&quot;1&quot;&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;261&lt;/td&gt;&lt;td&gt;1967594&lt;/td&gt;&lt;td&gt;7538&lt;/td&gt;&lt;td&gt;11621&lt;/td&gt;&lt;td&gt;61396&lt;/td&gt;&lt;td&gt;0.9419&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;7m22.779s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;280&lt;/td&gt;&lt;td&gt;1917129&lt;/td&gt;&lt;td&gt;6846&lt;/td&gt;&lt;td&gt;11279&lt;/td&gt;&lt;td&gt;44362&lt;/td&gt;&lt;td&gt;0.9437&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;2m15.931s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1954999&lt;/td&gt;&lt;td&gt;7548&lt;/td&gt;&lt;td&gt;11561&lt;/td&gt;&lt;td&gt;77867&lt;/td&gt;&lt;td&gt;0.9608&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m25.240s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;417&lt;/td&gt;&lt;td&gt;1898819&lt;/td&gt;&lt;td&gt;4553&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9343&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1m56.066s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;1965104&lt;/td&gt;&lt;td&gt;7359&lt;/td&gt;&lt;td&gt;11477&lt;/td&gt;&lt;td&gt;61349&lt;/td&gt;&lt;td&gt;0.9413&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;79&lt;/td&gt;&lt;td&gt;237&lt;/td&gt;&lt;td&gt;11m15.383s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;290&lt;/td&gt;&lt;td&gt;1913682&lt;/td&gt;&lt;td&gt;6598&lt;/td&gt;&lt;td&gt;10302&lt;/td&gt;&lt;td&gt;42572&lt;/td&gt;&lt;td&gt;0.9423&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;2m40.792s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;1939235&lt;/td&gt;&lt;td&gt;7487&lt;/td&gt;&lt;td&gt;11554&lt;/td&gt;&lt;td&gt;77853&lt;/td&gt;&lt;td&gt;0.9531&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m29.223s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;418&lt;/td&gt;&lt;td&gt;1898547&lt;/td&gt;&lt;td&gt;4541&lt;/td&gt;&lt;td&gt;7349&lt;/td&gt;&lt;td&gt;27222&lt;/td&gt;&lt;td&gt;0.9342&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m52.727s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;235&lt;/td&gt;&lt;td&gt;1976831&lt;/td&gt;&lt;td&gt;8412&lt;/td&gt;&lt;td&gt;12383&lt;/td&gt;&lt;td&gt;61593&lt;/td&gt;&lt;td&gt;0.9458&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;187&lt;/td&gt;&lt;td&gt;9m59.464s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;113&lt;/td&gt;&lt;td&gt;1950222&lt;/td&gt;&lt;td&gt;17258&lt;/td&gt;&lt;td&gt;32111&lt;/td&gt;&lt;td&gt;123292&lt;/td&gt;&lt;td&gt;0.9565&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;382&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;2m15.371s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;1964569&lt;/td&gt;&lt;td&gt;20464&lt;/td&gt;&lt;td&gt;36692&lt;/td&gt;&lt;td&gt;127906&lt;/td&gt;&lt;td&gt;0.9632&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m52.834s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;151&lt;/td&gt;&lt;td&gt;2019778&lt;/td&gt;&lt;td&gt;13376&lt;/td&gt;&lt;td&gt;22045&lt;/td&gt;&lt;td&gt;104182&lt;/td&gt;&lt;td&gt;0.9815&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;213&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;3m38.944s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;75&lt;/td&gt;&lt;td&gt;4559811&lt;/td&gt;&lt;td&gt;60797&lt;/td&gt;&lt;td&gt;132967&lt;/td&gt;&lt;td&gt;326953&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;16m56.911s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;5399988&lt;/td&gt;&lt;td&gt;39705&lt;/td&gt;&lt;td&gt;86536&lt;/td&gt;&lt;td&gt;280065&lt;/td&gt;&lt;td&gt;0.9668&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;106&lt;/td&gt;&lt;td&gt;903&lt;/td&gt;&lt;td&gt;19m16.247s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;693&lt;/td&gt;&lt;td&gt;4472973&lt;/td&gt;&lt;td&gt;6454&lt;/td&gt;&lt;td&gt;10495&lt;/td&gt;&lt;td&gt;53974&lt;/td&gt;&lt;td&gt;0.9638&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;3m42.483s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4595945&lt;/td&gt;&lt;td&gt;55372&lt;/td&gt;&lt;td&gt;122763&lt;/td&gt;&lt;td&gt;327771&lt;/td&gt;&lt;td&gt;0.9876&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m24.874s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4450079&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5m51.884s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;248&lt;/td&gt;&lt;td&gt;4711107&lt;/td&gt;&lt;td&gt;18996&lt;/td&gt;&lt;td&gt;33519&lt;/td&gt;&lt;td&gt;131097&lt;/td&gt;&lt;td&gt;0.9728&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;84&lt;/td&gt;&lt;td&gt;1186&lt;/td&gt;&lt;td&gt;24m49.858s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;129&lt;/td&gt;&lt;td&gt;4527399&lt;/td&gt;&lt;td&gt;35096&lt;/td&gt;&lt;td&gt;68879&lt;/td&gt;&lt;td&gt;269606&lt;/td&gt;&lt;td&gt;0.9758&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;497&lt;/td&gt;&lt;td&gt;842&lt;/td&gt;&lt;td&gt;5m33.387s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;4584885&lt;/td&gt;&lt;td&gt;41680&lt;/td&gt;&lt;td&gt;83042&lt;/td&gt;&lt;td&gt;269979&lt;/td&gt;&lt;td&gt;0.9841&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m40.040s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;147&lt;/td&gt;&lt;td&gt;4608010&lt;/td&gt;&lt;td&gt;31347&lt;/td&gt;&lt;td&gt;59697&lt;/td&gt;&lt;td&gt;174234&lt;/td&gt;&lt;td&gt;0.9880&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;289&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;7m39.983s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;323&lt;/td&gt;&lt;td&gt;4713939&lt;/td&gt;&lt;td&gt;14594&lt;/td&gt;&lt;td&gt;27098&lt;/td&gt;&lt;td&gt;100573&lt;/td&gt;&lt;td&gt;0.9714&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;970&lt;/td&gt;&lt;td&gt;19m40.888s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;405&lt;/td&gt;&lt;td&gt;4504211&lt;/td&gt;&lt;td&gt;11121&lt;/td&gt;&lt;td&gt;18003&lt;/td&gt;&lt;td&gt;120868&lt;/td&gt;&lt;td&gt;0.9713&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;4m52.789s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;317&lt;/td&gt;&lt;td&gt;4560682&lt;/td&gt;&lt;td&gt;14387&lt;/td&gt;&lt;td&gt;25607&lt;/td&gt;&lt;td&gt;120916&lt;/td&gt;&lt;td&gt;0.9780&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;9m39.849s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;898&lt;/td&gt;&lt;td&gt;4449989&lt;/td&gt;&lt;td&gt;4955&lt;/td&gt;&lt;td&gt;8141&lt;/td&gt;&lt;td&gt;35440&lt;/td&gt;&lt;td&gt;0.9573&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4m34.519s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;422&lt;/td&gt;&lt;td&gt;7066990&lt;/td&gt;&lt;td&gt;16746&lt;/td&gt;&lt;td&gt;35498&lt;/td&gt;&lt;td&gt;170764&lt;/td&gt;&lt;td&gt;0.9833&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;80&lt;/td&gt;&lt;td&gt;531&lt;/td&gt;&lt;td&gt;29m11.924s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1264&lt;/td&gt;&lt;td&gt;6086321&lt;/td&gt;&lt;td&gt;4815&lt;/td&gt;&lt;td&gt;7720&lt;/td&gt;&lt;td&gt;49780&lt;/td&gt;&lt;td&gt;0.9716&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;93&lt;/td&gt;&lt;td&gt;8m10.649s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;547&lt;/td&gt;&lt;td&gt;6143206&lt;/td&gt;&lt;td&gt;11230&lt;/td&gt;&lt;td&gt;22131&lt;/td&gt;&lt;td&gt;210111&lt;/td&gt;&lt;td&gt;0.9782&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;12m47.722s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABYSS&lt;/td&gt;&lt;td&gt;4057&lt;/td&gt;&lt;td&gt;4998428&lt;/td&gt;&lt;td&gt;1232&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;14076&lt;/td&gt;&lt;td&gt;0.7933&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6m5.597s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;251&lt;/td&gt;&lt;td&gt;6305646&lt;/td&gt;&lt;td&gt;25122&lt;/td&gt;&lt;td&gt;55095&lt;/td&gt;&lt;td&gt;182061&lt;/td&gt;&lt;td&gt;0.9871&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;216&lt;/td&gt;&lt;td&gt;551&lt;/td&gt;&lt;td&gt;36m53.145s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;86&lt;/td&gt;&lt;td&gt;6189575&lt;/td&gt;&lt;td&gt;71971&lt;/td&gt;&lt;td&gt;289674&lt;/td&gt;&lt;td&gt;579752&lt;/td&gt;&lt;td&gt;0.9843&lt;/td&gt;&lt;td&gt;29&lt;/td&gt;&lt;td&gt;1079&lt;/td&gt;&lt;td&gt;2433&lt;/td&gt;&lt;td&gt;7m12.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;122&lt;/td&gt;&lt;td&gt;6227165&lt;/td&gt;&lt;td&gt;51042&lt;/td&gt;&lt;td&gt;110638&lt;/td&gt;&lt;td&gt;346568&lt;/td&gt;&lt;td&gt;0.9919&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;17m3.064s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;152&lt;/td&gt;&lt;td&gt;6416064&lt;/td&gt;&lt;td&gt;42210&lt;/td&gt;&lt;td&gt;83309&lt;/td&gt;&lt;td&gt;368070&lt;/td&gt;&lt;td&gt;0.9954&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;455&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;11m35.355s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix11   E. coli K-12 MG1655 Illumina non-paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1937&lt;/td&gt;&lt;td&gt;4102206&lt;/td&gt;&lt;td&gt;2117&lt;/td&gt;&lt;td&gt;3001&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8656&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1162&lt;/td&gt;&lt;td&gt;7360&lt;/td&gt;&lt;td&gt;135m2.904s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;528&lt;/td&gt;&lt;td&gt;4491661&lt;/td&gt;&lt;td&gt;8506&lt;/td&gt;&lt;td&gt;14236&lt;/td&gt;&lt;td&gt;60568&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;136&lt;/td&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;28m55.106s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;420&lt;/td&gt;&lt;td&gt;4522457&lt;/td&gt;&lt;td&gt;10767&lt;/td&gt;&lt;td&gt;16970&lt;/td&gt;&lt;td&gt;66556&lt;/td&gt;&lt;td&gt;0.9702&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;37m57.168s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1026&lt;/td&gt;&lt;td&gt;4440595&lt;/td&gt;&lt;td&gt;4328&lt;/td&gt;&lt;td&gt;6898&lt;/td&gt;&lt;td&gt;34595&lt;/td&gt;&lt;td&gt;0.9550&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;23m3.949s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix12  E. coli K-12 MG1655 Illumina paired (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1761&lt;/td&gt;&lt;td&gt;4099614&lt;/td&gt;&lt;td&gt;2328&lt;/td&gt;&lt;td&gt;3429&lt;/td&gt;&lt;td&gt;19094&lt;/td&gt;&lt;td&gt;0.8708&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;1173&lt;/td&gt;&lt;td&gt;7355&lt;/td&gt;&lt;td&gt;143m27.647s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;td&gt;4542631&lt;/td&gt;&lt;td&gt;54730&lt;/td&gt;&lt;td&gt;125611&lt;/td&gt;&lt;td&gt;311586&lt;/td&gt;&lt;td&gt;0.9657&lt;/td&gt;&lt;td&gt;28&lt;/td&gt;&lt;td&gt;456&lt;/td&gt;&lt;td&gt;895&lt;/td&gt;&lt;td&gt;31m51.199s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;126&lt;/td&gt;&lt;td&gt;4591168&lt;/td&gt;&lt;td&gt;36437&lt;/td&gt;&lt;td&gt;72499&lt;/td&gt;&lt;td&gt;174569&lt;/td&gt;&lt;td&gt;0.9818&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;47m54.377s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4661190&lt;/td&gt;&lt;td&gt;30267&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174288&lt;/td&gt;&lt;td&gt;0.9840&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;233&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;44m53.714s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix13  E. coli K-12 MG1655 454 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;874&lt;/td&gt;&lt;td&gt;4513335&lt;/td&gt;&lt;td&gt;5163&lt;/td&gt;&lt;td&gt;8771&lt;/td&gt;&lt;td&gt;42344&lt;/td&gt;&lt;td&gt;0.9731&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;td&gt;247&lt;/td&gt;&lt;td&gt;29m53.841s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1538&lt;/td&gt;&lt;td&gt;5056677&lt;/td&gt;&lt;td&gt;3287&lt;/td&gt;&lt;td&gt;4969&lt;/td&gt;&lt;td&gt;26316&lt;/td&gt;&lt;td&gt;0.9600&lt;/td&gt;&lt;td&gt;68&lt;/td&gt;&lt;td&gt;648&lt;/td&gt;&lt;td&gt;1199&lt;/td&gt;&lt;td&gt;7m49.404s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;2415&lt;/td&gt;&lt;td&gt;3942859&lt;/td&gt;&lt;td&gt;1632&lt;/td&gt;&lt;td&gt;2068&lt;/td&gt;&lt;td&gt;10286&lt;/td&gt;&lt;td&gt;0.8499&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;386&lt;/td&gt;&lt;td&gt;207&lt;/td&gt;&lt;td&gt;2m10.820s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;1722&lt;/td&gt;&lt;td&gt;4737188&lt;/td&gt;&lt;td&gt;2750&lt;/td&gt;&lt;td&gt;3660&lt;/td&gt;&lt;td&gt;16250&lt;/td&gt;&lt;td&gt;0.9630&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;145&lt;/td&gt;&lt;td&gt;89&lt;/td&gt;&lt;td&gt;5m27.089s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2662&lt;/td&gt;&lt;td&gt;4020201&lt;/td&gt;&lt;td&gt;1510&lt;/td&gt;&lt;td&gt;1899&lt;/td&gt;&lt;td&gt;12092&lt;/td&gt;&lt;td&gt;0.8630&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;63&lt;/td&gt;&lt;td&gt;41&lt;/td&gt;&lt;td&gt;3m45.703s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix14  E. coli K-12 MG1655 454+ Illumina paired  (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1813&lt;/td&gt;&lt;td&gt;3538992&lt;/td&gt;&lt;td&gt;1952&lt;/td&gt;&lt;td&gt;2632&lt;/td&gt;&lt;td&gt;15039&lt;/td&gt;&lt;td&gt;0.7598&lt;/td&gt;&lt;td&gt;598&lt;/td&gt;&lt;td&gt;1820&lt;/td&gt;&lt;td&gt;7077&lt;/td&gt;&lt;td&gt;157m46.099s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;754&lt;/td&gt;&lt;td&gt;4518284&lt;/td&gt;&lt;td&gt;5992&lt;/td&gt;&lt;td&gt;8787&lt;/td&gt;&lt;td&gt;29554&lt;/td&gt;&lt;td&gt;0.9730&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;267&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;35m18.761s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;4579657&lt;/td&gt;&lt;td&gt;42015&lt;/td&gt;&lt;td&gt;87318&lt;/td&gt;&lt;td&gt;268385&lt;/td&gt;&lt;td&gt;0.9831&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;234&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;62m30.978s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;154&lt;/td&gt;&lt;td&gt;4667915&lt;/td&gt;&lt;td&gt;30311&lt;/td&gt;&lt;td&gt;56703&lt;/td&gt;&lt;td&gt;174286&lt;/td&gt;&lt;td&gt;0.9851&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;239&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;47m12.271s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix21 Acinetobacter sp. ADP1 Illumina non-paired  (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1498&lt;/td&gt;&lt;td&gt;4706276&lt;/td&gt;&lt;td&gt;3141&lt;/td&gt;&lt;td&gt;4965&lt;/td&gt;&lt;td&gt;24129&lt;/td&gt;&lt;td&gt;0.9679&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1115&lt;/td&gt;&lt;td&gt;210&lt;/td&gt;&lt;td&gt;87m18.839s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;4361792&lt;/td&gt;&lt;td&gt;10143&lt;/td&gt;&lt;td&gt;20490&lt;/td&gt;&lt;td&gt;85191&lt;/td&gt;&lt;td&gt;0.9773&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;381&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;16m3.742s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;259&lt;/td&gt;&lt;td&gt;3677696&lt;/td&gt;&lt;td&gt;14199&lt;/td&gt;&lt;td&gt;25852&lt;/td&gt;&lt;td&gt;72730&lt;/td&gt;&lt;td&gt;0.9749&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;82&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;29m48.993s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1105&lt;/td&gt;&lt;td&gt;4315007&lt;/td&gt;&lt;td&gt;3904&lt;/td&gt;&lt;td&gt;6485&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9697&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;172&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;28m59.212s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix22 Acinetobacter sp. ADP1  454 (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;109&lt;/td&gt;&lt;td&gt;3547847&lt;/td&gt;&lt;td&gt;32549&lt;/td&gt;&lt;td&gt;61793&lt;/td&gt;&lt;td&gt;214173&lt;/td&gt;&lt;td&gt;0.9846&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;380&lt;/td&gt;&lt;td&gt;43m3.785s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;1715&lt;/td&gt;&lt;td&gt;6018217&lt;/td&gt;&lt;td&gt;3509&lt;/td&gt;&lt;td&gt;5511&lt;/td&gt;&lt;td&gt;29671&lt;/td&gt;&lt;td&gt;0.9722&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;1421&lt;/td&gt;&lt;td&gt;12480&lt;/td&gt;&lt;td&gt;18m3.905s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1440&lt;/td&gt;&lt;td&gt;3356900&lt;/td&gt;&lt;td&gt;2331&lt;/td&gt;&lt;td&gt;3267&lt;/td&gt;&lt;td&gt;14690&lt;/td&gt;&lt;td&gt;0.9308&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;704&lt;/td&gt;&lt;td&gt;3166&lt;/td&gt;&lt;td&gt;3m54.495s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;2482&lt;/td&gt;&lt;td&gt;3361598&lt;/td&gt;&lt;td&gt;1354&lt;/td&gt;&lt;td&gt;1554&lt;/td&gt;&lt;td&gt;7435&lt;/td&gt;&lt;td&gt;0.8571&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;305&lt;/td&gt;&lt;td&gt;5m22.559s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;2324&lt;/td&gt;&lt;td&gt;2991350&lt;/td&gt;&lt;td&gt;1287&lt;/td&gt;&lt;td&gt;1496&lt;/td&gt;&lt;td&gt;10227&lt;/td&gt;&lt;td&gt;0.8309&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;37&lt;/td&gt;&lt;td&gt;96&lt;/td&gt;&lt;td&gt;7m4.659s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix23 Acinetobacter sp. ADP1  454 + Illumina (genome: nuccore/NC_005966, reads: sra/SRA003611)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;2399&lt;/td&gt;&lt;td&gt;6932733&lt;/td&gt;&lt;td&gt;2889&lt;/td&gt;&lt;td&gt;4495&lt;/td&gt;&lt;td&gt;47460&lt;/td&gt;&lt;td&gt;0.9681&lt;/td&gt;&lt;td&gt;70&lt;/td&gt;&lt;td&gt;2149&lt;/td&gt;&lt;td&gt;8033&lt;/td&gt;&lt;td&gt;129m53.436s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;1165&lt;/td&gt;&lt;td&gt;4285023&lt;/td&gt;&lt;td&gt;3678&lt;/td&gt;&lt;td&gt;5820&lt;/td&gt;&lt;td&gt;21242&lt;/td&gt;&lt;td&gt;0.9672&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;753&lt;/td&gt;&lt;td&gt;3164&lt;/td&gt;&lt;td&gt;22m52.574s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;91&lt;/td&gt;&lt;td&gt;3540404&lt;/td&gt;&lt;td&gt;38905&lt;/td&gt;&lt;td&gt;82891&lt;/td&gt;&lt;td&gt;215819&lt;/td&gt;&lt;td&gt;0.9804&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;36m27.635s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;1198&lt;/td&gt;&lt;td&gt;4294398&lt;/td&gt;&lt;td&gt;3584&lt;/td&gt;&lt;td&gt;5748&lt;/td&gt;&lt;td&gt;30606&lt;/td&gt;&lt;td&gt;0.9677&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;175&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;34m34.469s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix31  Cryptobacterium curtum DSM 15641 Illumina  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;166&lt;/td&gt;&lt;td&gt;109935&lt;/td&gt;&lt;td&gt;662&lt;/td&gt;&lt;td&gt;651&lt;/td&gt;&lt;td&gt;1433&lt;/td&gt;&lt;td&gt;0.0608&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;741&lt;/td&gt;&lt;td&gt;620&lt;/td&gt;&lt;td&gt;79m50.304s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;1598265&lt;/td&gt;&lt;td&gt;7683&lt;/td&gt;&lt;td&gt;12698&lt;/td&gt;&lt;td&gt;54143&lt;/td&gt;&lt;td&gt;0.9890&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;133&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;13m2.283s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;td&gt;1606647&lt;/td&gt;&lt;td&gt;22314&lt;/td&gt;&lt;td&gt;36518&lt;/td&gt;&lt;td&gt;91303&lt;/td&gt;&lt;td&gt;0.9862&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;19m51.388s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;156&lt;/td&gt;&lt;td&gt;1596474&lt;/td&gt;&lt;td&gt;10233&lt;/td&gt;&lt;td&gt;19950&lt;/td&gt;&lt;td&gt;69217&lt;/td&gt;&lt;td&gt;0.9881&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;22m45.895s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix32 Cryptobacterium curtum DSM 15641  454  (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Newbler&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;1609423&lt;/td&gt;&lt;td&gt;53647&lt;/td&gt;&lt;td&gt;261125&lt;/td&gt;&lt;td&gt;477358&lt;/td&gt;&lt;td&gt;0.9904&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;21m24.064s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;153&lt;/td&gt;&lt;td&gt;3078576&lt;/td&gt;&lt;td&gt;20121&lt;/td&gt;&lt;td&gt;76729&lt;/td&gt;&lt;td&gt;258262&lt;/td&gt;&lt;td&gt;0.9861&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;104&lt;/td&gt;&lt;td&gt;430&lt;/td&gt;&lt;td&gt;13m55.961s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;58&lt;/td&gt;&lt;td&gt;1600395&lt;/td&gt;&lt;td&gt;27593&lt;/td&gt;&lt;td&gt;76702&lt;/td&gt;&lt;td&gt;191999&lt;/td&gt;&lt;td&gt;0.9914&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;&lt;td&gt;176&lt;/td&gt;&lt;td&gt;3m29.796s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;184&lt;/td&gt;&lt;td&gt;1573256&lt;/td&gt;&lt;td&gt;8550&lt;/td&gt;&lt;td&gt;14142&lt;/td&gt;&lt;td&gt;76631&lt;/td&gt;&lt;td&gt;0.9503&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m42.587s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;478&lt;/td&gt;&lt;td&gt;1566837&lt;/td&gt;&lt;td&gt;3277&lt;/td&gt;&lt;td&gt;5064&lt;/td&gt;&lt;td&gt;16718&lt;/td&gt;&lt;td&gt;0.9689&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4m14.770s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o mix33 Cryptobacterium curtum DSM 15641 454 + Illumina   (genome: nuccore/NC_013170, reads: sra/SRA008863)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;td&gt;27077&lt;/td&gt;&lt;td&gt;601&lt;/td&gt;&lt;td&gt;567&lt;/td&gt;&lt;td&gt;1383&lt;/td&gt;&lt;td&gt;0.0023&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;67&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;87m51.332s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;190&lt;/td&gt;&lt;td&gt;1593755&lt;/td&gt;&lt;td&gt;8388&lt;/td&gt;&lt;td&gt;13136&lt;/td&gt;&lt;td&gt;45625&lt;/td&gt;&lt;td&gt;0.9848&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;238&lt;/td&gt;&lt;td&gt;1701&lt;/td&gt;&lt;td&gt;16m37.093s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;1602133&lt;/td&gt;&lt;td&gt;59338&lt;/td&gt;&lt;td&gt;116274&lt;/td&gt;&lt;td&gt;236544&lt;/td&gt;&lt;td&gt;0.9897&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;35m8.569s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;250&lt;/td&gt;&lt;td&gt;1590298&lt;/td&gt;&lt;td&gt;6361&lt;/td&gt;&lt;td&gt;10207&lt;/td&gt;&lt;td&gt;37072&lt;/td&gt;&lt;td&gt;0.9835&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;23m33.000s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;11&quot;&gt;&lt;b&gt;          o short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) &lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Assembler&lt;/td&gt;&lt;td&gt;Contigs&lt;/td&gt;&lt;td&gt;Bases&lt;/td&gt;&lt;td&gt;Average length&lt;/td&gt;&lt;td&gt;N50&lt;/td&gt;&lt;td&gt;Largest length&lt;/td&gt;&lt;td&gt;Genome breadth of coverage&lt;/td&gt;&lt;td&gt;Misassembled contigs&lt;/td&gt;&lt;td&gt;Mismatches&lt;/td&gt;&lt;td&gt;Indels&lt;/td&gt;&lt;td&gt;Running time&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;EULER-SR&lt;/td&gt;&lt;td&gt;495&lt;/td&gt;&lt;td&gt;955333&lt;/td&gt;&lt;td&gt;1929&lt;/td&gt;&lt;td&gt;2426&lt;/td&gt;&lt;td&gt;10235&lt;/td&gt;&lt;td&gt;0.9290&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;383&lt;/td&gt;&lt;td&gt;69&lt;/td&gt;&lt;td&gt;6m40.744s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Velvet&lt;/td&gt;&lt;td&gt;208&lt;/td&gt;&lt;td&gt;845807&lt;/td&gt;&lt;td&gt;4066&lt;/td&gt;&lt;td&gt;5938&lt;/td&gt;&lt;td&gt;19562&lt;/td&gt;&lt;td&gt;0.9664&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;123&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;1m13.446s&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;Ray&lt;/td&gt;&lt;td&gt;160&lt;/td&gt;&lt;td&gt;861365&lt;/td&gt;&lt;td&gt;5383&lt;/td&gt;&lt;td&gt;8079&lt;/td&gt;&lt;td&gt;48424&lt;/td&gt;&lt;td&gt;0.9544&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;2m27.208s&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ABySS&lt;/td&gt;&lt;td&gt;332&lt;/td&gt;&lt;td&gt;826396&lt;/td&gt;&lt;td&gt;2489&lt;/td&gt;&lt;td&gt;3369&lt;/td&gt;&lt;td&gt;17054&lt;/td&gt;&lt;td&gt;0.9435&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1m44.050s&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;

== Discussion ==

Ray is good. Ray with Roche/454 and Illumina reads is better than Newbler with only Roche/454 reads.

=== Mix14 ===

Incorrect Ray contig on mix14:
&lt;pre&gt;
115
 4210996  4294119  |   112667    29544  |    83124    83124  |    99.99  |  4639675   112667  |     1.79    73.78  | gi|49175990|ref|NC_000913.2|       115
 4294197  4323999  |    29805        1  |    29803    29805  |    99.99  |  4639675   112667  |     0.64    26.45  | gi|49175990|ref|NC_000913.2|       115
&lt;/pre&gt;

It looks ok to me.

=== Mix23 ===

Incorrect Ray contig on mix23:
&lt;pre&gt;
35
 2804111  2804909  |        1      799  |      799      799  |   100.00  |  3598621     1358  |     0.02    58.84  | Acinetobacter_ADP1 35
 2804911  2805144  |     1125     1358  |      234      234  |    96.15  |  3598621     1358  |     0.01    17.23  | Acinetobacter_ADP1 35
&lt;/pre&gt;

It looks ok to me.</text>
    </revision>
  </page>
  <page>
    <title>Comparisons with other assemblers for Ray 0.0.6</title>
    <id>8</id>
    <revision>
      <id>97</id>
      <timestamp>2010-04-11T16:02:57Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <minor/>
      <comment>Created page with 'This page contains results for Ray 0.0.6.  * Release statement [http://sourceforge.net/mailarchive/forum.php?thread_name=n2pa79f6a4b1004101954te008b1a7t79f695858e8a5ce8%40mail.gmâ€¦'</comment>
      <text xml:space="preserve">This page contains results for Ray 0.0.6.

* Release statement [http://sourceforge.net/mailarchive/forum.php?thread_name=n2pa79f6a4b1004101954te008b1a7t79f695858e8a5ce8%40mail.gmail.com&amp;forum_name=denovoassembler-users email]
* Download 0.0.6 [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.6.tar.bz2/download .tar.bz2]




== Assemblers ==

* velvetVersion=0.7.61
* eulerVersion=1.1.2
* newblerVersion=2.0.00.20
* rayVersion=0.0.6
* abyssVersion=1.1.2

== Datasets ==



*  Simulated datasets
**sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)
**sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)
**sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)
**sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)
**sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)
**sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)
**sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)
**sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) 
* Mixed set 1: E. coli K-12 MG1655 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
**mix11 Illumina non-paired
**mix12 Illumina paired
**mix13 454
**mix14 454+ Illumina paired 
* Mixed set 2: Acinetobacter sp. ADP1 (genome: nuccore/NC_005966, reads: sra/SRA003611)
**mix21 Illumina non-paired
**mix22 454
**mix23 454 + Illumina 
* Mixed set 3: Cryptobacterium curtum DSM 15641 (genome: nuccore/NC_013170, reads: sra/SRA008863)
**mix31 Illumina
**mix32 454
**mix33 454 + Illumina 
* Illumina-only paired datasets
**short1 Pseudomonas syringae pathovar syringae B728a paired reads (genome: NC_007005.1 reads: era/ERA000095) (400/20)
**short2 Pseudomonas syringae pathovar syringae B728a non-paired reads(genome: NC_007005.1 reads: era/ERA000095) (400/20)
**short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611)

== Results ==

=== Simulations===
{| border=&quot;1&quot;
|- 
! Assembler
! Contigs
! Bases
! Contig average length
! Contig N50
! Contig max length
! Genome coverage
! Misassembled contigs
! Mismatches
! Indels
! Comments
|-
| colspan=&quot;10&quot; | sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)

|-
|EULER-SR 
| 261 
| 1967594 
| 7538 
| 11621 
|  61396 
|  0.9423 
| 6 
| 68 
| 123 
|-
|Velvet 
| 280 
| 1917129 
| 6846 
| 11279 
|  44362 
|  0.9439 
| 1 
| 23 
| 8 
|-
|Ray 
| 263 
| 1943510 
| 7389 
| 11519 
|  77860 
|  0.9553 
| 0 
| 0 
| 0    
| WINS!
|-
|ABySS 
| 417 
| 1898819 
| 4553 
| 7349 
|  27222 
|  0.9343 
| 0 
| 4 
| 0 
|-
| colspan=&quot;10&quot; |sim2 S. pneumoniae 50-nt reads @ 50X, 1 random mismatches (nuccore/NC_003098)

|-
|EULER-SR 
| 267 
| 1965104 
| 7359 
| 11477 
|  61349 
|  0.9413 
| 6 
| 79 
| 237 
|-
|Velvet 
| 290 
| 1913682 
| 6598 
| 10302 
|  42572 
|  0.9425 
| 2 
| 27 
| 11 
|-
|Ray 
| 260 
| 1946574 
| 7486 
| 11554 
|  77853 
|  0.9568 
| 0 
| 0 
| 0  
| WINS!
|-
|ABySS 
| 418 
| 1898547 
| 4541 
| 7349 
|  27222 
|  0.9342 
| 0 
| 4 
| 0 
|-
| colspan=&quot;10&quot; | sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)

|-
|EULER-SR 
| 250 
| 1965047 
| 7860 
| 11730 
|  61593 
|  0.9453 
| 18 
| 99 
| 189 
|-
|Velvet 
| 113 
| 1950222 
| 17258 
| 32111 
|  123292 
|  0.9604 
| 30 
| 382 
| 140 
|-
|Ray 
| 99 
| 2011511 
| 20318 
| 35311 
|  127906 
|  0.9868 
| 0 
| 1 
| 0  
|  WINS!
|-
|ABySS 
| 151 
| 2019778 
| 13376 
| 22045 
|  104182 
|  0.9842 
| 0 
| 213 
| 9 
|-
| colspan=&quot;10&quot; | sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)

|-
|Newbler 
| 75 
| 4559811 
| 60797 
| 132967 
|  326953 
|  0.9834 
| 0 
| 0 
| 2 
|-
|EULER-SR 
| 136 
| 5399988 
| 39705 
| 86536 
|  280065 
|  0.9713 
| 58 
| 106 
| 903 
|-
|Velvet 
| 693 
| 4472973 
| 6454 
| 10495 
|  53974 
|  0.9638 
| 0 
| 4 
| 0 
|-
|Ray 
| 127 
| 4586710 
| 36115 
| 85185 
|  269874 
|  0.9850 
| 0 
| 0 
| 0 
|   WINS!
|-
|ABySS 
| 898 
| 4450079 
| 4955 
| 8141 
|  35440 
|  0.9573 
| 0 
| 5 
| 0 
|-
| colspan=&quot;10&quot; | sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)

|-
|EULER-SR 
| 248 
| 4711107 
| 18996 
| 33519 
|  131097 
|  0.9730 
| 23 
| 84 
| 1186 
|-
|Velvet 
| 129 
| 4527399 
| 35096 
| 68879 
|  269606 
|  0.9763 
| 21 
| 497 
| 842 
|-
|Ray 
| 113 
| 4584601 
| 40571 
| 80856 
|  269979 
|  0.9841 
| 0 
| 0 
| 0   
| WINS!
|-
|ABySS 
| 147 
| 4608010 
| 31347 
| 59697 
|  174234 
|  0.9884 
| 0 
| 289 
| 8 
|-
| colspan=&quot;10&quot; | sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)

|-
|EULER-SR 
| 323 
| 4713939 
| 14594 
| 27098 
|  100573 
|  0.9715 
| 16 
| 42 
| 970 
|-
|Velvet 
| 405 
| 4504211 
| 11121 
| 18003 
|  120868 
|  0.9714 
| 2 
| 0 
| 0 
|-
|Ray 
| 349 
| 4535436 
| 12995 
| 22363 
|  100515 
|  0.9741 
| 0 
| 0 
| 0  
|  WINS!
|-
|ABySS 
| 898 
| 4449989 
| 4955 
| 8141 
|  35440 
|  0.9573 
| 0 
| 11 
| 0 
|-
| colspan=&quot;10&quot; |sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)

|-
|EULER-SR 
| 422 
| 7066990 
| 16746 
| 35498 
|  170764 
|  0.9834 
| 16 
| 80 
| 531 
|-
|Velvet 
| 1264 
| 6086321 
| 4815 
| 7720 
|  49780 
|  0.9717 
| 5 
| 136 
| 93 
|-
|Ray 
| 542 
| 6112954 
| 11278 
| 22063 
|  210111 
|  0.9734 
| 0 
| 0 
| 0  
|  WINS!
|-
|ABySS 
| 4057 
| 4998428 
| 1232 
| 1383 
|  14076 
|  0.7933 
| 0 
| 17 
| 0 
|-
| colspan=&quot;10&quot; |sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) 

|-
|EULER-SR 
| 251 
| 6305646 
| 25122 
| 55095 
|  182061 
|  0.9873 
| 13 
| 216 
| 551 
|-
|Velvet 
| 86 
| 6189575 
| 71971 
| 289674 
|  579752 
|  0.9896 
| 29 
| 1079 
| 2433 
|-
|Ray 
| 121 
| 6226753 
| 51460 
| 107291 
|  346568 
|  0.9919 
| 0 
| 0 
| 0 
|   WINS!
|-
|ABySS 
| 152 
| 6416064 
| 42210 
| 83309 
|  368070 
|  0.9957 
| 0 
| 455 
| 11 
|}

===Mix dataset #1===
{| border=&quot;1&quot;
|- 
! Assembler
! Contigs
! Bases
! Contig average length
! Contig N50
! Contig max length
! Genome coverage
! Misassembled contigs
! Mismatches
! Indels
! Comments
|-
| colspan=&quot;10&quot;|mix11 Illumina non-paired

|-
|EULER-SR 
| 1937 
| 4102206 
| 2117 
| 3001 
|  19094 
|  0.8657 
| 13 
| 1162 
| 7360 
|-
|Velvet 
| 528 
| 4491661 
| 8506 
| 14236 
|  60568 
|  0.9675 
| 26 
| 136 
| 100 
|-
|Ray 
| 462 
| 4521485 
| 9786 
| 16160 
|  66556 
|  0.9701 
| 0 
| 2 
| 4 
|   WINS!
|-
|ABySS 
| 1026 
| 4440595 
| 4328 
| 6898 
|  34595 
|  0.9550 
| 0 
| 5 
| 4 
|-
| colspan=&quot;10&quot; |mix12 Illumina paired

|-
|EULER-SR 
| 1761 
| 4099614 
| 2328 
| 3429 
|  19094 
|  0.8708 
| 14 
| 1173 
| 7355 
|-
|Velvet 
| 83 
| 4542631 
| 54730 
| 125611 
|  311586 
|  0.9782 
| 28 
| 456 
| 895 
|-
|Ray 
| 129 
| 4585860 
| 35549 
| 70843 
|  174465 
|  0.9810 
| 0 
| 2 
| 4  
|  WINS!
|-
|ABySS 
| 154 
| 4661190 
| 30267 
| 56703 
|  174288 
|  0.9844 
| 0 
| 233 
| 9 
|-
| colspan=&quot;10&quot;| mix13 454

|-
| colspan=&quot;10&quot; |MISSING RESULTS (newbler)  NEWBLER COMPUTATION LASTS FOR 10 hours and more?
|-
| EULER-SR 
| 1538 
| 5056677 
| 3287 
| 4969 
|  26316 
|  0.9600 
| 72 
| 648 
| 1199 
|-
|Velvet 
| 2415 
| 3942859 
| 1632 
| 2068 
|  10286 
|  0.8500 
| 13 
| 386 
| 207 
|-
|Ray 
| 1616 
| 4724833 
| 2923 
| 3975 
|  17565 
|  0.9649 
| 8 
| 142 
| 90 
|-
|ABySS 
| 2662 
| 4020201 
| 1510 
| 1899 
|  12092 
|  0.8630 
| 0 
| 44 
| 24 
|-
| colspan=&quot;10&quot; | mix14 454+ Illumina paired 

|-
|EULER-SR 
| 1813 
| 3538992 
| 1952 
| 2632 
|  15039 
|  0.7612 
| 659 
| 1820 
| 7077 
|-
|Velvet 
| 754 
| 4518284 
| 5992 
| 8787 
|  29554 
|  0.9732 
| 26 
| 267 
| 250 
|-
|Ray 
| 103 
| 4564639 
| 44316 
| 95750 
|  209531 
|  0.9827 
| 0 
| 10 
| 6  
|  WINS!
|-
|ABySS 
| 154 
| 4667915 
| 30311 
| 56703 
|  174286 
|  0.9860 
| 0 
| 239 
| 9 
|}

=== Mix dataset #2 ===

{| border=&quot;1&quot;
|- 
! Assembler
! Contigs
! Bases
! Contig average length
! Contig N50
! Contig max length
! Genome coverage
! Misassembled contigs
! Mismatches
! Indels
! Comments
|-
| colspan=&quot;10&quot; | mix21 Illumina non-paired

|-
|EULER-SR 
| 1498 
| 4706276 
| 3141 
| 4965 
|  24129 
|  0.9679 
| 15 
| 1115 
| 210 
|-
|Velvet 
| 430 
| 4361792 
| 10143 
| 20490 
|  85191 
|  0.9776 
| 11 
| 381 
| 15 
|-
|Ray 
| 245 
| 3648169 
| 14890 
| 27619 
|  85301 
|  0.9773 
| 1 
| 47 
| 6  
|  WINS!
|-
|ABySS 
| 1105 
| 4315007 
| 3904 
| 6485 
|  30606 
|  0.9697 
| 0 
| 172 
| 6  
|-
| colspan=&quot;10&quot; | mix22 454

|-
|Newbler 
| 109 
| 3547847 
| 32549 
| 61793 
|  214173 
|  0.9847 
| 1 
| 69 
| 380  
|     WINS!
|-
|EULER-SR 
| 1715 
| 6018217 
| 3509 
| 5511 
|  29671 
|  0.9723 
| 54 
| 1421 
| 12480 
|-
|Velvet 
| 1440 
| 3356900 
| 2331 
| 3267 
|  14690 
|  0.9308 
| 4 
| 704 
| 3166 
|-
|Ray 
| 2481 
| 3359898 
| 1354 
| 1548 
|  7398 
|  0.8569 
| 1 
| 55 
| 293 
|-
|ABySS 
| 2324 
| 2991350 
| 1287 
| 1496 
|  10227 
|  0.8309 
| 0 
| 37 
| 96 
|-
| colspan=&quot;10&quot;| mix23 454 + Illumina 

|-
|EULER-SR 
| 2399 
| 6932733 
| 2889 
| 4495 
|  47460 
|  0.9683 
| 104 
| 2149 
| 8033 
|-
|Velvet 
| 1165 
| 4285023 
| 3678 
| 5820 
|  21242 
|  0.9672 
| 0 
| 753 
| 3164 
|-
|Ray 
| 136 
| 3583577 
| 26349 
| 50536 
|  215819 
|  0.9793 
| 1 
| 5 
| 1  
|  WINS!, reduce the 454' indels (380 for Newbler) to 1!, how amazing?
|-
|ABySS 
| 1198 
| 4294398 
| 3584 
| 5748 
|  30606 
|  0.9677 
| 0 
| 175 
| 6 
|}

=== Mix dataset #3 ===
{| border=&quot;1&quot;
|- 
! Assembler
! Contigs
! Bases
! Contig average length
! Contig N50
! Contig max length
! Genome coverage
! Misassembled contigs
! Mismatches
! Indels
! Comments
|-
| colspan=&quot;10&quot;| mix31 Illumina

|-
|EULER-SR 
| 382 
| 1878862 
| 4918 
| 7873 
|  33961 
|  0.9728 
| 5 
| 2388 
| 473 
|-
|Velvet 
| 208 
| 1598265 
| 7683 
| 12698 
|  54143 
|  0.9890 
| 11 
| 133 
| 60 
|-
|Ray 
| 88 
| 1610613 
| 18302 
| 29968 
|  75074 
|  0.9876 
| 0 
| 0 
| 2   
| WINS!
|-
|ABySS 
| 156 
| 1596474 
| 10233 
| 19950 
|  69217 
|  0.9881 
| 0 
| 6 
| 2 
|-
| colspan=&quot;10&quot; | mix32 454

|-
|Newbler 
| 30 
| 1609423 
| 53647 
| 261125 
|  477358 
|  0.9904 
| 0 
| 0 
| 8   
| WINS!
|-
|EULER-SR 
| 153 
| 3078576 
| 20121 
| 76729 
|  258262 
|  0.9862 
| 3 
| 104 
| 430 
|-
|Velvet 
| 58 
| 1600395 
| 27593 
| 76702 
|  191999 
|  0.9914 
| 4 
| 26 
| 176 
|-
|Ray 
| 256 
| 1563957 
| 6109 
| 10684 
|  60904 
|  0.9354 
| 0 
| 0 
| 1   
|-
|ABySS 
| 478 
| 1566837 
| 3277 
| 5064 
|  16718 
|  0.9689 
| 0 
| 7 
| 1 
|-
| colspan=&quot;10&quot; | mix33 454 + Illumina 

|-
|EULER-SR 
| 45 
| 27077 
| 601 
| 567 
|  1383 
|  0.0023 
| 6 
| 67 
| 10 
|-
|Velvet 
| 190 
| 1593755 
| 8388 
| 13136 
|  45625 
|  0.9848 
| 8 
| 238 
| 1701 
|-
|Ray 
| 44 
| 1601950 
| 36407 
| 69581 
|  129489 
|  0.9892 
| 0 
| 0 
| 1  
|  WINS!
|-
|ABySS 
| 250 
| 1590298 
| 6361 
| 10207 
|  37072 
|  0.9836 
| 0 
| 4 
| 2 
|}

=== Other Illumina datasets ===
{| border=&quot;1&quot;
|- 
! Assembler
! Contigs
! Bases
! Contig average length
! Contig N50
! Contig max length
! Genome coverage
! Misassembled contigs
! Mismatches
! Indels
! Comments
|-
| colspan=&quot;10&quot; |short1 Pseudomonas syringae pathovar syringae B728a paired reads (genome: NC_007005.1 reads: era/ERA000095) (400/20)

|-
|EULER-SR 
| 421 
| 6209171 
| 14748 
| 29534 
|  252636 
|  0.9757 
| 72 
| 1135 
| 1813 
|-
|Velvet 
| 176 
| 5965775 
| 33896 
| 87555 
|  670710 
|  0.9762 
| 73 
| 722 
| 691 
|-
|Ray 
| 505 
| 5974861 
| 11831 
| 19179 
|  68589 
|  0.9617 
| 5 
| 159 
| 120 
|-
|ABySS 
| 322 
| 6421655 
| 19943 
| 40785 
|  111122 
|  0.9789 
| 2 
| 447 
| 21 
|    WINS!
|-
| colspan=&quot;10&quot; | short2 Pseudomonas syringae pathovar syringae B728a non-paired reads(genome: NC_007005.1 reads: era/ERA000095) (400/20)

|-
|EULER-SR 
| 1045 
| 6430705 
| 6153 
| 10580 
|  54053 
|  0.9559 
| 37 
| 567 
| 325 
|-
|Velvet 
| 835 
| 5814502 
| 6963 
| 12563 
|  53912 
|  0.9525 
| 8 
| 103 
| 33 
|-
|Ray 
| 813 
| 5902943 
| 7260 
| 12055 
|  50320 
|  0.9535 
| 5 
| 291 
| 3 
|-
|ABySS 
| 1859 
| 5638003 
| 3032 
| 4725 
|  27486 
|  0.9205 
| 0 
| 44 
| 7 
|-
| colspan=&quot;10&quot; | short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) 

|-
|EULER-SR 
| 495 
| 955333 
| 1929 
| 2426 
|  10235 
|  0.9290 
| 6 
| 383 
| 69 
|-
|Velvet 
| 170 
| 842767 
| 4957 
| 8813 
|  20790 
|  0.9653 
| 11 
| 188 
| 11 
|-
|Ray 
| 160 
| 862507 
| 5390 
| 7733 
|  48424 
|  0.9549 
| 1 
| 17 
| 3 
|-
|ABySS 
| 332 
| 826396 
| 2489 
| 3369 
|  17054 
|  0.9435 
| 0 
| 5 
| 2 
|}</text>
    </revision>
    <revision>
      <id>98</id>
      <timestamp>2010-04-11T20:44:44Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Simulations */</comment>
      <text xml:space="preserve">This page contains results for Ray 0.0.6.

* Release statement [http://sourceforge.net/mailarchive/forum.php?thread_name=n2pa79f6a4b1004101954te008b1a7t79f695858e8a5ce8%40mail.gmail.com&amp;forum_name=denovoassembler-users email]
* Download 0.0.6 [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.6.tar.bz2/download .tar.bz2]




== Assemblers ==

* velvetVersion=0.7.61
* eulerVersion=1.1.2
* newblerVersion=2.0.00.20
* rayVersion=0.0.6
* abyssVersion=1.1.2

== Datasets ==



*  Simulated datasets
**sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)
**sim2 S. pneumoniae 50-nt reads @ 50X, 1% random mismatches (nuccore/NC_003098)
**sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)
**sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)
**sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)
**sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)
**sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)
**sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) 
* Mixed set 1: E. coli K-12 MG1655 (genome: nuccore/NC_000913, reads: sra/SRA001125 + sra/SRA001028)
**mix11 Illumina non-paired
**mix12 Illumina paired
**mix13 454
**mix14 454+ Illumina paired 
* Mixed set 2: Acinetobacter sp. ADP1 (genome: nuccore/NC_005966, reads: sra/SRA003611)
**mix21 Illumina non-paired
**mix22 454
**mix23 454 + Illumina 
* Mixed set 3: Cryptobacterium curtum DSM 15641 (genome: nuccore/NC_013170, reads: sra/SRA008863)
**mix31 Illumina
**mix32 454
**mix33 454 + Illumina 
* Illumina-only paired datasets
**short1 Pseudomonas syringae pathovar syringae B728a paired reads (genome: NC_007005.1 reads: era/ERA000095) (400/20)
**short2 Pseudomonas syringae pathovar syringae B728a non-paired reads(genome: NC_007005.1 reads: era/ERA000095) (400/20)
**short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611)

== Results ==

=== Simulations===
{| border=&quot;1&quot;
|- 
! Assembler
! Contigs
! Bases
! Contig average length
! Contig N50
! Contig max length
! Genome coverage
! Misassembled contigs
! Mismatches
! Indels
! Comments
|-
| colspan=&quot;10&quot; | sim1 S. pneumoniae 50-nt reads @ 50X (nuccore/NC_003098)

|-
|EULER-SR 
| 261 
| 1967594 
| 7538 
| 11621 
|  61396 
|  0.9423 
| 6 
| 68 
| 123 
|-
|Velvet 
| 280 
| 1917129 
| 6846 
| 11279 
|  44362 
|  0.9439 
| 1 
| 23 
| 8 
|-
|Ray 
| 263 
| 1943510 
| 7389 
| 11519 
|  77860 
|  0.9553 
| 0 
| 0 
| 0    
| WINS!
|-
|ABySS 
| 417 
| 1898819 
| 4553 
| 7349 
|  27222 
|  0.9343 
| 0 
| 4 
| 0 
|-
| colspan=&quot;10&quot; |sim2 S. pneumoniae 50-nt reads @ 50X, 1 random mismatches (nuccore/NC_003098)

|-
|EULER-SR 
| 267 
| 1965104 
| 7359 
| 11477 
|  61349 
|  0.9413 
| 6 
| 79 
| 237 
|-
|Velvet 
| 290 
| 1913682 
| 6598 
| 10302 
|  42572 
|  0.9425 
| 2 
| 27 
| 11 
|-
|Ray 
| 260 
| 1946574 
| 7486 
| 11554 
|  77853 
|  0.9568 
| 0 
| 0 
| 0  
| WINS!
|-
|ABySS 
| 418 
| 1898547 
| 4541 
| 7349 
|  27222 
|  0.9342 
| 0 
| 4 
| 0 
|-
| colspan=&quot;10&quot; | sim3 S. pneumoniae paired 200 50-nt reads @ 50X (nuccore/NC_003098)

|-
|EULER-SR 
| 250 
| 1965047 
| 7860 
| 11730 
|  61593 
|  0.9453 
| 18 
| 99 
| 189 
|-
|Velvet 
| 113 
| 1950222 
| 17258 
| 32111 
|  123292 
|  0.9604 
| 30 
| 382 
| 140 
|-
|Ray 
| 99 
| 2011511 
| 20318 
| 35311 
|  127906 
|  0.9868 
| 0 
| 1 
| 0  
|  WINS!
|-
|ABySS 
| 151 
| 2019778 
| 13376 
| 22045 
|  104182 
|  0.9842 
| 0 
| 213 
| 9 
|-
| colspan=&quot;10&quot; | sim4 E. coli K-12 MG1655 400-nt reads @ 50X (nuccore/NC_000913)

|-
|Newbler 
| 75 
| 4559811 
| 60797 
| 132967 
|  326953 
|  0.9834 
| 0 
| 0 
| 2 
|   WINS!
|-
|EULER-SR 
| 136 
| 5399988 
| 39705 
| 86536 
|  280065 
|  0.9713 
| 58 
| 106 
| 903 
|-
|Velvet 
| 693 
| 4472973 
| 6454 
| 10495 
|  53974 
|  0.9638 
| 0 
| 4 
| 0 
|-
|Ray 
| 127 
| 4586710 
| 36115 
| 85185 
|  269874 
|  0.9850 
| 0 
| 0 
| 0 

|-
|ABySS 
| 898 
| 4450079 
| 4955 
| 8141 
|  35440 
|  0.9573 
| 0 
| 5 
| 0 
|-
| colspan=&quot;10&quot; | sim5 E. coli K-12 MG1655 50-nt paired 200 reads @ 50X (nuccore/NC_000913)

|-
|EULER-SR 
| 248 
| 4711107 
| 18996 
| 33519 
|  131097 
|  0.9730 
| 23 
| 84 
| 1186 
|-
|Velvet 
| 129 
| 4527399 
| 35096 
| 68879 
|  269606 
|  0.9763 
| 21 
| 497 
| 842 
|-
|Ray 
| 113 
| 4584601 
| 40571 
| 80856 
|  269979 
|  0.9841 
| 0 
| 0 
| 0   
| WINS!
|-
|ABySS 
| 147 
| 4608010 
| 31347 
| 59697 
|  174234 
|  0.9884 
| 0 
| 289 
| 8 
|-
| colspan=&quot;10&quot; | sim6 E. coli K-12 MG1655 50-nt reads @ 50X (nuccore/NC_000913)

|-
|EULER-SR 
| 323 
| 4713939 
| 14594 
| 27098 
|  100573 
|  0.9715 
| 16 
| 42 
| 970 
|-
|Velvet 
| 405 
| 4504211 
| 11121 
| 18003 
|  120868 
|  0.9714 
| 2 
| 0 
| 0 
|-
|Ray 
| 349 
| 4535436 
| 12995 
| 22363 
|  100515 
|  0.9741 
| 0 
| 0 
| 0  
|  WINS!
|-
|ABySS 
| 898 
| 4449989 
| 4955 
| 8141 
|  35440 
|  0.9573 
| 0 
| 11 
| 0 
|-
| colspan=&quot;10&quot; |sim7 Pseudo 40-nt reads @ 50 X (nuccore/NC_002516)

|-
|EULER-SR 
| 422 
| 7066990 
| 16746 
| 35498 
|  170764 
|  0.9834 
| 16 
| 80 
| 531 
|-
|Velvet 
| 1264 
| 6086321 
| 4815 
| 7720 
|  49780 
|  0.9717 
| 5 
| 136 
| 93 
|-
|Ray 
| 542 
| 6112954 
| 11278 
| 22063 
|  210111 
|  0.9734 
| 0 
| 0 
| 0  
|  WINS!
|-
|ABySS 
| 4057 
| 4998428 
| 1232 
| 1383 
|  14076 
|  0.7933 
| 0 
| 17 
| 0 
|-
| colspan=&quot;10&quot; |sim8 Pseudo 40-nt paired (250) reads @ 50 X (nuccore/NC_002516) 

|-
|EULER-SR 
| 251 
| 6305646 
| 25122 
| 55095 
|  182061 
|  0.9873 
| 13 
| 216 
| 551 
|-
|Velvet 
| 86 
| 6189575 
| 71971 
| 289674 
|  579752 
|  0.9896 
| 29 
| 1079 
| 2433 
|-
|Ray 
| 121 
| 6226753 
| 51460 
| 107291 
|  346568 
|  0.9919 
| 0 
| 0 
| 0 
|   WINS!
|-
|ABySS 
| 152 
| 6416064 
| 42210 
| 83309 
|  368070 
|  0.9957 
| 0 
| 455 
| 11 
|}

===Mix dataset #1===
{| border=&quot;1&quot;
|- 
! Assembler
! Contigs
! Bases
! Contig average length
! Contig N50
! Contig max length
! Genome coverage
! Misassembled contigs
! Mismatches
! Indels
! Comments
|-
| colspan=&quot;10&quot;|mix11 Illumina non-paired

|-
|EULER-SR 
| 1937 
| 4102206 
| 2117 
| 3001 
|  19094 
|  0.8657 
| 13 
| 1162 
| 7360 
|-
|Velvet 
| 528 
| 4491661 
| 8506 
| 14236 
|  60568 
|  0.9675 
| 26 
| 136 
| 100 
|-
|Ray 
| 462 
| 4521485 
| 9786 
| 16160 
|  66556 
|  0.9701 
| 0 
| 2 
| 4 
|   WINS!
|-
|ABySS 
| 1026 
| 4440595 
| 4328 
| 6898 
|  34595 
|  0.9550 
| 0 
| 5 
| 4 
|-
| colspan=&quot;10&quot; |mix12 Illumina paired

|-
|EULER-SR 
| 1761 
| 4099614 
| 2328 
| 3429 
|  19094 
|  0.8708 
| 14 
| 1173 
| 7355 
|-
|Velvet 
| 83 
| 4542631 
| 54730 
| 125611 
|  311586 
|  0.9782 
| 28 
| 456 
| 895 
|-
|Ray 
| 129 
| 4585860 
| 35549 
| 70843 
|  174465 
|  0.9810 
| 0 
| 2 
| 4  
|  WINS!
|-
|ABySS 
| 154 
| 4661190 
| 30267 
| 56703 
|  174288 
|  0.9844 
| 0 
| 233 
| 9 
|-
| colspan=&quot;10&quot;| mix13 454

|-
| colspan=&quot;10&quot; |MISSING RESULTS (newbler)  NEWBLER COMPUTATION LASTS FOR 10 hours and more?
|-
| EULER-SR 
| 1538 
| 5056677 
| 3287 
| 4969 
|  26316 
|  0.9600 
| 72 
| 648 
| 1199 
|-
|Velvet 
| 2415 
| 3942859 
| 1632 
| 2068 
|  10286 
|  0.8500 
| 13 
| 386 
| 207 
|-
|Ray 
| 1616 
| 4724833 
| 2923 
| 3975 
|  17565 
|  0.9649 
| 8 
| 142 
| 90 
|-
|ABySS 
| 2662 
| 4020201 
| 1510 
| 1899 
|  12092 
|  0.8630 
| 0 
| 44 
| 24 
|-
| colspan=&quot;10&quot; | mix14 454+ Illumina paired 

|-
|EULER-SR 
| 1813 
| 3538992 
| 1952 
| 2632 
|  15039 
|  0.7612 
| 659 
| 1820 
| 7077 
|-
|Velvet 
| 754 
| 4518284 
| 5992 
| 8787 
|  29554 
|  0.9732 
| 26 
| 267 
| 250 
|-
|Ray 
| 103 
| 4564639 
| 44316 
| 95750 
|  209531 
|  0.9827 
| 0 
| 10 
| 6  
|  WINS!
|-
|ABySS 
| 154 
| 4667915 
| 30311 
| 56703 
|  174286 
|  0.9860 
| 0 
| 239 
| 9 
|}

=== Mix dataset #2 ===

{| border=&quot;1&quot;
|- 
! Assembler
! Contigs
! Bases
! Contig average length
! Contig N50
! Contig max length
! Genome coverage
! Misassembled contigs
! Mismatches
! Indels
! Comments
|-
| colspan=&quot;10&quot; | mix21 Illumina non-paired

|-
|EULER-SR 
| 1498 
| 4706276 
| 3141 
| 4965 
|  24129 
|  0.9679 
| 15 
| 1115 
| 210 
|-
|Velvet 
| 430 
| 4361792 
| 10143 
| 20490 
|  85191 
|  0.9776 
| 11 
| 381 
| 15 
|-
|Ray 
| 245 
| 3648169 
| 14890 
| 27619 
|  85301 
|  0.9773 
| 1 
| 47 
| 6  
|  WINS!
|-
|ABySS 
| 1105 
| 4315007 
| 3904 
| 6485 
|  30606 
|  0.9697 
| 0 
| 172 
| 6  
|-
| colspan=&quot;10&quot; | mix22 454

|-
|Newbler 
| 109 
| 3547847 
| 32549 
| 61793 
|  214173 
|  0.9847 
| 1 
| 69 
| 380  
|     WINS!
|-
|EULER-SR 
| 1715 
| 6018217 
| 3509 
| 5511 
|  29671 
|  0.9723 
| 54 
| 1421 
| 12480 
|-
|Velvet 
| 1440 
| 3356900 
| 2331 
| 3267 
|  14690 
|  0.9308 
| 4 
| 704 
| 3166 
|-
|Ray 
| 2481 
| 3359898 
| 1354 
| 1548 
|  7398 
|  0.8569 
| 1 
| 55 
| 293 
|-
|ABySS 
| 2324 
| 2991350 
| 1287 
| 1496 
|  10227 
|  0.8309 
| 0 
| 37 
| 96 
|-
| colspan=&quot;10&quot;| mix23 454 + Illumina 

|-
|EULER-SR 
| 2399 
| 6932733 
| 2889 
| 4495 
|  47460 
|  0.9683 
| 104 
| 2149 
| 8033 
|-
|Velvet 
| 1165 
| 4285023 
| 3678 
| 5820 
|  21242 
|  0.9672 
| 0 
| 753 
| 3164 
|-
|Ray 
| 136 
| 3583577 
| 26349 
| 50536 
|  215819 
|  0.9793 
| 1 
| 5 
| 1  
|  WINS!, reduce the 454' indels (380 for Newbler) to 1!, how amazing?
|-
|ABySS 
| 1198 
| 4294398 
| 3584 
| 5748 
|  30606 
|  0.9677 
| 0 
| 175 
| 6 
|}

=== Mix dataset #3 ===
{| border=&quot;1&quot;
|- 
! Assembler
! Contigs
! Bases
! Contig average length
! Contig N50
! Contig max length
! Genome coverage
! Misassembled contigs
! Mismatches
! Indels
! Comments
|-
| colspan=&quot;10&quot;| mix31 Illumina

|-
|EULER-SR 
| 382 
| 1878862 
| 4918 
| 7873 
|  33961 
|  0.9728 
| 5 
| 2388 
| 473 
|-
|Velvet 
| 208 
| 1598265 
| 7683 
| 12698 
|  54143 
|  0.9890 
| 11 
| 133 
| 60 
|-
|Ray 
| 88 
| 1610613 
| 18302 
| 29968 
|  75074 
|  0.9876 
| 0 
| 0 
| 2   
| WINS!
|-
|ABySS 
| 156 
| 1596474 
| 10233 
| 19950 
|  69217 
|  0.9881 
| 0 
| 6 
| 2 
|-
| colspan=&quot;10&quot; | mix32 454

|-
|Newbler 
| 30 
| 1609423 
| 53647 
| 261125 
|  477358 
|  0.9904 
| 0 
| 0 
| 8   
| WINS!
|-
|EULER-SR 
| 153 
| 3078576 
| 20121 
| 76729 
|  258262 
|  0.9862 
| 3 
| 104 
| 430 
|-
|Velvet 
| 58 
| 1600395 
| 27593 
| 76702 
|  191999 
|  0.9914 
| 4 
| 26 
| 176 
|-
|Ray 
| 256 
| 1563957 
| 6109 
| 10684 
|  60904 
|  0.9354 
| 0 
| 0 
| 1   
|-
|ABySS 
| 478 
| 1566837 
| 3277 
| 5064 
|  16718 
|  0.9689 
| 0 
| 7 
| 1 
|-
| colspan=&quot;10&quot; | mix33 454 + Illumina 

|-
|EULER-SR 
| 45 
| 27077 
| 601 
| 567 
|  1383 
|  0.0023 
| 6 
| 67 
| 10 
|-
|Velvet 
| 190 
| 1593755 
| 8388 
| 13136 
|  45625 
|  0.9848 
| 8 
| 238 
| 1701 
|-
|Ray 
| 44 
| 1601950 
| 36407 
| 69581 
|  129489 
|  0.9892 
| 0 
| 0 
| 1  
|  WINS!
|-
|ABySS 
| 250 
| 1590298 
| 6361 
| 10207 
|  37072 
|  0.9836 
| 0 
| 4 
| 2 
|}

=== Other Illumina datasets ===
{| border=&quot;1&quot;
|- 
! Assembler
! Contigs
! Bases
! Contig average length
! Contig N50
! Contig max length
! Genome coverage
! Misassembled contigs
! Mismatches
! Indels
! Comments
|-
| colspan=&quot;10&quot; |short1 Pseudomonas syringae pathovar syringae B728a paired reads (genome: NC_007005.1 reads: era/ERA000095) (400/20)

|-
|EULER-SR 
| 421 
| 6209171 
| 14748 
| 29534 
|  252636 
|  0.9757 
| 72 
| 1135 
| 1813 
|-
|Velvet 
| 176 
| 5965775 
| 33896 
| 87555 
|  670710 
|  0.9762 
| 73 
| 722 
| 691 
|-
|Ray 
| 505 
| 5974861 
| 11831 
| 19179 
|  68589 
|  0.9617 
| 5 
| 159 
| 120 
|-
|ABySS 
| 322 
| 6421655 
| 19943 
| 40785 
|  111122 
|  0.9789 
| 2 
| 447 
| 21 
|    WINS!
|-
| colspan=&quot;10&quot; | short2 Pseudomonas syringae pathovar syringae B728a non-paired reads(genome: NC_007005.1 reads: era/ERA000095) (400/20)

|-
|EULER-SR 
| 1045 
| 6430705 
| 6153 
| 10580 
|  54053 
|  0.9559 
| 37 
| 567 
| 325 
|-
|Velvet 
| 835 
| 5814502 
| 6963 
| 12563 
|  53912 
|  0.9525 
| 8 
| 103 
| 33 
|-
|Ray 
| 813 
| 5902943 
| 7260 
| 12055 
|  50320 
|  0.9535 
| 5 
| 291 
| 3 
|-
|ABySS 
| 1859 
| 5638003 
| 3032 
| 4725 
|  27486 
|  0.9205 
| 0 
| 44 
| 7 
|-
| colspan=&quot;10&quot; | short3 mycoplasma (genome: nuccore/NC_009497.1, reads: sra/SRA003611) 

|-
|EULER-SR 
| 495 
| 955333 
| 1929 
| 2426 
|  10235 
|  0.9290 
| 6 
| 383 
| 69 
|-
|Velvet 
| 170 
| 842767 
| 4957 
| 8813 
|  20790 
|  0.9653 
| 11 
| 188 
| 11 
|-
|Ray 
| 160 
| 862507 
| 5390 
| 7733 
|  48424 
|  0.9549 
| 1 
| 17 
| 3 
|-
|ABySS 
| 332 
| 826396 
| 2489 
| 3369 
|  17054 
|  0.9435 
| 0 
| 5 
| 2 
|}</text>
    </revision>
  </page>
  <page>
    <title>Main Page</title>
    <id>1</id>
    <revision>
      <id>1</id>
      <timestamp>2008-08-18T17:30:44Z</timestamp>
      <contributor>
        <ip>MediaWiki default</ip>
      </contributor>
      <text xml:space="preserve">&lt;big&gt;'''MediaWiki has been successfully installed.'''&lt;/big&gt;

Consult the [http://meta.wikimedia.org/wiki/Help:Contents User's Guide] for information on using the wiki software.

== Getting started ==
* [http://www.mediawiki.org/wiki/Manual:Configuration_settings Configuration settings list]
* [http://www.mediawiki.org/wiki/Manual:FAQ MediaWiki FAQ]
* [http://lists.wikimedia.org/mailman/listinfo/mediawiki-announce MediaWiki release mailing list]</text>
    </revision>
    <revision>
      <id>3</id>
      <timestamp>2008-08-26T17:13:25Z</timestamp>
      <contributor>
        <ip>MediaWiki default</ip>
      </contributor>
      <text xml:space="preserve">&lt;big&gt;'''MediaWiki has been successfully installed.'''&lt;/big&gt;

Consult the [http://meta.wikimedia.org/wiki/Help:Contents User's Guide] for information on using the wiki software.

== Getting started ==
* [http://www.mediawiki.org/wiki/Manual:Configuration_settings Configuration settings list]
* [http://www.mediawiki.org/wiki/Manual:FAQ MediaWiki FAQ]
* [http://lists.wikimedia.org/mailman/listinfo/mediawiki-announce MediaWiki release mailing list]

[[Image:Smiley.jpg]]</text>
    </revision>
    <revision>
      <id>4</id>
      <timestamp>2008-08-26T17:24:01Z</timestamp>
      <contributor>
        <ip>MediaWiki default</ip>
      </contributor>
      <text xml:space="preserve">&lt;big&gt;'''MediaWiki has been successfully installed.'''&lt;/big&gt;

Consult the [http://meta.wikimedia.org/wiki/Help:Contents User's Guide] for information on using the wiki software.

== Getting started ==
* [http://www.mediawiki.org/wiki/Manual:Configuration_settings Configuration settings list]
* [http://www.mediawiki.org/wiki/Manual:FAQ MediaWiki FAQ]
* [http://lists.wikimedia.org/mailman/listinfo/mediawiki-announce MediaWiki release mailing list]

[[Image:Smiley.jpg]]
[[Image:Wink.jpg]]</text>
    </revision>
    <revision>
      <id>7</id>
      <timestamp>2008-08-26T17:56:08Z</timestamp>
      <contributor>
        <ip>MediaWiki default</ip>
      </contributor>
      <comment>/* Getting started */</comment>
      <text xml:space="preserve">&lt;big&gt;'''MediaWiki has been successfully installed.'''&lt;/big&gt;

Consult the [http://meta.wikimedia.org/wiki/Help:Contents User's Guide] for information on using the wiki software.

== Getting started ==
* [http://www.mediawiki.org/wiki/Manual:Configuration_settings Configuration settings list]
* [http://www.mediawiki.org/wiki/Manual:FAQ MediaWiki FAQ]
* [http://lists.wikimedia.org/mailman/listinfo/mediawiki-announce MediaWiki release mailing list]

* Project Logo
To set your project logo simply click on the following Logo image and replace with your own project PNG image.

[[Image:Logo.png]]</text>
    </revision>
    <revision>
      <id>8</id>
      <timestamp>2008-08-26T18:05:09Z</timestamp>
      <contributor>
        <ip>MediaWiki default</ip>
      </contributor>
      <comment>/* Getting started */</comment>
      <text xml:space="preserve">&lt;big&gt;'''MediaWiki has been successfully installed.'''&lt;/big&gt;

Consult the [http://meta.wikimedia.org/wiki/Help:Contents User's Guide] for information on using the wiki software.

== Getting started ==
* [http://www.mediawiki.org/wiki/Manual:Configuration_settings Configuration settings list]
* [http://www.mediawiki.org/wiki/Manual:FAQ MediaWiki FAQ]
* [http://lists.wikimedia.org/mailman/listinfo/mediawiki-announce MediaWiki release mailing list]

* Project Logo
To set your project logo simply [[Special:Upload&amp;wpDestFile=Logo.png|Upload a new version]] of the following image:
[[Image:Logo.png]]</text>
    </revision>
    <revision>
      <id>9</id>
      <timestamp>2008-08-26T18:05:56Z</timestamp>
      <contributor>
        <ip>MediaWiki default</ip>
      </contributor>
      <comment>/* Getting started */</comment>
      <text xml:space="preserve">&lt;big&gt;'''MediaWiki has been successfully installed.'''&lt;/big&gt;

Consult the [http://meta.wikimedia.org/wiki/Help:Contents User's Guide] for information on using the wiki software.

== Getting started ==
* [http://www.mediawiki.org/wiki/Manual:Configuration_settings Configuration settings list]
* [http://www.mediawiki.org/wiki/Manual:FAQ MediaWiki FAQ]
* [http://lists.wikimedia.org/mailman/listinfo/mediawiki-announce MediaWiki release mailing list]

* Project Logo
To set your project logo simply [[Special:Upload&amp;wpDestFile=Logo.png]] of the following image:
[[Image:Logo.png]]</text>
    </revision>
    <revision>
      <id>10</id>
      <timestamp>2008-08-26T18:08:23Z</timestamp>
      <contributor>
        <ip>MediaWiki default</ip>
      </contributor>
      <comment>/* Getting started */</comment>
      <text xml:space="preserve">&lt;big&gt;'''MediaWiki has been successfully installed.'''&lt;/big&gt;

Consult the [http://meta.wikimedia.org/wiki/Help:Contents User's Guide] for information on using the wiki software.

== Getting started ==
* [http://www.mediawiki.org/wiki/Manual:Configuration_settings Configuration settings list]
* [http://www.mediawiki.org/wiki/Manual:FAQ MediaWiki FAQ]
* [http://lists.wikimedia.org/mailman/listinfo/mediawiki-announce MediaWiki release mailing list]

== Project Logo ==
Click on the following image and '''Upload a new version''' to set a new PNG logo image.
[[Image:Logo.png]]</text>
    </revision>
    <revision>
      <id>11</id>
      <timestamp>2008-08-26T18:09:01Z</timestamp>
      <contributor>
        <ip>MediaWiki default</ip>
      </contributor>
      <comment>/* Project Logo */</comment>
      <text xml:space="preserve">&lt;big&gt;'''MediaWiki has been successfully installed.'''&lt;/big&gt;

Consult the [http://meta.wikimedia.org/wiki/Help:Contents User's Guide] for information on using the wiki software.

== Getting started ==
* [http://www.mediawiki.org/wiki/Manual:Configuration_settings Configuration settings list]
* [http://www.mediawiki.org/wiki/Manual:FAQ MediaWiki FAQ]
* [http://lists.wikimedia.org/mailman/listinfo/mediawiki-announce MediaWiki release mailing list]

== Project Logo ==
Click on the following image and '''Upload a new version''' to set a new PNG logo image.

[[Image:Logo.png]]</text>
    </revision>
    <revision>
      <id>14</id>
      <timestamp>2008-08-26T18:31:56Z</timestamp>
      <contributor>
        <ip>MediaWiki default</ip>
      </contributor>
      <comment>/* Project Logo */</comment>
      <text xml:space="preserve">&lt;big&gt;'''MediaWiki has been successfully installed.'''&lt;/big&gt;

Consult the [http://meta.wikimedia.org/wiki/Help:Contents User's Guide] for information on using the wiki software.

== Getting started ==
* [http://www.mediawiki.org/wiki/Manual:Configuration_settings Configuration settings list]
* [http://www.mediawiki.org/wiki/Manual:FAQ MediaWiki FAQ]
* [http://lists.wikimedia.org/mailman/listinfo/mediawiki-announce MediaWiki release mailing list]

== Project Logo ==
Click on [[Image:Logo.png]] to upload a PNG Logo image.</text>
    </revision>
    <revision>
      <id>18</id>
      <timestamp>2008-08-26T19:57:08Z</timestamp>
      <contributor>
        <ip>MediaWiki default</ip>
      </contributor>
      <text xml:space="preserve">&lt;big&gt;'''MediaWiki has been successfully installed.'''&lt;/big&gt;

Consult the [http://meta.wikimedia.org/wiki/Help:Contents User's Guide] for information on using the wiki software.

== Getting started ==
* [http://www.mediawiki.org/wiki/Manual:Configuration_settings Configuration settings list]
* [http://www.mediawiki.org/wiki/Manual:FAQ MediaWiki FAQ]
* [http://lists.wikimedia.org/mailman/listinfo/mediawiki-announce MediaWiki release mailing list]

== Project Logo ==
Click on the following image to upload a new version of the PNG logo image for your project:

[[Image:MediaWikiSidebarLogo.png]]</text>
    </revision>
    <revision>
      <id>19</id>
      <timestamp>2009-01-04T06:19:38Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Main Page]]&quot; [edit=autoconfirmed:move=autoconfirmed]</comment>
      <text xml:space="preserve">&lt;big&gt;'''MediaWiki has been successfully installed.'''&lt;/big&gt;

Consult the [http://meta.wikimedia.org/wiki/Help:Contents User's Guide] for information on using the wiki software.

== Getting started ==
* [http://www.mediawiki.org/wiki/Manual:Configuration_settings Configuration settings list]
* [http://www.mediawiki.org/wiki/Manual:FAQ MediaWiki FAQ]
* [http://lists.wikimedia.org/mailman/listinfo/mediawiki-announce MediaWiki release mailing list]

== Project Logo ==
Click on the following image to upload a new version of the PNG logo image for your project:

[[Image:MediaWikiSidebarLogo.png]]</text>
    </revision>
    <revision>
      <id>20</id>
      <timestamp>2009-01-04T06:21:21Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ 454 De Novo Assembler]
Author: SÃ©bastien Boisvert

Sourceforge project page
SVN repository
SVN web access
Download source code

DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. 454 De Novo Assembler is an assembler to perform De Novo assembly with new sequencing technologies (i.g. Titanium).

It takes fastq files and generates an assembly. You can use flower to convert sff files to fastq files. In theory, 454 De Novo Assembler can assemble reads from any technology as long as the quality is provided. The algorithm contructs De Bruijn graphs. The word length can be up to 32 nucleotides.

see also Next-Gen Scaffolder

Project Web Hosted by SourceForge.net</text>
    </revision>
    <revision>
      <id>21</id>
      <timestamp>2009-01-04T06:31:44Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ 454 De Novo Assembler]
Author: [http://tinyurl.com/boisvert SÃ©bastien Boisvert]


[http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
[http://sourceforge.net/svn/?group_id=247359 SVN repository]
[http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!
Download source code

DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. 454 De Novo Assembler is an assembler to perform De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ Titanium]).

It takes [http://www.bioperl.org/wiki/FASTQ_sequence_format fastq] files and generates an assembly. You can [http://blog.malde.org/index.php/2008/11/14/454-sequencing-and-parsing-the-sff-binary-format use flower to convert sff files to fastq files]. In theory, 454 De Novo Assembler can assemble reads from any technology as long as the quality is provided. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs]. The word length can be up to 31 nucleotides.

see also [http://scaffolds.sf.net/ Next-Gen Scaffolder]

[http://sourceforge.net/ Project Web Hosted by SourceForge.net]</text>
    </revision>
    <revision>
      <id>22</id>
      <timestamp>2009-01-04T06:32:48Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ 454 De Novo Assembler]
Author: [http://tinyurl.com/boisvert SÃ©bastien Boisvert]


[http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]

[http://sourceforge.net/svn/?group_id=247359 SVN repository]

[http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!

Download source code

DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. 454 De Novo Assembler is an assembler to perform De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ Titanium]).

It takes [http://www.bioperl.org/wiki/FASTQ_sequence_format fastq] files and generates an assembly. You can [http://blog.malde.org/index.php/2008/11/14/454-sequencing-and-parsing-the-sff-binary-format use flower to convert sff files to fastq files]. In theory, 454 De Novo Assembler can assemble reads from any technology as long as the quality is provided. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs]. The word length can be up to 31 nucleotides.

see also [http://scaffolds.sf.net/ Next-Gen Scaffolder]
see [http://dskernel.blogspot.com/2008/12/454-de-novo-assembly-work-n-progress.html my blog] for a tutorial (work in progress)

[http://sourceforge.net/ Project Web Hosted by SourceForge.net]</text>
    </revision>
    <revision>
      <id>23</id>
      <timestamp>2009-01-04T06:33:30Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ 454 De Novo Assembler]
Author: [http://tinyurl.com/boisvert SÃ©bastien Boisvert]


[http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
[http://sourceforge.net/svn/?group_id=247359 SVN repository]
[http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!


DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. 454 De Novo Assembler is an assembler to perform De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ Titanium]).

It takes [http://www.bioperl.org/wiki/FASTQ_sequence_format fastq] files and generates an assembly. You can [http://blog.malde.org/index.php/2008/11/14/454-sequencing-and-parsing-the-sff-binary-format use flower to convert sff files to fastq files]. In theory, 454 De Novo Assembler can assemble reads from any technology as long as the quality is provided. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs]. The word length can be up to 31 nucleotides.

* see also [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* see [http://dskernel.blogspot.com/2008/12/454-de-novo-assembly-work-n-progress.html my blog] for a tutorial (work in progress)

[http://sourceforge.net/ Project Web Hosted by SourceForge.net]</text>
    </revision>
    <revision>
      <id>24</id>
      <timestamp>2009-01-04T06:34:10Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ 454 De Novo Assembler]


DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. 454 De Novo Assembler is an assembler to perform De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ Titanium]).

It takes [http://www.bioperl.org/wiki/FASTQ_sequence_format fastq] files and generates an assembly. You can [http://blog.malde.org/index.php/2008/11/14/454-sequencing-and-parsing-the-sff-binary-format use flower to convert sff files to fastq files]. In theory, 454 De Novo Assembler can assemble reads from any technology as long as the quality is provided. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs]. The word length can be up to 31 nucleotides.

* Author: [http://tinyurl.com/boisvert SÃ©bastien Boisvert]
* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://sourceforge.net/svn/?group_id=247359 SVN repository]
* [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!

* see also [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* see [http://dskernel.blogspot.com/2008/12/454-de-novo-assembly-work-n-progress.html my blog] for a tutorial (work in progress)

[http://sourceforge.net/ Project Web Hosted by SourceForge.net]</text>
    </revision>
    <revision>
      <id>25</id>
      <timestamp>2009-01-04T06:34:37Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. 454 De Novo Assembler is an assembler to perform De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ Titanium]).

It takes [http://www.bioperl.org/wiki/FASTQ_sequence_format fastq] files and generates an assembly. You can [http://blog.malde.org/index.php/2008/11/14/454-sequencing-and-parsing-the-sff-binary-format use flower to convert sff files to fastq files]. In theory, 454 De Novo Assembler can assemble reads from any technology as long as the quality is provided. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs]. The word length can be up to 31 nucleotides.

* Author: [http://tinyurl.com/boisvert SÃ©bastien Boisvert]
* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://sourceforge.net/svn/?group_id=247359 SVN repository]
* [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!
* [http://denovoassembler.sf.net/ 454 De Novo Assembler]
* see also [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* see [http://dskernel.blogspot.com/2008/12/454-de-novo-assembly-work-n-progress.html my blog] for a tutorial (work in progress)

[http://sourceforge.net/ Project Web Hosted by SourceForge.net]</text>
    </revision>
    <revision>
      <id>26</id>
      <timestamp>2009-01-04T06:36:57Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. 454 De Novo Assembler is an assembler that performs De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ Titanium]).

It takes [http://www.bioperl.org/wiki/FASTQ_sequence_format fastq] files and generates an assembly. You can [http://blog.malde.org/index.php/2008/11/14/454-sequencing-and-parsing-the-sff-binary-format use flower to convert sff files to fastq files]. In theory, 454 De Novo Assembler can assemble reads from any technology as long as the data can be converted to [http://www.bioperl.org/wiki/FASTQ_sequence_format fastq]. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs]. The word length can be up to 31 nucleotides.

* [http://seqanswers.com/ Seq Answers]
* Author: [http://tinyurl.com/boisvert SÃ©bastien Boisvert]
* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://sourceforge.net/svn/?group_id=247359 SVN repository]
* [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!
* [http://denovoassembler.sf.net/ 454 De Novo Assembler]
* see also [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* see [http://dskernel.blogspot.com/2008/12/454-de-novo-assembly-work-n-progress.html my blog] for a tutorial (work in progress)
* [http://sourceforge.net/ Project Web Hosted by SourceForge.net]</text>
    </revision>
    <revision>
      <id>27</id>
      <timestamp>2009-01-06T02:16:24Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. De Novo Assembler (dna) is an assembler that performs De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ 454 FLX, 454 Titanium], [http://illumina.com Solexa]).

== How it works? ==

It takes [http://www.bioperl.org/wiki/FASTQ_sequence_format fastq] files or fasta files and generates an assembly. For 454 data, you can [http://blog.malde.org/index.php/2008/11/14/454-sequencing-and-parsing-the-sff-binary-format use flower to convert sff files to fastq files]. In theory,  De Novo Assembler can assemble reads from any technology as long as the data can be converted to the fasta format or the [http://www.bioperl.org/wiki/FASTQ_sequence_format fastq] format. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs]. The word length can be up to 31 nucleotides.

== How to use it ==

With GNU/Linux, download the source, compile it, and use it.
 svn export http://denovoassembler.svn.sourceforge.net/svnroot/denovoassembler/tags/MAGIC-ASSEMBLER-20090105-2
 cd MAGIC-ASSEMBLER-20090105-2
 bash script/build.sh
 ./build/bin/dna -assemblyDirectory Assembly -useCache no -wordSize 25 -minimumCoverage 3 -windowSize 2 -minimumContigSize 500 *.fasta

== Options ==
 -assemblyDirectory   default: Assembly
                      description: the directory where files will be written.
 -useCache            default: no
                      description: use the graph file from a previous assembly in &lt;assemblyDirectory&gt;, if any.
 -wordSize            default: 25 (maximum: 31)
                      description: the length of strings inside vertices, edges will be defined for words of length &lt;wordSize&gt;+1.
 -minimumCoverage     default: 3
                      description: the number of occurances of a word needed to make it solid.
 -minimumContigSize   default: 500
                      description: the minimum length of contigs generated with the graph.
 -windowSize          default: 2
                      description: the window size to assess the quality of paths in the graph, it is the number of edges to be checked.
                                   note that the algorithm removes tips, bubbles, and includes an optimization that 
                                   automatically increases the cutoff to eliminate incorrect edges.


== Downloads ==

The assembler itself is currently a work in progress. Nonetheless, you can download the source [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/tags/MAGIC-ASSEMBLER-20090105-2.tar.gz?view=tar here]. Note that [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/tags/MAGIC-ASSEMBLER-20090105-2.tar.gz?view=tar MAGIC-ASSEMBLER-20090105-2.tar.gz] is a snapshot and may not yet be suitable for production.

Alternatively, you can fetch the trunk.
 svn co https://denovoassembler.svn.sourceforge.net/svnroot/denovoassembler/trunk

== Links ==

* [http://seqanswers.com/ Seq Answers]
* Author: [http://tinyurl.com/boisvert SÃ©bastien Boisvert]
* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://sourceforge.net/svn/?group_id=247359 SVN repository]
* [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!
* [http://denovoassembler.sf.net/ De Novo Assembler]
* see also [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* [http://sourceforge.net/ Project Web Hosted by SourceForge.net]</text>
    </revision>
    <revision>
      <id>28</id>
      <timestamp>2009-01-06T18:22:31Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. De Novo Assembler (dna) is an assembler that performs De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ 454 FLX, 454 Titanium], [http://illumina.com Solexa]).

== How it works? ==

It takes reads generates an assembly. It accepts files in the SFF format, FASTA format, and FASTQ format. In theory,  De Novo Assembler can assemble reads from any technology. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs].

With GNU/Linux, download the source, compile it, and use it.
 svn export http://denovoassembler.svn.sourceforge.net/svnroot/denovoassembler/trunk
 cd trunk
 bash script/build.sh
 ./build/bin/dna -assemblyDirectory Assembly -useCache no -wordSize 25 -minimumCoverage 3 -windowSize 2 -minimumContigSize 500 *.fasta


== Links ==

* [http://seqanswers.com/ Seq Answers]
* Author: [http://tinyurl.com/boisvert SÃ©bastien Boisvert]
* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://sourceforge.net/svn/?group_id=247359 SVN repository]
* [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!
* [http://denovoassembler.sf.net/ De Novo Assembler]
* see also [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* [http://sourceforge.net/ Project Web Hosted by SourceForge.net]</text>
    </revision>
    <revision>
      <id>29</id>
      <timestamp>2009-01-07T05:25:32Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. De Novo Assembler (dna) is an assembler that performs De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ 454 FLX, 454 Titanium], [http://illumina.com Solexa]).

== How it works? ==

It takes reads generates an assembly. It accepts files in the SFF format, FASTA format, and FASTQ format. In theory,  De Novo Assembler can assemble reads from any technology. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs].

With GNU/Linux, download the source, compile it, and use it.
 svn export http://denovoassembler.svn.sourceforge.net/svnroot/denovoassembler/trunk
 cd trunk
 bash scripts/build.sh
 ./build/bin/dna -assemblyDirectory Assembly -useCache no -wordSize 25 -minimumCoverage 3 -windowSize 2 -minimumContigSize 500 *.fasta


== Links ==

* [http://seqanswers.com/ Seq Answers]
* Author: [http://tinyurl.com/boisvert SÃ©bastien Boisvert]
* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://sourceforge.net/svn/?group_id=247359 SVN repository]
* [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!
* [http://denovoassembler.sf.net/ De Novo Assembler]
* see also [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* [http://sourceforge.net/ Project Web Hosted by SourceForge.net]</text>
    </revision>
    <revision>
      <id>30</id>
      <timestamp>2009-01-08T22:57:46Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. De Novo Assembler (dna) is an assembler that performs De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ 454 FLX, 454 Titanium], [http://illumina.com Solexa]).

== How it works? ==

It takes reads generates an assembly. It accepts files in the SFF format, FASTA format, and FASTQ format. In theory,  De Novo Assembler can assemble reads from any technology. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs].

With GNU/Linux, download the source, compile it, and use it.
 svn export http://denovoassembler.svn.sourceforge.net/svnroot/denovoassembler/trunk
 cd trunk
 bash scripts/build.sh
 ./build/bin/dna 



== Project ==

* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://sourceforge.net/svn/?group_id=247359 SVN repository]
* [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!
* [http://denovoassembler.sf.net/ De Novo Assembler]
* [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* [http://sourceforge.net/ Project Web Hosted by SourceForge.net]

== Technologies ==

* [http://454.com/ : 454 Life Sciences, a Roche Company]
* [http://www.illumina.com/pages.ilmn?ID=203 about illumina - technology: illumina sequencing technology - Illumina, Inc.]

== Assemblers ==

* [http://www.ebi.ac.uk/~zerbino/velvet/ Velvet: a sequence assembler for very short reads]
* [http://euler-assembler.ucsd.edu/portal/ EULER Portal | ]</text>
    </revision>
    <revision>
      <id>31</id>
      <timestamp>2009-01-08T22:59:08Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. De Novo Assembler (dna) is an assembler that performs De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ 454 FLX, 454 Titanium], [http://illumina.com Solexa]).

== How it works? ==

It takes reads generates an assembly. It accepts files in the SFF format, FASTA format, and FASTQ format. In theory,  De Novo Assembler can assemble reads from any technology. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs].

With GNU/Linux, download the source, compile it, and use it.
 svn export http://denovoassembler.svn.sourceforge.net/svnroot/denovoassembler/trunk
 cd trunk
 bash scripts/build.sh
 ./build/bin/dna 



== Project ==

* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://sourceforge.net/svn/?group_id=247359 SVN repository]
* [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!
* [http://denovoassembler.sf.net/ De Novo Assembler]
* [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* [http://sourceforge.net/ Project Web Hosted by SourceForge.net]

== Technologies ==

* [http://454.com/ : 454 Life Sciences, a Roche Company]
* [http://www.illumina.com/pages.ilmn?ID=203 about illumina - technology: illumina sequencing technology - Illumina, Inc.]

== Public data ==

* [http://www.ncbi.nlm.nih.gov/Traces/sra News/Events :          Main :           Short Read Archive :           NCBI/NLM/NIH]

== Assemblers ==

* [http://www.ebi.ac.uk/~zerbino/velvet/ Velvet: a sequence assembler for very short reads]
* [http://euler-assembler.ucsd.edu/portal/ EULER Portal | ]</text>
    </revision>
    <revision>
      <id>32</id>
      <timestamp>2009-01-08T23:02:42Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. De Novo Assembler (dna) is an assembler that performs De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ 454 FLX, 454 Titanium], [http://illumina.com Solexa]).

== How it works? ==

It takes reads generates an assembly. It accepts files in the SFF format, FASTA format, and FASTQ format. In theory,  De Novo Assembler can assemble reads from any technology. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs].

With GNU/Linux, download the source, compile it, and use it.
 svn export http://denovoassembler.svn.sourceforge.net/svnroot/denovoassembler/trunk
 cd trunk
 bash scripts/build.sh
 ./build/bin/dna 

== Project ==

* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://sourceforge.net/svn/?group_id=247359 SVN repository]
* [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!
* [http://denovoassembler.sf.net/ De Novo Assembler]
* [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* [http://sourceforge.net/ Project Web Hosted by SourceForge.net]

== Technologies ==

* [http://454.com/ : 454 Life Sciences, a Roche Company]
* [http://www.illumina.com/pages.ilmn?ID=203 about illumina - technology: illumina sequencing technology - Illumina, Inc.]
* [http://www.youtube.com/watch?v=bFNjxKHP8Jc Genome Sequencer FLX System Workflow (youtube)]

== Public data ==

* [http://www.ncbi.nlm.nih.gov/Traces/sra News/Events :          Main :           Short Read Archive :           NCBI/NLM/NIH]
* [http://www.ncbi.nlm.nih.gov/sites/entrez?db=sra SRA Results]
* [ftp://ftp.ncbi.nih.gov/pub/TraceDB/ShortRead/ SRA ftp]

== Assemblers ==

* [http://www.ebi.ac.uk/~zerbino/velvet/ Velvet: a sequence assembler for very short reads]
* [http://euler-assembler.ucsd.edu/portal/ EULER Portal | ]</text>
    </revision>
    <revision>
      <id>33</id>
      <timestamp>2009-01-08T23:09:03Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. De Novo Assembler (dna) is an assembler that performs De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ 454 FLX, 454 Titanium], [http://illumina.com Solexa]).

== How it works? ==

It takes reads generates an assembly. It accepts files in the SFF format, FASTA format, and FASTQ format. In theory,  De Novo Assembler can assemble reads from any technology. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs].

With GNU/Linux, download the source, compile it, and use it.
 svn export http://denovoassembler.svn.sourceforge.net/svnroot/denovoassembler/trunk
 cd trunk
 bash scripts/build.sh
 ./build/bin/dna 

== Project ==

* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://sourceforge.net/svn/?group_id=247359 SVN repository]
* [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!
* [http://denovoassembler.sf.net/ De Novo Assembler]
* [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* [http://sourceforge.net/ Project Web Hosted by SourceForge.net]

== 454 ==

* [http://454.com/ : 454 Life Sciences, a Roche Company]
* [http://sequence.otago.ac.nz/download/GS_FLX_Software_Manual.pdf Genome Sequencer FLX Data Analysis Software Manual December 2007]
* [http://www.youtube.com/watch?v=bFNjxKHP8Jc   Genome Sequencer FLX System Workflow (youtube)]

== Solexa ==

* [http://www.illumina.com/pages.ilmn?ID=203 about illumina - technology: illumina sequencing technology - Illumina, Inc.]

== Public data ==

* [http://www.ncbi.nlm.nih.gov/Traces/sra News/Events :          Main :           Short Read Archive :           NCBI/NLM/NIH]
* [http://www.ncbi.nlm.nih.gov/sites/entrez?db=sra SRA Results]
* [ftp://ftp.ncbi.nih.gov/pub/TraceDB/ShortRead/ SRA ftp]

== Assemblers ==

* [http://www.ebi.ac.uk/~zerbino/velvet/ Velvet: a sequence assembler for very short reads]
* [http://euler-assembler.ucsd.edu/portal/ EULER Portal | ]</text>
    </revision>
    <revision>
      <id>34</id>
      <timestamp>2009-01-21T16:04:16Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. De Novo Assembler (dna) is an assembler that performs De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ 454 FLX, 454 Titanium], [http://illumina.com Solexa]).

== How it works? ==

It takes reads generates an assembly. It accepts files in the SFF format, FASTA format, and FASTQ format. In theory,  De Novo Assembler can assemble reads from any technology. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs].

The code is in development.

== Project ==

* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://sourceforge.net/svn/?group_id=247359 SVN repository]
* [http://denovoassembler.svn.sourceforge.net/viewvc/denovoassembler/ SVN web access] yay!
* [http://denovoassembler.sf.net/ De Novo Assembler]
* [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* [http://sourceforge.net/ Project Web Hosted by SourceForge.net]

== 454 ==

* [http://454.com/ : 454 Life Sciences, a Roche Company]
* [http://sequence.otago.ac.nz/download/GS_FLX_Software_Manual.pdf Genome Sequencer FLX Data Analysis Software Manual December 2007]
* [http://www.youtube.com/watch?v=bFNjxKHP8Jc   Genome Sequencer FLX System Workflow (youtube)]

== Solexa ==

* [http://www.illumina.com/pages.ilmn?ID=203 about illumina - technology: illumina sequencing technology - Illumina, Inc.]

== Public data ==

* [http://www.ncbi.nlm.nih.gov/Traces/sra News/Events :          Main :           Short Read Archive :           NCBI/NLM/NIH]
* [http://www.ncbi.nlm.nih.gov/sites/entrez?db=sra SRA Results]
* [ftp://ftp.ncbi.nih.gov/pub/TraceDB/ShortRead/ SRA ftp]

== Assemblers ==

* [http://www.ebi.ac.uk/~zerbino/velvet/ Velvet: a sequence assembler for very short reads]
* [http://euler-assembler.ucsd.edu/portal/ EULER Portal | ]</text>
    </revision>
    <revision>
      <id>35</id>
      <timestamp>2009-01-21T16:04:31Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. De Novo Assembler (dna) is an assembler that performs De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ 454 FLX, 454 Titanium], [http://illumina.com Solexa]).

== How it works? ==

It takes reads generates an assembly. It accepts files in the SFF format, FASTA format, and FASTQ format. In theory,  De Novo Assembler can assemble reads from any technology. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs].

The code is in development.

== Project ==

* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://denovoassembler.sf.net/ De Novo Assembler]
* [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* [http://sourceforge.net/ Project Web Hosted by SourceForge.net]

== 454 ==

* [http://454.com/ : 454 Life Sciences, a Roche Company]
* [http://sequence.otago.ac.nz/download/GS_FLX_Software_Manual.pdf Genome Sequencer FLX Data Analysis Software Manual December 2007]
* [http://www.youtube.com/watch?v=bFNjxKHP8Jc   Genome Sequencer FLX System Workflow (youtube)]

== Solexa ==

* [http://www.illumina.com/pages.ilmn?ID=203 about illumina - technology: illumina sequencing technology - Illumina, Inc.]

== Public data ==

* [http://www.ncbi.nlm.nih.gov/Traces/sra News/Events :          Main :           Short Read Archive :           NCBI/NLM/NIH]
* [http://www.ncbi.nlm.nih.gov/sites/entrez?db=sra SRA Results]
* [ftp://ftp.ncbi.nih.gov/pub/TraceDB/ShortRead/ SRA ftp]

== Assemblers ==

* [http://www.ebi.ac.uk/~zerbino/velvet/ Velvet: a sequence assembler for very short reads]
* [http://euler-assembler.ucsd.edu/portal/ EULER Portal | ]</text>
    </revision>
    <revision>
      <id>36</id>
      <timestamp>2009-03-11T16:07:50Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">DNA assembly is now a challenge because of the overwhelming amount of data produced by sequencing facilities. De Novo Assembler (dna) is an assembler that performs De Novo assembly with [http://seqanswers.com/ new sequencing technologies] (i.g. [http://454.com/ 454 FLX, 454 Titanium], [http://illumina.com Solexa]).

== How it works? ==

It takes reads generates an assembly. It accepts files in the SFF format, FASTA format, and FASTQ format. In theory,  De Novo Assembler can assemble reads from any technology. The algorithm contructs [http://en.wikipedia.org/wiki/De_Bruijn_graph de Bruijn graphs].

The code is in development.

== Project ==

* [http://sourceforge.net/projects/denovoassembler/ Sourceforge project page]
* [http://denovoassembler.sf.net/ De Novo Assembler]
* [http://scaffolds.sf.net/ Next-Gen Scaffolder]
* [http://sourceforge.net/ Project Web Hosted by SourceForge.net]

== 454 ==

* [http://454.com/ : 454 Life Sciences, a Roche Company]
* [http://sequence.otago.ac.nz/download/GS_FLX_Software_Manual.pdf Genome Sequencer FLX Data Analysis Software Manual December 2007]
* [http://www.youtube.com/watch?v=bFNjxKHP8Jc   Genome Sequencer FLX System Workflow (youtube)]

== Solexa ==

* [http://www.illumina.com/pages.ilmn?ID=203 about illumina - technology: illumina sequencing technology - Illumina, Inc.]

== Public data ==

* [http://www.ncbi.nlm.nih.gov/Traces/sra News/Events :          Main :           Short Read Archive :           NCBI/NLM/NIH]
* [http://www.ncbi.nlm.nih.gov/sites/entrez?db=sra SRA Results]
* [ftp://ftp.ncbi.nih.gov/pub/TraceDB/ShortRead/ SRA ftp]

== Assemblers ==

see http://en.wikipedia.org/wiki/Sequence_assembly#Available_assemblers</text>
    </revision>
    <revision>
      <id>37</id>
      <timestamp>2010-02-11T16:30:38Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">* &lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review.

* &lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing Open-MPI.</text>
    </revision>
    <revision>
      <id>38</id>
      <timestamp>2010-02-11T16:32:34Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">* &lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoid both 454's homopolymers and Illumina's short read length. However, it runs only on one process.

* &lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing Open-MPI. The code is very different because of the heavy communication between MPI processes.</text>
    </revision>
    <revision>
      <id>39</id>
      <timestamp>2010-02-11T16:33:55Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">* &lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoid both 454's homopolymers and Illumina's short read length. However, it runs only on one process.
[Download OpenAssembler https://sourceforge.net/projects/denovoassembler/files/]

* &lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing Open-MPI. The code is very different because of the heavy communication between MPI processes.
[Download OpenAssembler https://sourceforge.net/projects/denovoassembler/files/]</text>
    </revision>
    <revision>
      <id>40</id>
      <timestamp>2010-02-11T16:34:08Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">* &lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoid both 454's homopolymers and Illumina's short read length. However, it runs only on one process.
[Download OpenAssembler https://sourceforge.net/projects/denovoassembler/files/]

* &lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing Open-MPI. The code is very different because of the heavy communication between MPI processes.
[Download Ray https://sourceforge.net/projects/denovoassembler/files/]</text>
    </revision>
    <revision>
      <id>41</id>
      <timestamp>2010-02-11T16:36:17Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">* &lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoid both 454's homopolymers and Illumina's short read length. However, it runs only on one process.
[[Download OpenAssembler https://sourceforge.net/projects/denovoassembler/files/]]

* &lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing Open-MPI. The code is very different because of the heavy communication between MPI processes.
[[Download Ray https://sourceforge.net/projects/denovoassembler/files/]]</text>
    </revision>
    <revision>
      <id>42</id>
      <timestamp>2010-02-11T16:37:07Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">* &lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoid both 454's homopolymers and Illumina's short read length. However, it runs only on one process.
[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler]

* &lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing Open-MPI. The code is very different because of the heavy communication between MPI processes.
[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]</text>
    </revision>
    <revision>
      <id>43</id>
      <timestamp>2010-02-11T16:38:52Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">* &lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler]

* &lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing Open-MPI. The code is very different because of the heavy communication between MPI processes.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]</text>
    </revision>
    <revision>
      <id>44</id>
      <timestamp>2010-03-04T15:45:43Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">* &lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler]

* &lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. It currently works well with [http://www.open-mpi.org/ Open-MPI]. It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

Ray is developed by SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette.

How to cite us:

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]</text>
    </revision>
    <revision>
      <id>45</id>
      <timestamp>2010-03-04T15:49:16Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler]

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. It currently works well with [http://www.open-mpi.org/ Open-MPI]. It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

Ray is developed by SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette.

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]</text>
    </revision>
    <revision>
      <id>46</id>
      <timestamp>2010-03-04T15:53:35Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler]

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 


=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a face condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

Ray is developed by SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette.

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]

== Funding==

We are very thankful to the CLUMEQ consortium for access to the</text>
    </revision>
    <revision>
      <id>47</id>
      <timestamp>2010-03-04T15:54:05Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Manuscript */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 


=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a face condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

Ray is developed by SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette.

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]

== Funding==

We are very thankful to the CLUMEQ consortium for access to the</text>
    </revision>
    <revision>
      <id>48</id>
      <timestamp>2010-03-04T15:56:42Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* supports paired-end reads
* runs on one and more MPI processes 

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a face condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

Ray is developed by SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette.

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]

== Funding==

We are very thankful to the CLUMEQ consortium for access to the</text>
    </revision>
    <revision>
      <id>49</id>
      <timestamp>2010-03-04T15:58:47Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Note on MPI implementation */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* supports paired-end reads
* runs on one and more MPI processes 

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a face condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette]

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]

== Funding==

We are very thankful to the CLUMEQ consortium for access to the</text>
    </revision>
    <revision>
      <id>50</id>
      <timestamp>2010-03-04T16:00:34Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Features */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a face condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette]

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]

== Funding==

We are very thankful to the CLUMEQ consortium for access to the</text>
    </revision>
    <revision>
      <id>51</id>
      <timestamp>2010-03-04T16:03:05Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Features */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI process,
* is tested with Open-MPI,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a face condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette]

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]

== Funding==

We are very thankful to the CLUMEQ consortium for access to the</text>
    </revision>
    <revision>
      <id>52</id>
      <timestamp>2010-03-04T16:04:03Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Features */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI process,
* is tested with Open-MPI,
* use bit shifts and other optimizations,
* support a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a face condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette]

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]

== Funding==

We are very thankful to the CLUMEQ consortium for access to the</text>
    </revision>
    <revision>
      <id>53</id>
      <timestamp>2010-03-04T16:04:59Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Features */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with Open-MPI,
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a face condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette]

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]

== Funding==

We are very thankful to the CLUMEQ consortium for access to the</text>
    </revision>
    <revision>
      <id>54</id>
      <timestamp>2010-03-04T16:05:37Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Note on MPI implementation */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with Open-MPI,
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette]

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]

== Funding==

We are very thankful to the CLUMEQ consortium for access to the</text>
    </revision>
    <revision>
      <id>55</id>
      <timestamp>2010-03-04T16:06:47Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Authors */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with Open-MPI,
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]

== Funding==

We are very thankful to the CLUMEQ consortium for access to the</text>
    </revision>
    <revision>
      <id>56</id>
      <timestamp>2010-03-04T16:07:37Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* How to cite us */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with Open-MPI,
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray]

== Funding==

We are very thankful to the CLUMEQ consortium for access to the</text>
    </revision>
    <revision>
      <id>57</id>
      <timestamp>2010-03-04T16:08:19Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* How to cite us */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with Open-MPI,
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

== Funding==

We are very thankful to the CLUMEQ consortium for access to the</text>
    </revision>
    <revision>
      <id>58</id>
      <timestamp>2010-03-04T16:13:43Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Funding */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with Open-MPI,
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

== Funding==

We are very thankful to the CLUMEQ consortium for access to [colosse.clumeq.ca http://www.top500.org/site/systems/3088]. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>59</id>
      <timestamp>2010-03-04T16:14:57Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Funding */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with Open-MPI,
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

== Funding==

We are very thankful to the CLUMEQ consortium for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>60</id>
      <timestamp>2010-03-04T16:16:21Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Features */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing MPI. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

== Funding==

We are very thankful to the CLUMEQ consortium for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>61</id>
      <timestamp>2010-03-04T16:16:50Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to processor defective design rather than a defect in Open-MPI.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

== Funding==

We are very thankful to the CLUMEQ consortium for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>62</id>
      <timestamp>2010-03-04T16:18:38Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Note on MPI implementation */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know what to do!

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with MPICH2. We think that this failure is putative to a bug in MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

== Funding==

We are very thankful to the CLUMEQ consortium for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>63</id>
      <timestamp>2010-03-04T16:20:00Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Note on MPI implementation */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know what to do!

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with [http://www.mcs.anl.gov/research/projects/mpich2/ MPICH2]. We think that this failure is putative to a bug in [http://www.mcs.anl.gov/research/projects/mpich2/ MPICH2]. Ray will presumably not work too with [http://mvapich.cse.ohio-state.edu/ MVAPICH], which is based on MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

== Funding==

We are very thankful to the CLUMEQ consortium for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>64</id>
      <timestamp>2010-03-04T16:21:36Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Note on MPI implementation */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with [http://www.mcs.anl.gov/research/projects/mpich2/ MPICH2]. We think that this failure is putative to a bug in [http://www.mcs.anl.gov/research/projects/mpich2/ MPICH2]. Ray will presumably not work too with [http://mvapich.cse.ohio-state.edu/ MVAPICH], which is based on MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

== Funding==

We are very thankful to the CLUMEQ consortium for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>65</id>
      <timestamp>2010-03-04T16:22:48Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Ray: a massively parallel MPI-based approach to de Bruijn assembly with mixed technologies */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Note on MPI implementation === 

It currently works well with [http://www.open-mpi.org/ Open-MPI]. 

You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta 

It does not work with [http://www.mcs.anl.gov/research/projects/mpich2/ MPICH2]. We think that this failure is putative to a bug in [http://www.mcs.anl.gov/research/projects/mpich2/ MPICH2]. Ray will presumably not work too with [http://mvapich.cse.ohio-state.edu/ MVAPICH], which is based on MPICH2.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

== Funding==

We are very thankful to the CLUMEQ consortium for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>66</id>
      <timestamp>2010-03-04T16:23:55Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Note on MPI implementation */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

== Funding==

We are very thankful to the CLUMEQ consortium for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>67</id>
      <timestamp>2010-03-04T16:24:29Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Funding */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computations across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

== Funding==

We are very thankful to the [https://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>68</id>
      <timestamp>2010-03-04T16:28:48Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Features */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

== Funding==

We are very thankful to the [https://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>69</id>
      <timestamp>2010-03-04T16:37:09Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Description ===

Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk.

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.



=== Download Ray! ===


[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)


=== Installation ===

Open the Makefile and provide the path to mpic++ (change MPICC).

=== Availability ===

* http://denovoassembler.sourceforge.net/
* GPL version 3

=== Example of machines file ===

RayMachinesFile.txt


=== Example of input files === 

RayInputTemplate.txt

=== Example of commands ===

 mpirun -np 1 -machinefile RayMachinesFile.txt input.txt  # 1 cpu only

 mpirun -np 1024  -machinefile RayMachinesFile.txt input.txt  # 1024 cpu

 mpirun -np 4  -machinefile RayMachinesFile.txt input.txt  # quad-core

== Funding==

We are very thankful to the [https://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>70</id>
      <timestamp>2010-03-04T16:38:04Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Example of commands */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Description ===

Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk.

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.



=== Download Ray! ===


[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)


=== Installation ===

Open the Makefile and provide the path to mpic++ (change MPICC).

=== Availability ===

* http://denovoassembler.sourceforge.net/
* GPL version 3

=== Example of machines file ===

RayMachinesFile.txt


=== Example of input files === 

RayInputTemplate.txt

=== Example of commands ===

 mpirun -np 1 -machinefile RayMachinesFile.txt input.txt  # 1 cpu only

 mpirun -np 1024  -machinefile RayMachinesFile.txt input.txt  # 1024 cpu

 mpirun -np 4  -machinefile RayMachinesFile.txt input.txt  # quad-core

=== Running Ray with Sun Grid Engine (with qsub)===

 see HumanChromosome1-qsub.sh

== Funding==

We are very thankful to the [https://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>71</id>
      <timestamp>2010-03-04T16:38:48Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Running Ray with Sun Grid Engine (with qsub) */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Description ===

Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk.

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.



=== Download Ray! ===


[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)


=== Installation ===

Open the Makefile and provide the path to mpic++ (change MPICC).

=== Availability ===

* http://denovoassembler.sourceforge.net/
* GPL version 3

=== Example of machines file ===

RayMachinesFile.txt


=== Example of input files === 

RayInputTemplate.txt

=== Example of commands ===

 mpirun -np 1 -machinefile RayMachinesFile.txt input.txt  # 1 cpu only

 mpirun -np 1024  -machinefile RayMachinesFile.txt input.txt  # 1024 cpu

 mpirun -np 4  -machinefile RayMachinesFile.txt input.txt  # quad-core

=== Running Ray with Sun Grid Engine (with qsub)===

 see HumanChromosome1-qsub.sh

=== Limitations ===

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
Ray is distributed with the GPLv3 license (see gpl-3.txt).

=== Note on MPI implementation ===

It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta

== Funding==

We are very thankful to the [https://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>72</id>
      <timestamp>2010-03-04T16:39:33Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Installation */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Description ===

Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk.

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.



=== Download Ray! ===


[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)


=== Installation ===

Open the Makefile and provide the path to mpic++ (change MPICC). Then, type make.

=== Availability ===

* http://denovoassembler.sourceforge.net/
* GPL version 3

=== Example of machines file ===

RayMachinesFile.txt


=== Example of input files === 

RayInputTemplate.txt

=== Example of commands ===

 mpirun -np 1 -machinefile RayMachinesFile.txt input.txt  # 1 cpu only

 mpirun -np 1024  -machinefile RayMachinesFile.txt input.txt  # 1024 cpu

 mpirun -np 4  -machinefile RayMachinesFile.txt input.txt  # quad-core

=== Running Ray with Sun Grid Engine (with qsub)===

 see HumanChromosome1-qsub.sh

=== Limitations ===

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
Ray is distributed with the GPLv3 license (see gpl-3.txt).

=== Note on MPI implementation ===

It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta

== Funding==

We are very thankful to the [https://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>73</id>
      <timestamp>2010-03-04T16:40:14Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Example of machines file */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Description ===

Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk.

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.



=== Download Ray! ===


[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)


=== Installation ===

Open the Makefile and provide the path to mpic++ (change MPICC). Then, type make.

=== Availability ===

* http://denovoassembler.sourceforge.net/
* GPL version 3

=== Example of machines file ===

RayMachinesFile.txt

=== Example of input files === 

RayInputTemplate.txt

=== Example of commands ===

 mpirun -np 1 -machinefile RayMachinesFile.txt input.txt  # 1 cpu only

 mpirun -np 1024  -machinefile RayMachinesFile.txt input.txt  # 1024 cpu

 mpirun -np 4  -machinefile RayMachinesFile.txt input.txt  # quad-core

=== Running Ray with Sun Grid Engine (with qsub)===

 see HumanChromosome1-qsub.sh

=== Limitations ===

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
Ray is distributed with the GPLv3 license (see gpl-3.txt).

=== Note on MPI implementation ===

It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta

== Funding==

We are very thankful to the [https://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>74</id>
      <timestamp>2010-03-04T16:41:25Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Running Ray with Sun Grid Engine (with qsub) */</comment>
      <text xml:space="preserve">== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)

== Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies ==

&lt;b&gt;Ray&lt;/b&gt; is a parallel version utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. The code is very different because of the heavy communication between MPI processes.

Our team started developing Ray on 2010-01-21 10:41:09 -0500. 

=== Description ===

Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk.

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== Authors ===

Ray is developed by [http://boisvert.info/ SÃ©bastien Boisvert], [http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil], and [http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette].

=== How to cite us ===

SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette. Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. http://denovoassembler.sf.net/, 2010.



=== Download Ray! ===


[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)


=== Installation ===

Open the Makefile and provide the path to mpic++ (change MPICC). Then, type make.

=== Availability ===

* http://denovoassembler.sourceforge.net/
* GPL version 3

=== Example of machines file ===

RayMachinesFile.txt

=== Example of input files === 

RayInputTemplate.txt

=== Example of commands ===

 mpirun -np 1 -machinefile RayMachinesFile.txt input.txt  # 1 cpu only

 mpirun -np 1024  -machinefile RayMachinesFile.txt input.txt  # 1024 cpu

 mpirun -np 4  -machinefile RayMachinesFile.txt input.txt  # quad-core

=== Limitations ===

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
Ray is distributed with the GPLv3 license (see gpl-3.txt).

=== Note on MPI implementation ===

It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta

== Funding==

We are very thankful to the [https://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. SÃ©bastien Boisvert has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
Jacques Corbeil is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
FranÃ§ois Laviolette is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada].</text>
    </revision>
    <revision>
      <id>75</id>
      <timestamp>2010-03-04T16:43:03Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>Blanked the page</comment>
      <text xml:space="preserve" />
    </revision>
    <revision>
      <id>76</id>
      <timestamp>2010-03-04T16:56:12Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">== Acknowledgments ==

We are very thankful to the [https://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. We thank [https://sourceforge.net/ SourceForge] for the project hosting.

== Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies ==

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk.

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== How to cite us ===

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

=== Installation ===

==== Download Ray! ====

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

==== Compilation ====

 tar -xjf Ray-0.0.3.tar.bz2
 cd Ray-0.0.3
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

==== Example of input files ==== 

RayInputTemplate.txt

==== Examples of commands ====

 mpirun -np 1 -machinefile RayMachinesFile.txt input.txt  # 1 cpu only

 mpirun -np 4  -machinefile RayMachinesFile.txt input.txt  # quad-core

 mpirun -np 1024  -machinefile RayMachinesFile.txt input.txt  # 1024 cpu

=== Limitations ===

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.

It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta

== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)</text>
    </revision>
    <revision>
      <id>77</id>
      <timestamp>2010-03-04T17:09:39Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">== Acknowledgments ==

We are very thankful to the [https://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. We thank [https://sourceforge.net/ SourceForge] for the project hosting.

== Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies ==

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk.

=== Features ===

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

=== How to cite us ===

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

=== Installation ===

==== Download Ray! ====

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

==== Compilation ====

 tar -xjf Ray-0.0.3.tar.bz2
 cd Ray-0.0.3
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

==== Example of input files ==== 

RayInputTemplate.txt

==== Examples of commands ====

 mpirun -np 1 -machinefile RayMachinesFile.txt input.txt  # 1 cpu only

 mpirun -np 4  -machinefile RayMachinesFile.txt input.txt  # quad-core

 mpirun -np 1024  -machinefile RayMachinesFile.txt input.txt  # 1024 cpu

==== Community ====

* Mailing list: denovoassembler-users &lt;AT&gt; lists &lt;DOT&gt; sourceforge &lt;DOT&gt; net ([http://sourceforge.net/mailarchive/forum.php?forum_name=denovoassembler-users archives])

=== Limitations ===

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.

It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta

== OpenAssembler: assembling genome with mixed sequencing technologies ==

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)</text>
    </revision>
    <revision>
      <id>78</id>
      <timestamp>2010-03-04T17:11:47Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">= Acknowledgments =

We are very thankful to the [https://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. We thank [https://sourceforge.net/ SourceForge] for the project hosting.

= Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk.

== Features ==

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

== How to cite us ==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==

=== Download Ray! ===

[https://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

=== Compilation ===

 tar -xjf Ray-0.0.3.tar.bz2
 cd Ray-0.0.3
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

=== Example of input files === 

RayInputTemplate.txt

=== Examples of commands ===

 mpirun -np 1 -machinefile RayMachinesFile.txt input.txt  # 1 cpu only

 mpirun -np 4  -machinefile RayMachinesFile.txt input.txt  # quad-core

 mpirun -np 1024  -machinefile RayMachinesFile.txt input.txt  # 1024 cpu

== Community ==

* Mailing list: denovoassembler-users &lt;AT&gt; lists &lt;DOT&gt; sourceforge &lt;DOT&gt; net ([http://sourceforge.net/mailarchive/forum.php?forum_name=denovoassembler-users archives])

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.

It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta



= OpenAssembler: assembling genome with mixed sequencing technologies =

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[https://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)</text>
    </revision>
    <revision>
      <id>79</id>
      <timestamp>2010-03-04T17:14:17Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">= Acknowledgments =

We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation]. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. We thank [http://sourceforge.net/ SourceForge] for the project hosting.

= Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk.

== Features ==

Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

== How to cite us ==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==

=== Download Ray! ===

[http://sourceforge.net/projects/denovoassembler/files/ Download Ray] (version 0.0.3 will be available around 10 March 2010)

=== Compilation ===

 tar -xjf Ray-0.0.3.tar.bz2
 cd Ray-0.0.3
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

=== Example of input files === 

RayInputTemplate.txt

=== Examples of commands ===

 mpirun -np 1 -machinefile RayMachinesFile.txt input.txt  # 1 cpu only

 mpirun -np 4  -machinefile RayMachinesFile.txt input.txt  # quad-core

 mpirun -np 1024  -machinefile RayMachinesFile.txt input.txt  # 1024 cpu

== Community ==

* Mailing list: denovoassembler-users &lt;AT&gt; lists &lt;DOT&gt; sourceforge &lt;DOT&gt; net ([http://sourceforge.net/mailarchive/forum.php?forum_name=denovoassembler-users archives])

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.

It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta



= OpenAssembler: assembling genome with mixed sequencing technologies =

&lt;b&gt;OpenAssembler&lt;/b&gt; assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== Manuscript ===

We submitted a manuscript on 15 October 2009. The source code will be available upon acceptance.

[http://sourceforge.net/projects/denovoassembler/files/ Download OpenAssembler] (not there yet, sorry)</text>
    </revision>
    <revision>
      <id>80</id>
      <timestamp>2010-03-05T23:42:29Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. Ray can assemble reads obtained with a mix of sequencing technologies too!


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]



= Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk. Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes their read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Examples:

 LoadSingleEndReads 1.fasta
 LoadSingleEndReads 2.fastq
 LoadSingleEndReads UIJD.sff
 LoadPairedEndReads 908_1.fastq 908_fastq 215 30
 LoadPairedEndReads large_l.fasta large_r.fasta 2000 200


Ray writes contigs to Contigs.fasta.

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>81</id>
      <timestamp>2010-03-06T01:51:21Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Running Ray */</comment>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. Ray can assemble reads obtained with a mix of sequencing technologies too!


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]



= Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk. Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach to de Bruijn genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Examples:

 LoadSingleEndReads 1.fasta
 LoadSingleEndReads 2.fastq
 LoadSingleEndReads UIJD.sff
 LoadPairedEndReads 908_1.fastq 908_fastq 215 30
 LoadPairedEndReads large_l.fasta large_r.fasta 2000 200


Ray writes contigs to Contigs.fasta.

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>82</id>
      <timestamp>2010-03-10T02:25:14Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. Ray can assemble reads obtained with a mix of sequencing technologies too!


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]



= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk. Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Examples:

 LoadSingleEndReads 1.fasta
 LoadSingleEndReads 2.fastq
 LoadSingleEndReads UIJD.sff
 LoadPairedEndReads 908_1.fastq 908_fastq 215 30
 LoadPairedEndReads large_l.fasta large_r.fasta 2000 200


Ray writes contigs to Contigs.fasta.

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray sequences.fasta

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>83</id>
      <timestamp>2010-03-11T13:52:09Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Limitations */</comment>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. Ray can assemble reads obtained with a mix of sequencing technologies too!


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]



= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++. It is tested with OpenMPI and g++ on Linux 2.6.
Only the master rank needs to access the files on disk. Ray

* is massively parallel,
* supports the mixing of sequencing technologies, as long as the error incorporation is random,
* supports paired-end reads,
* does not write pesky intermediate large binary files,
* is licensed with the [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3],
* is implemented in c++,
* distributes computation across MPI processes,
* distributes data across MPI processes,
* is tested with [http://open-mpi.org/ Open-MPI],
* runs on [http://www.linux.com/ GNU/Linux],
* uses bit shifts and other optimizations,
* supports a vertex size up to 31,
* uses splay trees, and
* runs on one and more MPI processes.

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Examples:

 LoadSingleEndReads 1.fasta
 LoadSingleEndReads 2.fastq
 LoadSingleEndReads UIJD.sff
 LoadPairedEndReads 908_1.fastq 908_fastq 215 30
 LoadPairedEndReads large_l.fasta large_r.fasta 2000 200


Ray writes contigs to Contigs.fasta.

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray template.ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>84</id>
      <timestamp>2010-03-13T01:02:05Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads

== Supported file formats ==

* Fasta with qualities (&quot;fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Other features ==

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==


=== Requirements ===

* make
* g++
* openmpi (1.3.4 or 1.4.1)
* sequence data ;)
* Any GNU/Linux flavor will do.

=== Tested platforms ===

* Fedora
* CentOS
* Ubuntu

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Contigs.fasta.

== Examples ==

=== SRA001125 ===

* Technology: Illumina paired-end reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray template.ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>85</id>
      <timestamp>2010-03-23T02:36:24Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Examples */</comment>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads

== Supported file formats ==

* Fasta with qualities (&quot;fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Other features ==

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==


=== Requirements ===

* make
* g++
* openmpi (1.3.4 or 1.4.1)
* sequence data ;)
* Any GNU/Linux flavor will do.

=== Tested platforms ===

* Fedora
* CentOS
* Ubuntu

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Contigs.fasta.

== Examples ==

=== SRA001125: Illumina paired reads ===

* Technology: Illumina paired-end reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna


=== SRA001125: Illumina non-paired reads ===

* Technology: Illumina paired-end reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray template.ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>86</id>
      <timestamp>2010-03-23T02:44:28Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* SRA001125: Illumina non-paired reads */</comment>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads

== Supported file formats ==

* Fasta with qualities (&quot;fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Other features ==

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==


=== Requirements ===

* make
* g++
* openmpi (1.3.4 or 1.4.1)
* sequence data ;)
* Any GNU/Linux flavor will do.

=== Tested platforms ===

* Fedora
* CentOS
* Ubuntu

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Contigs.fasta.

== Examples ==

=== SRA001125: Illumina paired reads ===

* Technology: Illumina paired-end reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna


=== SRA001125: Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== SRA003611: Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Template.ray
 LoadSingleEndReads ./Illumina/SRR006332.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference

=== SRA003611: Illumina and Roche 454 reads ===

* Technology: Illumina reads and Roche 454

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Template.ray
 LoadSingleEndReads ./Illumina/SRR006332.fastq
 LoadSingleEndReads ./Roche454/SRR006330.fastq
 LoadSingleEndReads ./Roche454/SRR006465_1.fastq
 LoadSingleEndReads ./Roche454/SRR006465_2.fastq
 LoadSingleEndReads ./Roche454/SRR006465.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray template.ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>87</id>
      <timestamp>2010-03-23T02:46:16Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Examples */</comment>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads

== Supported file formats ==

* Fasta with qualities (&quot;fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Other features ==

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==


=== Requirements ===

* make
* g++
* openmpi (1.3.4 or 1.4.1)
* sequence data ;)
* Any GNU/Linux flavor will do.

=== Tested platforms ===

* Fedora
* CentOS
* Ubuntu

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Contigs.fasta.

== Examples ==

=== SRA001125: Illumina paired reads ===

* Technology: Illumina paired-end reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna


=== SRA001125: Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== SRA003611: Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Template.ray
 LoadSingleEndReads ./Illumina/SRR006332.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== SRA003611: Illumina and Roche 454 reads ===

* Technology: Illumina reads and Roche 454

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Template.ray
 LoadSingleEndReads ./Illumina/SRR006332.fastq
 LoadSingleEndReads ./Roche454/SRR006330.fastq
 LoadSingleEndReads ./Roche454/SRR006465_1.fastq
 LoadSingleEndReads ./Roche454/SRR006465_2.fastq
 LoadSingleEndReads ./Roche454/SRR006465.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray template.ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>88</id>
      <timestamp>2010-03-23T02:47:16Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* SRA003611: Illumina reads */</comment>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads

== Supported file formats ==

* Fasta with qualities (&quot;fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Other features ==

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==


=== Requirements ===

* make
* g++
* openmpi (1.3.4 or 1.4.1)
* sequence data ;)
* Any GNU/Linux flavor will do.

=== Tested platforms ===

* Fedora
* CentOS
* Ubuntu

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Contigs.fasta.

== Examples ==

=== SRA001125: Illumina paired reads ===

* Technology: Illumina paired-end reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna


=== SRA001125: Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== SRA003611: Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== SRA003611: Illumina and Roche 454 reads ===

* Technology: Illumina reads and Roche 454

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Template.ray
 LoadSingleEndReads ./Illumina/SRR006332.fastq
 LoadSingleEndReads ./Roche454/SRR006330.fastq
 LoadSingleEndReads ./Roche454/SRR006465_1.fastq
 LoadSingleEndReads ./Roche454/SRR006465_2.fastq
 LoadSingleEndReads ./Roche454/SRR006465.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray template.ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>89</id>
      <timestamp>2010-03-23T02:47:52Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* SRA003611: Illumina and Roche 454 reads */</comment>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads

== Supported file formats ==

* Fasta with qualities (&quot;fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Other features ==

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==


=== Requirements ===

* make
* g++
* openmpi (1.3.4 or 1.4.1)
* sequence data ;)
* Any GNU/Linux flavor will do.

=== Tested platforms ===

* Fedora
* CentOS
* Ubuntu

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Contigs.fasta.

== Examples ==

=== SRA001125: Illumina paired reads ===

* Technology: Illumina paired-end reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna


=== SRA001125: Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== SRA003611: Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== SRA003611: Illumina and Roche 454 reads ===

* Technology: Illumina reads and Roche 454

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq
 LoadSingleEndReads SRR006330.fastq
 LoadSingleEndReads SRR006465_1.fastq
 LoadSingleEndReads SRR006465_2.fastq
 LoadSingleEndReads SRR006465.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray template.ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>90</id>
      <timestamp>2010-03-23T20:16:28Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Examples */</comment>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads

== Supported file formats ==

* Fasta with qualities (&quot;fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Other features ==

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==


=== Requirements ===

* make
* g++
* openmpi (1.3.4 or 1.4.1)
* sequence data ;)
* Any GNU/Linux flavor will do.

=== Tested platforms ===

* Fedora
* CentOS
* Ubuntu

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Contigs.fasta.

== Examples ==

=== E. coli MG1655 with Illumina paired-end reads ===

* Technology: Illumina paired-end reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna


=== E. coli MG1655 with Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Technology: Illumina reads and Roche 454

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq
 LoadSingleEndReads SRR006330.fastq
 LoadSingleEndReads SRR006465_1.fastq
 LoadSingleEndReads SRR006465_2.fastq
 LoadSingleEndReads SRR006465.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006331.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray template.ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>91</id>
      <timestamp>2010-03-23T20:18:02Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads

== Supported file formats ==

* Fasta with qualities (&quot;fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Other features ==

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==


=== Requirements ===

* make
* g++
* openmpi (1.3.4 or 1.4.1)
* sequence data ;)
* Any GNU/Linux flavor will do.

=== Tested platforms ===

* Fedora
* CentOS
* Ubuntu

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Contigs.fasta.

== Examples ==

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Technology: Illumina paired-end reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna


=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Technology: Illumina reads and Roche 454

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq
 LoadSingleEndReads SRR006330.fastq
 LoadSingleEndReads SRR006465_1.fastq
 LoadSingleEndReads SRR006465_2.fastq
 LoadSingleEndReads SRR006465.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Technology: Illumina reads

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006331.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray template.ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>92</id>
      <timestamp>2010-03-23T20:18:45Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Examples */</comment>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads

== Supported file formats ==

* Fasta with qualities (&quot;fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Other features ==

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==


=== Requirements ===

* make
* g++
* openmpi (1.3.4 or 1.4.1)
* sequence data ;)
* Any GNU/Linux flavor will do.

=== Tested platforms ===

* Fedora
* CentOS
* Ubuntu

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Contigs.fasta.

== Examples ==

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna


=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq
 LoadSingleEndReads SRR006330.fastq
 LoadSingleEndReads SRR006465_1.fastq
 LoadSingleEndReads SRR006465_2.fastq
 LoadSingleEndReads SRR006465.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006331.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray template.ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>93</id>
      <timestamp>2010-03-24T13:56:13Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Tested technologies */</comment>
      <text xml:space="preserve">[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


* [http://sourceforge.net/projects/denovoassembler/files/ Download]
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list]
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Other features ==

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==


=== Requirements ===

* make
* g++
* openmpi (1.3.4 or 1.4.1)
* sequence data ;)
* Any GNU/Linux flavor will do.

=== Tested platforms ===

* Fedora
* CentOS
* Ubuntu

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Contigs.fasta.

== Examples ==

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna


=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq
 LoadSingleEndReads SRR006330.fastq
 LoadSingleEndReads SRR006465_1.fastq
 LoadSingleEndReads SRR006465_2.fastq
 LoadSingleEndReads SRR006465.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006331.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray template.ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>94</id>
      <timestamp>2010-03-25T15:16:55Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;
Ray utilizes a parallel version of the OpenAssembler algorithm (under review).

[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/ Download] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Other features ==

* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

== Installation ==


=== Requirements ===

* make
* g++
* openmpi (1.3.4 or 1.4.1)
* sequence data ;)
* Any GNU/Linux flavor will do.

=== Tested platforms ===

* Fedora
* CentOS
* Ubuntu

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

[http://sourceforge.net/projects/denovoassembler/files/ Download]

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

You must use mpirun:

 mpirun -np 1 -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1 cpu only
 mpirun -np 4  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # quad-core
 mpirun -np 1024  -machinefile RayMachinesFile.txt Ray RayInputTemplate.txt  # 1024 cpu

Basically, Ray understands two commands in RayInputTemplate.txt:

 LoadSingleEndReads &lt;sequencesFile&gt;

and

 LoadPairedEndReads &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;fragmentLengthStandardDeviation&gt;

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. Ray supports fasta, fastq, and sff formats. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Contigs.fasta.

== Examples ==

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna


=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Template.ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006332.fastq
 LoadSingleEndReads SRR006330.fastq
 LoadSingleEndReads SRR006465_1.fastq
 LoadSingleEndReads SRR006465_2.fastq
 LoadSingleEndReads SRR006465.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Template.ray
 LoadSingleEndReads SRR006331.fastq

* Command
 mpirun -np 32 Ray Template.ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpi as it is a pure parallel program with no
non-parallel steps. However, it is safe and reliable to run it with 1 cpu.
It currently works well with Open-MPI.
You may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition, you know something is wrong. The following command disables the btl sm at runtime.

 mpirun -np 32 --mca btl ^sm ./Ray template.ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

Paper:

We submitted a manuscript on 15 October 2009. The source code of OpenAssembler will be available upon acceptance.

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>95</id>
      <timestamp>2010-03-29T14:18:12Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;
It uses an assembly engine called &lt;i&gt;Parallel_Ray_Engine&lt;/i&gt;.


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/ Download] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq 215 10 -p 2.left.fastq 2.right.fastq 400 20 -a
 # produces Ray-Contigs.fasta and Ray-Contigs.afg

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.


We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation ===


[http://sourceforge.net/projects/denovoassembler/files/ Download] Ray

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

Basically, Ray understands these commands:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;standardDeviation&gt;
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputAmosFile&lt;/b&gt;
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Commands.Ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20
 OutputAmosFile

* Command line
 mpirun -np 32 Ray Commands.Ray

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Commands.Ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command line
 mpirun -np 32 Ray Commands.Ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command line
 mpirun -np 32 Ray Commands.Ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR006332.fastq

* Command line
 mpirun -np 32 Ray Commands.Ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR006332.fastq
 LoadSingleEndReads SRR006330.fastq
 LoadSingleEndReads SRR006465_1.fastq
 LoadSingleEndReads SRR006465_2.fastq
 LoadSingleEndReads SRR006465.fastq

* Command line
 mpirun -np 32 Ray Template.Ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR006331.fastq

* Command line
 mpirun -np 32 Ray Template.Ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>96</id>
      <timestamp>2010-04-11T16:02:45Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Do-it-yourself examples */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;
It uses an assembly engine called &lt;i&gt;Parallel_Ray_Engine&lt;/i&gt;.


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/ Download] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq 215 10 -p 2.left.fastq 2.right.fastq 400 20 -a
 # produces Ray-Contigs.fasta and Ray-Contigs.afg

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.


We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation ===


[http://sourceforge.net/projects/denovoassembler/files/ Download] Ray

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

Basically, Ray understands these commands:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;standardDeviation&gt;
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputAmosFile&lt;/b&gt;
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

* [[Comparisons with other assemblers for Ray 0.0.6]]

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Commands.Ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20
 OutputAmosFile

* Command line
 mpirun -np 32 Ray Commands.Ray

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Commands.Ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command line
 mpirun -np 32 Ray Commands.Ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command line
 mpirun -np 32 Ray Commands.Ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR006332.fastq

* Command line
 mpirun -np 32 Ray Commands.Ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR006332.fastq
 LoadSingleEndReads SRR006330.fastq
 LoadSingleEndReads SRR006465_1.fastq
 LoadSingleEndReads SRR006465_2.fastq
 LoadSingleEndReads SRR006465.fastq

* Command line
 mpirun -np 32 Ray Template.Ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR006331.fastq

* Command line
 mpirun -np 32 Ray Template.Ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>99</id>
      <timestamp>2010-04-24T12:21:52Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/ Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq 215 10 -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with LoadSingleEndReads)
* paired-end reads (with LoadPairedEndReads)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.


We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation ===


[http://sourceforge.net/projects/denovoassembler/files/ Download] Ray

 tar -xjf Ray-&lt;version&gt;.tar.bz2
 cd Ray-&lt;version&gt;
 make

To use an alternative mpic++ executable:

 make MPICC=/home/boiseb01/software/ompi-1.4.1-gcc/bin/mpic++

== Running Ray ==

Basically, Ray understands these commands:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; &lt;fragmentLength&gt; &lt;standardDeviation&gt;
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputAmosFile&lt;/b&gt;
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands, and the &lt;fragmentLength&gt; includes the read lengths. But beware!, if your sff file contains paired-end reads, you must first extract the information, and tell Ray to use them with LoadPairedEndReads.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

* [[Comparisons with other assemblers for Ray 0.0.6]]

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Commands.Ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20
 OutputAmosFile

* Command line
 mpirun -np 32 Ray Commands.Ray

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Commands.Ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command line
 mpirun -np 32 Ray Commands.Ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command line
 mpirun -np 32 Ray Commands.Ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR006332.fastq

* Command line
 mpirun -np 32 Ray Commands.Ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR006332.fastq
 LoadSingleEndReads SRR006330.fastq
 LoadSingleEndReads SRR006465_1.fastq
 LoadSingleEndReads SRR006465_2.fastq
 LoadSingleEndReads SRR006465.fastq

* Command line
 mpirun -np 32 Ray Template.Ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR006331.fastq

* Command line
 mpirun -np 32 Ray Template.Ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>100</id>
      <timestamp>2010-04-24T12:27:29Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


= Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile


* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

* [[Comparisons with other assemblers for Ray 0.0.6]]

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Commands.Ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20
 OutputAmosFile

* Command line
 mpirun -np 32 Ray Commands.Ray

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Commands.Ray
 LoadPairedEndReads SRR001665_1.fastq SRR001665_2.fastq 215 20
 LoadPairedEndReads SRR001666_1.fastq SRR001666_2.fastq 215 20

* Command line
 mpirun -np 32 Ray Commands.Ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR001665_1.fastq 
 LoadSingleEndReads SRR001665_2.fastq 
 LoadSingleEndReads SRR001666_1.fastq 
 LoadSingleEndReads SRR001666_2.fastq

* Command line
 mpirun -np 32 Ray Commands.Ray

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR006332.fastq

* Command line
 mpirun -np 32 Ray Commands.Ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR006332.fastq
 LoadSingleEndReads SRR006330.fastq
 LoadSingleEndReads SRR006465_1.fastq
 LoadSingleEndReads SRR006465_2.fastq
 LoadSingleEndReads SRR006465.fastq

* Command line
 mpirun -np 32 Ray Template.Ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Commands.Ray
 LoadSingleEndReads SRR006331.fastq

* Command line
 mpirun -np 32 Ray Template.Ray

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>101</id>
      <timestamp>2010-04-24T12:30:22Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Do-it-yourself examples */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


= Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile


* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

* [[Comparisons with other assemblers for Ray 0.0.6]]

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>102</id>
      <timestamp>2010-04-24T12:30:50Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Do-it-yourself examples */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


= Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile


* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>103</id>
      <timestamp>2010-04-24T12:31:11Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Running Ray = */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile


* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>104</id>
      <timestamp>2010-04-24T12:32:12Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Running Ray */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>105</id>
      <timestamp>2010-04-24T12:33:34Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Output:

&lt;pre&gt;
**************************************************
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions; see &quot;gpl-3.0.txt&quot; for details.
**************************************************

Ray Copyright (C) 2010  SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette
http://denovoassembler.sf.net/

AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
 Average length: auto
 Standard deviation: auto

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
 Average length: auto
 Standard deviation: auto

Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Distributing sequences
Counting vertices
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Indexing sequences
Connecting vertices
MinimumCoverage: 33
PeakCoverage: 109
Computing seeds
Library0: 215,11
Library1: 488,25
Extending seeds
Computing fusions
Finishing fusions
Collecting fusions
              
Writing Ray-Contigs.fasta
160 contigs/4599700 nucleotides
Elapsed time: 0 d 0 h 47 min 41 s
&lt;/pre&gt;

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>106</id>
      <timestamp>2010-04-24T12:36:27Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]
* [[Changes]]

Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== Comparisons with other assemblers ==

* [[Comparisons with other assemblers for Ray 0.0.6]]
* [[Comparisons for Ray 0.0.7]]

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Output:

&lt;pre&gt;
**************************************************
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions; see &quot;gpl-3.0.txt&quot; for details.
**************************************************

Ray Copyright (C) 2010  SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette
http://denovoassembler.sf.net/

AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
 Average length: auto
 Standard deviation: auto

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
 Average length: auto
 Standard deviation: auto

Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Distributing sequences
Counting vertices
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Indexing sequences
Connecting vertices
MinimumCoverage: 33
PeakCoverage: 109
Computing seeds
Library0: 215,11
Library1: 488,25
Extending seeds
Computing fusions
Finishing fusions
Collecting fusions
              
Writing Ray-Contigs.fasta
160 contigs/4599700 nucleotides
Elapsed time: 0 d 0 h 47 min 41 s
&lt;/pre&gt;

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>119</id>
      <timestamp>2010-04-24T12:44:14Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]
* [[Changes]]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== Comparisons with other assemblers ==

* [[Comparisons with other assemblers for Ray 0.0.6]]
* [[Comparisons for Ray 0.0.7]]

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Output:

&lt;pre&gt;
**************************************************
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions; see &quot;gpl-3.0.txt&quot; for details.
**************************************************

Ray Copyright (C) 2010  SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette
http://denovoassembler.sf.net/

AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
 Average length: auto
 Standard deviation: auto

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
 Average length: auto
 Standard deviation: auto

Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Distributing sequences
Counting vertices
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Indexing sequences
Connecting vertices
MinimumCoverage: 33
PeakCoverage: 109
Computing seeds
Library0: 215,11
Library1: 488,25
Extending seeds
Computing fusions
Finishing fusions
Collecting fusions
              
Writing Ray-Contigs.fasta
160 contigs/4599700 nucleotides
Elapsed time: 0 d 0 h 47 min 41 s
&lt;/pre&gt;

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>125</id>
      <timestamp>2010-04-24T12:53:54Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Acknowledgments */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]
* [[Changes]]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== Comparisons with other assemblers ==

* [[Comparisons with other assemblers for Ray 0.0.6]]
* [[Comparisons for Ray 0.0.7]]

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Output:

&lt;pre&gt;
**************************************************
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions; see &quot;gpl-3.0.txt&quot; for details.
**************************************************

Ray Copyright (C) 2010  SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette
http://denovoassembler.sf.net/

AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
 Average length: auto
 Standard deviation: auto

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
 Average length: auto
 Standard deviation: auto

Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Distributing sequences
Counting vertices
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Indexing sequences
Connecting vertices
MinimumCoverage: 33
PeakCoverage: 109
Computing seeds
Library0: 215,11
Library1: 488,25
Extending seeds
Computing fusions
Finishing fusions
Collecting fusions
              
Writing Ray-Contigs.fasta
160 contigs/4599700 nucleotides
Elapsed time: 0 d 0 h 47 min 41 s
&lt;/pre&gt;

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research] ([http://dskernel.blogspot.com/2010/04/masters-award.html Master's award: 200910MDR-215249-172830] and [http://dskernel.blogspot.com/2010/04/doctoral-award.html Doctoral award: 200902CGM-204212-172830]).
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>129</id>
      <timestamp>2010-04-24T13:00:03Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Acknowledgments */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]
* [[Changes]]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== Comparisons with other assemblers ==

* [[Comparisons with other assemblers for Ray 0.0.6]]
* [[Comparisons for Ray 0.0.7]]

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Output:

&lt;pre&gt;
**************************************************
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions; see &quot;gpl-3.0.txt&quot; for details.
**************************************************

Ray Copyright (C) 2010  SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette
http://denovoassembler.sf.net/

AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
 Average length: auto
 Standard deviation: auto

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
 Average length: auto
 Standard deviation: auto

Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Distributing sequences
Counting vertices
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Indexing sequences
Connecting vertices
MinimumCoverage: 33
PeakCoverage: 109
Computing seeds
Library0: 215,11
Library1: 488,25
Extending seeds
Computing fusions
Finishing fusions
Collecting fusions
              
Writing Ray-Contigs.fasta
160 contigs/4599700 nucleotides
Elapsed time: 0 d 0 h 47 min 41 s
&lt;/pre&gt;

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research] ([http://dskernel.blogspot.com/2010/04/masters-award.html Master's award: 200910MDR-215249-172830] and [http://dskernel.blogspot.com/2010/04/doctoral-award.html Doctoral award: 200902CGM-204212-172830]).
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.

&lt;img src=&quot;http://www.cihr-irsc.gc.ca/images/cihr_logo_big_e.gif&quot; /&gt;</text>
    </revision>
    <revision>
      <id>130</id>
      <timestamp>2010-04-24T13:01:13Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Acknowledgments */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]
* [[Changes]]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== Comparisons with other assemblers ==

* [[Comparisons with other assemblers for Ray 0.0.6]]
* [[Comparisons for Ray 0.0.7]]

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Output:

&lt;pre&gt;
**************************************************
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions; see &quot;gpl-3.0.txt&quot; for details.
**************************************************

Ray Copyright (C) 2010  SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette
http://denovoassembler.sf.net/

AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
 Average length: auto
 Standard deviation: auto

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
 Average length: auto
 Standard deviation: auto

Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Distributing sequences
Counting vertices
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Indexing sequences
Connecting vertices
MinimumCoverage: 33
PeakCoverage: 109
Computing seeds
Library0: 215,11
Library1: 488,25
Extending seeds
Computing fusions
Finishing fusions
Collecting fusions
              
Writing Ray-Contigs.fasta
160 contigs/4599700 nucleotides
Elapsed time: 0 d 0 h 47 min 41 s
&lt;/pre&gt;

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research] ([http://dskernel.blogspot.com/2010/04/masters-award.html Master's award: 200910MDR-215249-172830] and [http://dskernel.blogspot.com/2010/04/doctoral-award.html Doctoral award: 200902CGM-204212-172830]).
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.</text>
    </revision>
    <revision>
      <id>132</id>
      <timestamp>2010-04-24T13:02:14Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Acknowledgments */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]
* [[Changes]]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== Comparisons with other assemblers ==

* [[Comparisons with other assemblers for Ray 0.0.6]]
* [[Comparisons for Ray 0.0.7]]

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Output:

&lt;pre&gt;
**************************************************
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions; see &quot;gpl-3.0.txt&quot; for details.
**************************************************

Ray Copyright (C) 2010  SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette
http://denovoassembler.sf.net/

AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
 Average length: auto
 Standard deviation: auto

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
 Average length: auto
 Standard deviation: auto

Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Distributing sequences
Counting vertices
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Indexing sequences
Connecting vertices
MinimumCoverage: 33
PeakCoverage: 109
Computing seeds
Library0: 215,11
Library1: 488,25
Extending seeds
Computing fusions
Finishing fusions
Collecting fusions
              
Writing Ray-Contigs.fasta
160 contigs/4599700 nucleotides
Elapsed time: 0 d 0 h 47 min 41 s
&lt;/pre&gt;

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research] ([http://dskernel.blogspot.com/2010/04/masters-award.html Master's award: 200910MDR-215249-172830] and [http://dskernel.blogspot.com/2010/04/doctoral-award.html Doctoral award: 200902CGM-204212-172830]).
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.


[File:Cihr logo big e.gif]</text>
    </revision>
    <revision>
      <id>133</id>
      <timestamp>2010-04-24T13:02:30Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Acknowledgments */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]
* [[Changes]]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== Comparisons with other assemblers ==

* [[Comparisons with other assemblers for Ray 0.0.6]]
* [[Comparisons for Ray 0.0.7]]

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Output:

&lt;pre&gt;
**************************************************
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions; see &quot;gpl-3.0.txt&quot; for details.
**************************************************

Ray Copyright (C) 2010  SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette
http://denovoassembler.sf.net/

AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
 Average length: auto
 Standard deviation: auto

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
 Average length: auto
 Standard deviation: auto

Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Distributing sequences
Counting vertices
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Indexing sequences
Connecting vertices
MinimumCoverage: 33
PeakCoverage: 109
Computing seeds
Library0: 215,11
Library1: 488,25
Extending seeds
Computing fusions
Finishing fusions
Collecting fusions
              
Writing Ray-Contigs.fasta
160 contigs/4599700 nucleotides
Elapsed time: 0 d 0 h 47 min 41 s
&lt;/pre&gt;

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research] ([http://dskernel.blogspot.com/2010/04/masters-award.html Master's award: 200910MDR-215249-172830] and [http://dskernel.blogspot.com/2010/04/doctoral-award.html Doctoral award: 200902CGM-204212-172830]).
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.


[[File:Cihr logo big e.gif]]</text>
    </revision>
    <revision>
      <id>134</id>
      <timestamp>2010-04-24T13:03:45Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]
* [http://sourceforge.net/apps/mediawiki/denovoassembler/index.php?title=Main_Page#Acknowledgments Acknowledgments]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== Comparisons with other assemblers ==

* [[Comparisons with other assemblers for Ray 0.0.6]]
* [[Comparisons for Ray 0.0.7]]

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Output:

&lt;pre&gt;
**************************************************
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions; see &quot;gpl-3.0.txt&quot; for details.
**************************************************

Ray Copyright (C) 2010  SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette
http://denovoassembler.sf.net/

AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
 Average length: auto
 Standard deviation: auto

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
 Average length: auto
 Standard deviation: auto

Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Distributing sequences
Counting vertices
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Indexing sequences
Connecting vertices
MinimumCoverage: 33
PeakCoverage: 109
Computing seeds
Library0: 215,11
Library1: 488,25
Extending seeds
Computing fusions
Finishing fusions
Collecting fusions
              
Writing Ray-Contigs.fasta
160 contigs/4599700 nucleotides
Elapsed time: 0 d 0 h 47 min 41 s
&lt;/pre&gt;

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research] ([http://dskernel.blogspot.com/2010/04/masters-award.html Master's award: 200910MDR-215249-172830] and [http://dskernel.blogspot.com/2010/04/doctoral-award.html Doctoral award: 200902CGM-204212-172830]).
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.


[[File:Cihr logo big e.gif]]</text>
    </revision>
    <revision>
      <id>135</id>
      <timestamp>2010-04-24T13:04:13Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Comparisons with other assemblers */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]
* [http://sourceforge.net/apps/mediawiki/denovoassembler/index.php?title=Main_Page#Acknowledgments Acknowledgments]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== Comparisons with other assemblers ==

* [[Comparisons with other assemblers for Ray 0.0.6]]
* [[Comparisons for Ray 0.0.7]]

== [[Changes]] ==

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make


== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Output:

&lt;pre&gt;
**************************************************
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions; see &quot;gpl-3.0.txt&quot; for details.
**************************************************

Ray Copyright (C) 2010  SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette
http://denovoassembler.sf.net/

AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
 Average length: auto
 Standard deviation: auto

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
 Average length: auto
 Standard deviation: auto

Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Distributing sequences
Counting vertices
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Indexing sequences
Connecting vertices
MinimumCoverage: 33
PeakCoverage: 109
Computing seeds
Library0: 215,11
Library1: 488,25
Extending seeds
Computing fusions
Finishing fusions
Collecting fusions
              
Writing Ray-Contigs.fasta
160 contigs/4599700 nucleotides
Elapsed time: 0 d 0 h 47 min 41 s
&lt;/pre&gt;

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research] ([http://dskernel.blogspot.com/2010/04/masters-award.html Master's award: 200910MDR-215249-172830] and [http://dskernel.blogspot.com/2010/04/doctoral-award.html Doctoral award: 200902CGM-204212-172830]).
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.


[[File:Cihr logo big e.gif]]</text>
    </revision>
    <revision>
      <id>136</id>
      <timestamp>2010-04-24T13:05:13Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Compilation with mpic++ */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]
* [http://sourceforge.net/apps/mediawiki/denovoassembler/index.php?title=Main_Page#Acknowledgments Acknowledgments]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== Comparisons with other assemblers ==

* [[Comparisons with other assemblers for Ray 0.0.6]]
* [[Comparisons for Ray 0.0.7]]

== [[Changes]] ==

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[https://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make

== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Output:

&lt;pre&gt;
**************************************************
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions; see &quot;gpl-3.0.txt&quot; for details.
**************************************************

Ray Copyright (C) 2010  SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette
http://denovoassembler.sf.net/

AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
 Average length: auto
 Standard deviation: auto

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
 Average length: auto
 Standard deviation: auto

Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Distributing sequences
Counting vertices
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Indexing sequences
Connecting vertices
MinimumCoverage: 33
PeakCoverage: 109
Computing seeds
Library0: 215,11
Library1: 488,25
Extending seeds
Computing fusions
Finishing fusions
Collecting fusions
              
Writing Ray-Contigs.fasta
160 contigs/4599700 nucleotides
Elapsed time: 0 d 0 h 47 min 41 s
&lt;/pre&gt;

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research] ([http://dskernel.blogspot.com/2010/04/masters-award.html Master's award: 200910MDR-215249-172830] and [http://dskernel.blogspot.com/2010/04/doctoral-award.html Doctoral award: 200902CGM-204212-172830]).
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.


[[File:Cihr logo big e.gif]]</text>
    </revision>
    <revision>
      <id>137</id>
      <timestamp>2010-04-24T13:05:29Z</timestamp>
      <contributor>
        <username>Sebhtml</username>
        <id>6</id>
      </contributor>
      <comment>/* Compilation with mpic++ */</comment>
      <text xml:space="preserve">&lt;b&gt;[http://en.wikipedia.org/wiki/Metal_Gear_(weapon)#Metal_Gear_RAY Ray is a computer-controlled software] that perform parallel de novo genome assemblies of [http://dx.doi.org/doi:10.1038/nmeth.1376 next-gen sequencing data] using [http://www.open-mpi.org/ message passing interface].&lt;/b&gt;


[http://denovoassembler.sf.net/ DeNovoAssembler.SF.Net] hosts the Ray project -- a massively parallel open source genome assembler for sequencers such as [http://454.com/ Roche 454 sequencers], [http://illumina.com/ Illumina sequencers], [http://solid.appliedbiosystems.com/ SOLiD sequencers], [http://www.pacificbiosciences.com/ Pacific Biosciences sequencers], [http://www.helicosbio.com/ Helicos Biosciences sequencers], and exciting [http://www.iontorrent.com/ Ion Torrent] semiconductor-based sequencers. 


Quick links:
* [http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7] 
* [http://lists.sourceforge.net/lists/listinfo/denovoassembler-users Mailing list] 
* [http://seqanswers.com/forums/showthread.php?t=4301 SeqAnswers.com thread]
* [http://sourceforge.net/apps/mediawiki/denovoassembler/index.php?title=Main_Page#Acknowledgments Acknowledgments]


Illumina paired assembly kickstart with [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye AMOS] output:
 mpirun -np 32 Ray -p 1.left.fastq 2.right.fastq -p 2.left.fastq 2.right.fastq -a AMOS.afg -o CONTIGS.fa

= Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies =

Ray is a parallel genome assembler utilizing [http://en.wikipedia.org/wiki/Message_Passing_Interface MPI]. 
Ray is a single-executable program (the executable is Ray). Its aim is to assemble sequences on
mpi-enabled computers or clusters.
Ray is implemented in c++.
Only the master rank needs to access the files on disk. 

== Tested technologies ==

* Illumina paired-end reads
* Illumina single-end reads
* Roche 454 reads and Illumina reads together

== Supported file formats ==

* Fasta with qualities (&quot;.fastq&quot;)
* SFF (&quot;.sff&quot;)
* Fasta (&quot;.fasta&quot;)

== Reads ==

* single-end reads (with -s)
* paired-end reads (with -p)

== Key features ==

* [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Message_Types AMOS output] for assembly viewers such as [http://sourceforge.net/apps/mediawiki/amos/index.php?title=Hawkeye Hawkeye] &amp; [http://bioinf.scri.ac.uk/tablet/ Tablet] (with OutputAmosFile)
* is massively parallel
* supports the mixing of sequencing technologies, as long as the error incorporation is random
* is implemented in c++
* distributes computation across MPI processes
* distributes data across MPI processes
* runs on one and more MPI processes
* runs on [http://en.wikipedia.org/wiki/InfiniBand Infiniband] (thanks to [http://open-mpi.org/ Open-MPI])
* computation of average length and standard deviation for paired reads

== Comparisons with other assemblers ==

* [[Comparisons with other assemblers for Ray 0.0.6]]
* [[Comparisons for Ray 0.0.7]]

== [[Changes]] ==

== How to cite us?==

 SÃ©bastien Boisvert, Jacques Corbeil, and FranÃ§ois Laviolette. 
 Ray: a massively parallel MPI-based approach for genome assembly with mixed technologies. 
 http://denovoassembler.sf.net/, 2010.

We have a paper about Ray under review.

== Installation ==


=== Requirements ===

* [http://www.gnu.org/software/make/ make]
* [http://gcc.gnu.org/ g++]
* [http://www.open-mpi.org/ Open-MPI] (1.3.4 or 1.4.1) &lt;span style=&quot;color: red&quot;&gt;MPICH2 and MVAPICH are not supported&lt;/span&gt;
* [http://www.ncbi.nlm.nih.gov/sra sequence data] ;)

Many available GNU/Linux flavors have packages for these requirements.

=== Tested architectures ===

* x86_64
** [http://intel.com/ Intel](R) Xeon(R) CPU           X5560  @ 2.80GHz
** Quad-Core [http://amd.com/ AMD] Opteron(tm) Processor 8378

=== Tested platforms ===

* [http://fedoraproject.org/ Fedora]
* [http://www.centos.org/ CentOS]
* [http://www.ubuntu.com/ Ubuntu]

=== License ===

* [http://www.gnu.org/licenses/gpl-3.0.html GPL version 3]

=== Compilation with mpic++ ===


[http://sourceforge.net/projects/denovoassembler/files/Ray-0.0.7.tar.bz2/download Download Ray 0.0.7]

 tar -xjf Ray-0.0.7.tar.bz2
 cd Ray-0.0.7
 make

== Running Ray ==

Ray understands these:

* &lt;b&gt;LoadSingleEndReads&lt;/b&gt; &lt;sequencesFile&gt;
aliases: -s, LoadSingleEndReads, -LoadSingleEndReads, --LoadSingleEndReads

* &lt;b&gt;LoadPairedEndReads&lt;/b&gt; &lt;leftSequencesFile&gt; &lt;rightSequencesFile&gt; [ &lt;fragmentLength&gt; &lt;standardDeviation&gt; ]
aliases: -p, LoadPairedEndReads, -LoadPairedEndReads, --LoadPairedEndReads

* &lt;b&gt;OutputFile&lt;/b&gt; &lt;outputFile&gt; (default: Ray-Contigs.fasta)
aliases: -o, OutputFile, -OutputFile, --OutputFile

* &lt;b&gt;OutputAmosFile&lt;/b&gt; [ &lt;amosFile&gt; ] (default: Ray-Contigs.afg)
aliases: -a, OutputAmosFile, -OutputAmosFile, --OutputAmosFile


Ray receives commands with command-line arguments or with a commands file. 

&lt;leftSequencesFile&gt; and &lt;rightSequencesFile&gt; must contain the exact same number of sequences, paired reads must be on reverse strands and face each other, and the &lt;fragmentLength&gt; includes the read lengths.

Ray writes contigs to Ray-Contigs.fasta. Ray also writes Ray-Contigs.afg if the command &quot;OutputAmosFile&quot; is given.

Ray is run with mpirun:

1 cpu only:
 mpirun -np 1 Ray Commands.Ray
quad-core:
 mpirun -np 4 Ray Commands.Ray
1024 cpu (you'll probably use Sun Grid Engine for that):
 mpirun -np 1024  -machinefile mpirun.MachinesFile Ray Commands.Ray


For help:

 mpirun -np 32 Ray --help

== Do-it-yourself examples ==

=== E. coli K-12 MG1655 with Illumina paired-end reads &amp; amos output ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq -a

* Output:

&lt;pre&gt;
**************************************************
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions; see &quot;gpl-3.0.txt&quot; for details.
**************************************************

Ray Copyright (C) 2010  SÃ©bastien Boisvert, Jacques Corbeil, FranÃ§ois Laviolette
http://denovoassembler.sf.net/

AssemblyEngine: Ray 0.0.7
NumberOfRanks: 25
MPILibrary: Open-MPI 1.4.1
OperatingSystem: Linux

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
 Average length: auto
 Standard deviation: auto

LoadPairedEndReads
 Left sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
 Right sequences: /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
 Average length: auto
 Standard deviation: auto

Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Distributing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Distributing sequences
Counting vertices
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001665_2.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_1.fastq
Indexing sequences
Loading /data/users/boiseb01/PaperDatasets/SRA001125/200xSRR001666_2.fastq
Indexing sequences
Connecting vertices
MinimumCoverage: 33
PeakCoverage: 109
Computing seeds
Library0: 215,11
Library1: 488,25
Extending seeds
Computing fusions
Finishing fusions
Collecting fusions
              
Writing Ray-Contigs.fasta
160 contigs/4599700 nucleotides
Elapsed time: 0 d 0 h 47 min 41 s
&lt;/pre&gt;

* Hawkeye command lines:
 bank-transact -c -m Ray-Contigs.afg -b Ray-Contigs.bank
 hawkeye Ray-Contigs.bank

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina paired-end reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -p SRR001665_1.fastq SRR001665_2.fastq -p SRR001666_1.fastq SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Escherichia coli K-12 MG1655 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000429/SRR001665_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX000/SRX000430/SRR001666_2.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR001665_1.fastq -s SRR001665_2.fastq -s SRR001666_1.fastq -s SRR001666_2.fastq

* Reference
 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655/NC_000913.fna

=== Acinetobacter baylyi ADP1 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Acinetobacter baylyi ADP1 with Illumina and Roche 454 reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006332.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_1.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001865/SRR006465_2.fastq.gz
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001813/SRR006330.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006332.fastq -s SRR006330.fastq -s SRR006465_1.fastq \
  -s SRR006465_2.fastq -s  SRR006465.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Acinetobacter_sp_ADP1/NC_005966.fna

=== Mycoplasma agalactiae PG2 with Illumina reads ===

* Reads
 ftp://ftp.ncbi.nlm.nih.gov/sra/static/SRX001/SRX001814/SRR006331.fastq.gz

* Command line
 mpirun -np 32 Ray -s SRR006331.fastq

* Reference
 ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Mycoplasma_agalactiae_PG2/NC_009497.fna

== Limitations ==

Ray can not run without mpirun. However, it is safe and reliable to run it with 1 cpu. 

In Open-MPI, you may have to disable the Byte Transfer Layer called Shared Memory to avoid a race condition in the spinlock of Open-MPI. This problem is presumably due to a processor defective design rather than a defect in Open-MPI. The lock instruction is supposed to lock the bus, so if you encounter the race condition (in general, it hangs), you know something is wrong. The following command disables the btl sm at runtime. In our benchmarks on Human Chromosome 1 with short reads, we found that disabling shared memory was necessary.

 mpirun -np 32 --mca btl ^sm Ray Commands.Ray

= OpenAssembler: assembling genome with mixed sequencing technologies =

OpenAssembler assembles Illumina reads or 454 + Illumina reads, or any combination without non-random error incorporation. The manuscript is under review. Its novelty is that it avoids both 454's homopolymers and Illumina's short read length. Unlike EULER-SR, Velvet, or ABySS, OpenAssembler can assemble reads obtained from a mix of technology. However, it runs only on one process. 

=== References ===

We published an abstract on OpenAssembler in a conference:

 OpenAssembler: assembly of reads from a mix of high-throughput sequencing technologies. 
 SÃ©bastien Boisvert, FranÃ§ois Laviolette, Jacques Corbeil. 
 [http://www.centrerc.umontreal.ca/colloque2009a.html Robert Cedergren Bioinformatics Colloquium 2009], 2009.

= Acknowledgments =

Developing an open source assembler is made possible by investing in research infrastructure. We are very thankful to the [http://www.clumeq.ca/ CLUMEQ consortium] for access to [http://www.top500.org/site/systems/3088 colosse], a 7680-slot computer. Our hardware infrastructure is mostly funded by the [http://www.innovation.ca/en Canada Foundation for Innovation].

Scholarships and grants are equally important. [http://boisvert.info/ SÃ©bastien Boisvert] has a scholarship from the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research] ([http://dskernel.blogspot.com/2010/04/masters-award.html Master's award: 200910MDR-215249-172830] and [http://dskernel.blogspot.com/2010/04/doctoral-award.html Doctoral award: 200902CGM-204212-172830]).
[http://www.cri.ulaval.ca/?jcorbeil_eng Jacques Corbeil] is the [http://genome.ulaval.ca/corbeillab Canada Research Chair in Medical Genomics] and is funded by the [http://www.cihr-irsc.gc.ca/e/193.html Canadian Institutes of Health Research].
[http://www.cs.ucl.ac.uk/people/F.Laviolette.html FranÃ§ois Laviolette] is funded by [http://www.nserc-crsng.gc.ca/ Natural Sciences and Engineering Research Council of Canada]. 

We thank [http://sourceforge.net/ SourceForge] for the project hosting. We are also thankful to the Free/Libre Open Source Software community for outstanding projects such as [http://www.gnu.org/ GNU], [http://gcc.gnu.org/ g++], [http://www.open-mpi.org/ Open-MPI], [http://kernel.org/ Linux], just to name a few.


[[File:Cihr logo big e.gif]]</text>
    </revision>
  </page>
</mediawiki>

 	  	 
